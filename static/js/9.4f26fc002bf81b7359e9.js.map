{"version":3,"sources":["webpack:///./src/services/transaction.js","webpack:///./src/services/wallet.js","webpack:///./src/pages/Wallet/Transactions.vue?1276","webpack:///./src/pages/Wallet/Transactions.vue?6839","webpack:///src/pages/Wallet/Transactions.vue","webpack:///./src/pages/Wallet/Transactions.vue"],"names":["TransactionService","limit","a","wrap","t","prev","next","_services_node__WEBPACK_IMPORTED_MODULE_4__","get","params","orderBy","response","data","transactions","id","transaction","page","offset","blockId","type","address","senderId","recipientId","count","__webpack_exports__","WalletService","account","delegate","delegates","abrupt","stop","this","e","apply","arguments","key","value","i","mark","n","accounts","r","s","c","u","Wallet_Transactionsvue_type_script_lang_js","totalTransactions","created","_this","$on","changePage","getTotalTransactions","beforeRouteEnter","to","from","_this2","asyncToGenerator_default","regenerator_default","_callee","wallet","_context","services_wallet","find","sent","vm","setTransactions","t0","catch","name","beforeRouteUpdate","_this3","_callee2","_context2","computed","$route","methods","getSentCount","getReceivedCount","_this4","_callee3","_context3","sentByAddressCount","Number","_this5","_callee4","received","_context4","receivedByAddressCount","$router","push","component","Object","componentNormalizer","_vm","_h","$createElement","_c","_self","staticClass","_v","_s","$t","capitalize","attrs","start","_e","default"],"mappings":"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","file":"static/js/9.4f26fc002bf81b7359e9.js","sourcesContent":["import NodeService from '@/services/node'\r\n\r\nclass TransactionService {\r\n  async latest(limit = 25) {\r\n    const response = await NodeService.get('transactions', {\r\n      params: {\r\n        orderBy: 'timestamp:desc',\r\n        limit\r\n      }\r\n    })\r\n    return response.data.transactions\r\n  }\r\n\r\n  async find(id) {\r\n    const response = await NodeService.get('transactions/get', {\r\n      params: {\r\n        id\r\n      }\r\n    })\r\n    return response.data.transaction\r\n  }\r\n\r\n  async findByBlock(id, page = 1, limit = 25) {\r\n    const offset = page > 1 ? (page - 1) * limit : 0\r\n\r\n    const response = await NodeService.get('transactions', {\r\n      params: {\r\n        blockId: id,\r\n        limit,\r\n        offset,\r\n        orderBy: 'timestamp:desc'\r\n      }\r\n    })\r\n    return response.data.transactions\r\n  }\r\n\r\n  async latestRegistrations() {\r\n    const response = await NodeService.get('transactions', {\r\n      params: {\r\n        orderBy: 'timestamp:desc',\r\n        limit: 5,\r\n        type: 2\r\n      }\r\n    })\r\n    return response.data.transactions\r\n  }\r\n\r\n  async latestVotes() {\r\n    const response = await NodeService.get('transactions', {\r\n      params: {\r\n        orderBy: 'timestamp:desc',\r\n        limit: 5,\r\n        type: 3\r\n      }\r\n    })\r\n    return response.data.transactions\r\n  }\r\n\r\n  async allByAddress(address, page = 1, limit = 25) {\r\n    const offset = page > 1 ? (page - 1) * limit : 0\r\n\r\n    const response = await NodeService.get('transactions', {\r\n      params: {\r\n        senderId: address,\r\n        recipientId: address,\r\n        limit,\r\n        offset,\r\n        orderBy: 'timestamp:desc'\r\n      }\r\n    })\r\n    return response.data.transactions\r\n  }\r\n\r\n  async sentByAddress(senderId, page = 1, limit = 25) {\r\n    const offset = page > 1 ? (page - 1) * limit : 0\r\n\r\n    const response = await NodeService.get('transactions', {\r\n      params: {\r\n        senderId,\r\n        limit,\r\n        offset,\r\n        orderBy: 'timestamp:desc'\r\n      }\r\n    })\r\n    return response.data.transactions\r\n  }\r\n\r\n  async receivedByAddress(recipientId, page = 1, limit = 25) {\r\n    const offset = page > 1 ? (page - 1) * limit : 0\r\n\r\n    const response = await NodeService.get('transactions', {\r\n      params: {\r\n        recipientId,\r\n        limit,\r\n        offset,\r\n        orderBy: 'timestamp:desc'\r\n      }\r\n    })\r\n    return response.data.transactions\r\n  }\r\n\r\n  async sentByAddressCount(senderId) {\r\n    const response = await NodeService.get('transactions', {\r\n      params: {\r\n        senderId,\r\n        limit: 1\r\n      }\r\n    })\r\n    return response.data.count\r\n  }\r\n\r\n  async receivedByAddressCount(recipientId) {\r\n    const response = await NodeService.get('transactions', {\r\n      params: {\r\n        recipientId,\r\n        limit: 1\r\n      }\r\n    })\r\n    return response.data.count\r\n  }\r\n\r\n  async findByBlockCount(blockId) {\r\n    const response = await NodeService.get('transactions', {\r\n      params: {\r\n        blockId,\r\n        limit: 1\r\n      }\r\n    })\r\n    return response.data.count\r\n  }\r\n\r\n  async paginate(page, limit = 25) {\r\n    const offset = (page > 1) ? (page - 1) * limit : 0\r\n\r\n    const response = await NodeService.get('transactions', {\r\n      params: {\r\n        orderBy: 'timestamp:desc',\r\n        limit,\r\n        offset\r\n      }\r\n    })\r\n    return response.data.transactions\r\n  }\r\n\r\n  async paginateByAddress(address, page = 1, limit = 25) {\r\n    const offset = (page > 1) ? (page - 1) * limit : 0\r\n\r\n    const response = await NodeService.get('transactions', {\r\n      params: {\r\n        senderId: address,\r\n        recipientId: address,\r\n        limit,\r\n        offset,\r\n        orderBy: 'timestamp:desc'\r\n      }\r\n    })\r\n    return response.data.transactions\r\n  }\r\n}\r\n\r\nexport default new TransactionService()\r\n","import NodeService from '@/services/node'\r\n\r\nclass WalletService {\r\n  async find(address) {\r\n    const response = await NodeService.get('accounts', {\r\n      params: {address}\r\n    })\r\n    return response.data.account\r\n  }\r\n\r\n  async vote(address) {\r\n    const response = await NodeService.get('accounts/delegates', {\r\n      params: {\r\n        address\r\n      }\r\n    })\r\n\r\n    const delegate = response.data.delegates[0]\r\n\r\n    return delegate || false\r\n  }\r\n\r\n  async top(page = 1, limit = 25) {\r\n    const offset = page > 1 ? (page - 1) * limit : 0\r\n\r\n    const response = await NodeService.get('accounts/top', {\r\n      params: {\r\n        orderBy: 'balance:desc',\r\n        limit,\r\n        offset\r\n      }\r\n    })\r\n    return response.data.accounts\r\n  }\r\n}\r\n\r\nexport default new WalletService()\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"max-w-2xl mx-auto pt-5\"},[_c('content-header',[_vm._v(_vm._s(_vm.$t(\"Transactions\"))+\" - \"+_vm._s(_vm.$t(_vm.capitalize(_vm.type))))]),_vm._v(\" \"),_c('section',{staticClass:\"page-section py-10\"},[_c('div',{staticClass:\"hidden sm:block\"},[_c('table-transactions',{attrs:{\"transactions\":_vm.transactions}})],1),_vm._v(\" \"),_c('div',{staticClass:\"sm:hidden\"},[_c('table-transactions-mobile',{attrs:{\"transactions\":_vm.transactions}})],1),_vm._v(\" \"),(_vm.transactions)?_c('paginator',{attrs:{\"start\":+this.page,\"count\":_vm.totalTransactions}}):_vm._e()],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Transactions.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Transactions.vue?vue&type=script&lang=js\"","<template>\r\n  <div class=\"max-w-2xl mx-auto pt-5\">\r\n    <content-header>{{ $t(\"Transactions\") }} - {{ $t(capitalize(type)) }}</content-header>\r\n    <section class=\"page-section py-10\">\r\n      <div class=\"hidden sm:block\">\r\n        <table-transactions :transactions=\"transactions\"></table-transactions>\r\n      </div>\r\n      <div class=\"sm:hidden\">\r\n        <table-transactions-mobile :transactions=\"transactions\"></table-transactions-mobile>\r\n      </div>\r\n      <paginator v-if=\"transactions\" :start=\"+this.page\" :count=\"totalTransactions\"></paginator>\r\n    </section>\r\n  </div>\r\n</template>\r\n\r\n<script type=\"text/ecmascript-6\">\r\nimport WalletService from '@/services/wallet'\r\nimport TransactionService from '@/services/transaction'\r\n\r\nexport default {\r\n  data: () => ({\r\n    totalTransactions: 0,\r\n    transactions: null\r\n  }),\r\n\r\n  created() {\r\n    this.$on('paginatorChanged', page => this.changePage(page))\r\n    this.getTotalTransactions()\r\n  },\r\n\r\n  async beforeRouteEnter (to, from, next) {\r\n    try {\r\n      const wallet = await WalletService.find(to.params.address)\r\n      const transactions = await TransactionService[`${to.params.type}ByAddress`](wallet.address, to.params.page)\r\n      next(vm => vm.setTransactions(transactions))\r\n    } catch(e) { next({ name: '404' }) }\r\n  },\r\n\r\n  async beforeRouteUpdate (to, from, next) {\r\n    this.transactions = null\r\n\r\n    try {\r\n      const wallet = await WalletService.find(to.params.address)\r\n      const transactions = await TransactionService[`${to.params.type}ByAddress`](wallet.address, to.params.page)\r\n      this.setTransactions(transactions)\r\n      next()\r\n    } catch(e) { next({ name: '404' }) }\r\n  },\r\n\r\n  computed: {\r\n    address() {\r\n      return this.$route.params.address\r\n    },\r\n    type() {\r\n      return this.$route.params.type\r\n    },\r\n    page() {\r\n      return this.$route.params.page\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    setTransactions (transactions) {\r\n      if (!transactions) return\r\n\r\n      this.transactions = transactions\r\n    },\r\n\r\n    getTotalTransactions() {\r\n      if (this.type === 'sent' || this.type === 'all') {\r\n        this.getSentCount()\r\n      }\r\n      if (this.type === 'received' || this.type === 'all') {\r\n        this.getReceivedCount()\r\n      }\r\n    },\r\n\r\n    async getSentCount() {\r\n      const wallet = await WalletService.find(this.address)\r\n      const response = await TransactionService.sentByAddressCount(wallet.address)\r\n      this.totalTransactions += Number(response)\r\n    },\r\n\r\n    async getReceivedCount() {\r\n      const wallet = await WalletService.find(this.address)\r\n      const received = await TransactionService.receivedByAddressCount(wallet.address)\r\n      this.totalTransactions += Number(received)\r\n    },\r\n\r\n    changePage(page) {\r\n      this.$router.push({\r\n        name: 'wallet-transactions',\r\n        params: {\r\n          address: this.address,\r\n          type: this.type,\r\n          page,\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import { render, staticRenderFns } from \"./Transactions.vue?vue&type=template&id=86d0558a\"\nimport script from \"./Transactions.vue?vue&type=script&lang=js\"\nexport * from \"./Transactions.vue?vue&type=script&lang=js\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}