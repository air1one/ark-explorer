{"version":3,"sources":["webpack:///./node_modules/lodash/_listCacheHas.js","webpack:///./node_modules/lodash/property.js","webpack:///./node_modules/lodash/isSymbol.js","webpack:///./node_modules/lodash/isArguments.js","webpack:///./node_modules/lodash/_stackSet.js","webpack:///./node_modules/lodash/stubArray.js","webpack:///./node_modules/lodash/_SetCache.js","webpack:///./node_modules/chart.js/src/elements/element.rectangle.js","webpack:///./node_modules/lodash/_coreJsData.js","webpack:///./node_modules/chart.js/src/controllers/controller.scatter.js","webpack:///./node_modules/lodash/_setCacheHas.js","webpack:///./node_modules/lodash/_toSource.js","webpack:///./node_modules/lodash/_basePropertyDeep.js","webpack:///./node_modules/lodash/memoize.js","webpack:///./node_modules/lodash/_Hash.js","webpack:///./node_modules/lodash/_hasPath.js","webpack:///./node_modules/lodash/_castPath.js","webpack:///./node_modules/chart.js/src/controllers/controller.polarArea.js","webpack:///./node_modules/chart.js/src/core/core.controller.js","webpack:///./node_modules/lodash/_isPrototype.js","webpack:///./node_modules/chartjs-color/index.js","webpack:///./node_modules/lodash/_baseProperty.js","webpack:///./node_modules/lodash/_stackClear.js","webpack:///./node_modules/lodash/keys.js","webpack:///./node_modules/chart.js/src/charts/Chart.Line.js","webpack:///./node_modules/lodash/_baseSum.js","webpack:///./node_modules/lodash/_mapToArray.js","webpack:///./node_modules/chart.js/src/scales/scale.radialLinear.js","webpack:///./node_modules/chart.js/src/scales/scale.category.js","webpack:///./node_modules/lodash/_toKey.js","webpack:///./node_modules/lodash/_isKey.js","webpack:///./node_modules/chart.js/src/core/core.animation.js","webpack:///./node_modules/lodash/_baseKeys.js","webpack:///./node_modules/lodash/_getRawTag.js","webpack:///./node_modules/chart.js/src/plugins/plugin.legend.js","webpack:///./node_modules/chart.js/src/helpers/helpers.options.js","webpack:///./node_modules/lodash/stubFalse.js","webpack:///./node_modules/chart.js/src/core/core.defaults.js","webpack:///./node_modules/lodash/_arrayPush.js","webpack:///./node_modules/lodash/_isStrictComparable.js","webpack:///./node_modules/lodash/_getNative.js","webpack:///./node_modules/lodash/isBuffer.js","webpack:///./node_modules/lodash/_isMasked.js","webpack:///./node_modules/lodash/_isKeyable.js","webpack:///./node_modules/lodash/isObjectLike.js","webpack:///./node_modules/chart.js/src/controllers/controller.line.js","webpack:///./node_modules/lodash/_baseMatchesProperty.js","webpack:///./node_modules/lodash/_stringToPath.js","webpack:///./node_modules/lodash/isObject.js","webpack:///./node_modules/lodash/_mapCacheSet.js","webpack:///./node_modules/vue-chartjs/es/mixins/index.js","webpack:///./node_modules/vue-chartjs/es/BaseCharts.js","webpack:///./node_modules/lodash/_equalByTag.js","webpack:///./node_modules/lodash/_Promise.js","webpack:///./node_modules/chart.js/src/platforms/platform.basic.js","webpack:///./node_modules/lodash/_hashDelete.js","webpack:///./node_modules/lodash/_memoizeCapped.js","webpack:///./node_modules/lodash/_matchesStrictComparable.js","webpack:///./node_modules/lodash/_Uint8Array.js","webpack:///./node_modules/lodash/_mapCacheGet.js","webpack:///./node_modules/lodash/_hashSet.js","webpack:///./node_modules/lodash/_baseIsArguments.js","webpack:///./node_modules/lodash/_baseHasIn.js","webpack:///./node_modules/chart.js/src/core/core.element.js","webpack:///./node_modules/chart.js/src/core/core.datasetController.js","webpack:///./node_modules/lodash/_listCacheClear.js","webpack:///./node_modules/lodash/_objectToString.js","webpack:///./node_modules/lodash/_root.js","webpack:///./node_modules/lodash/_stackDelete.js","webpack:///./node_modules/lodash/_arrayFilter.js","webpack:///./node_modules/chartjs-color/node_modules/color-convert/conversions.js","webpack:///./node_modules/lodash/isArrayLike.js","webpack:///./node_modules/lodash/_getSymbols.js","webpack:///./node_modules/lodash/_baseIsNative.js","webpack:///./node_modules/lodash/_getValue.js","webpack:///./node_modules/lodash/_baseGetTag.js","webpack:///./node_modules/lodash/_getMatchData.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bar.js","webpack:///./node_modules/chart.js/src/elements/element.point.js","webpack:///./node_modules/lodash/_WeakMap.js","webpack:///./node_modules/chartjs-color/node_modules/color-convert/index.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bubble.js","webpack:///./node_modules/lodash/_getMapData.js","webpack:///./node_modules/lodash/_arraySome.js","webpack:///./node_modules/lodash/_getTag.js","webpack:///./node_modules/chart.js/src/scales/scale.time.js","webpack:///./node_modules/chart.js/src/helpers/index.js","webpack:///./node_modules/chart.js/src/charts/Chart.Scatter.js","webpack:///./node_modules/chart.js/src/charts/Chart.Doughnut.js","webpack:///./node_modules/lodash/_hashClear.js","webpack:///./node_modules/chart.js/src/helpers/helpers.canvas.js","webpack:///./node_modules/color-name/index.js","webpack:///./node_modules/chart.js/src/helpers/helpers.core.js","webpack:///./node_modules/lodash/_baseTimes.js","webpack:///./node_modules/chart.js/src/elements/element.line.js","webpack:///./node_modules/lodash/_nativeKeys.js","webpack:///./node_modules/lodash/_stackHas.js","webpack:///./node_modules/chart.js/src/core/core.plugins.js","webpack:///./node_modules/lodash/_freeGlobal.js","webpack:///./node_modules/chart.js/src/chart.js","webpack:///./node_modules/chart.js/src/elements/element.arc.js","webpack:///./node_modules/chart.js/src/controllers/controller.doughnut.js","webpack:///./node_modules/lodash/_ListCache.js","webpack:///./node_modules/chart.js/src/scales/scale.logarithmic.js","webpack:///./node_modules/lodash/_nativeCreate.js","webpack:///./node_modules/chart.js/src/scales/scale.linear.js","webpack:///./node_modules/lodash/isArray.js","webpack:///./node_modules/lodash/_listCacheSet.js","webpack:///./node_modules/chart.js/src/controllers/controller.bar.js","webpack:///./node_modules/lodash/_baseMatches.js","webpack:///./node_modules/lodash/_baseGet.js","webpack:///./node_modules/lodash/sumBy.js","webpack:///./node_modules/chart.js/src/controllers/controller.radar.js","webpack:///./node_modules/lodash/_listCacheDelete.js","webpack:///./node_modules/lodash/_arrayLikeKeys.js","webpack:///./node_modules/chart.js/src/controllers/controller.bubble.js","webpack:///./node_modules/lodash/isTypedArray.js","webpack:///./node_modules/chart.js/src/core/core.scale.js","webpack:///./node_modules/lodash/_baseIsTypedArray.js","webpack:///./node_modules/lodash/toString.js","webpack:///./node_modules/lodash/_MapCache.js","webpack:///./node_modules/lodash/_baseIsEqualDeep.js","webpack:///./node_modules/lodash/_arrayMap.js","webpack:///./node_modules/lodash/_Map.js","webpack:///./node_modules/lodash/_hashHas.js","webpack:///./node_modules/chart.js/src/core/core.layouts.js","webpack:///./node_modules/lodash/_mapCacheClear.js","webpack:///./node_modules/lodash/_baseGetAllKeys.js","webpack:///./node_modules/lodash/_Stack.js","webpack:///./node_modules/lodash/_setCacheAdd.js","webpack:///./node_modules/chart.js/src/core/core.ticks.js","webpack:///./node_modules/lodash/_stackGet.js","webpack:///./node_modules/lodash/hasIn.js","webpack:///./node_modules/chart.js/src/platforms/platform.js","webpack:///./node_modules/chart.js/src/charts/Chart.Radar.js","webpack:///./node_modules/chart.js/src/plugins/index.js","webpack:///./node_modules/lodash/_mapCacheDelete.js","webpack:///./node_modules/lodash/_overArg.js","webpack:///./node_modules/lodash/isFunction.js","webpack:///./node_modules/lodash/eq.js","webpack:///./node_modules/lodash/_baseIsMatch.js","webpack:///./node_modules/lodash/_nodeUtil.js","webpack:///./node_modules/chartjs-color-string/color-string.js","webpack:///./node_modules/chart.js/src/plugins/plugin.title.js","webpack:///./node_modules/chart.js/src/core/core.interaction.js","webpack:///./node_modules/lodash/get.js","webpack:///./node_modules/chart.js/src/core/core.helpers.js","webpack:///./node_modules/lodash/_Symbol.js","webpack:///./node_modules/lodash/_equalArrays.js","webpack:///./node_modules/lodash/_mapCacheHas.js","webpack:///./node_modules/chart.js/src/scales/scale.linearbase.js","webpack:///./node_modules/chart.js/src/platforms/platform.dom.js","webpack:///./node_modules/lodash/_getAllKeys.js","webpack:///./node_modules/chart.js/src/charts/Chart.PolarArea.js","webpack:///./node_modules/lodash/_setToArray.js","webpack:///./node_modules/lodash/_baseUnary.js","webpack:///./node_modules/lodash/_equalObjects.js","webpack:///./node_modules/lodash/isLength.js","webpack:///./node_modules/lodash/_listCacheGet.js","webpack:///./node_modules/lodash/_DataView.js","webpack:///./node_modules/chart.js/src/core/core.scaleService.js","webpack:///./node_modules/chart.js/src/helpers/helpers.easing.js","webpack:///./node_modules/lodash/_hashGet.js","webpack:///./node_modules/lodash/_baseIteratee.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler.js","webpack:///./node_modules/chart.js/src/elements/index.js","webpack:///./node_modules/lodash/_baseIsEqual.js","webpack:///./node_modules/lodash/_isIndex.js","webpack:///./node_modules/chart.js/src/core/core.tooltip.js","webpack:///./node_modules/lodash/_cacheHas.js","webpack:///./node_modules/lodash/_assocIndexOf.js","webpack:///./node_modules/lodash/_Set.js","webpack:///./node_modules/chart.js/src/core/core.js","webpack:///./node_modules/lodash/identity.js","webpack:///./node_modules/lodash/_baseToString.js"],"names":["assocIndexOf","__webpack_require__","module","exports","key","this","__data__","+c4W","t","e","n","baseProperty","basePropertyDeep","isKey","toKey","path","baseGetTag","isObjectLike","value","symbolTag","baseIsArguments","objectProto","Object","prototype","hasOwnProperty","propertyIsEnumerable","isArguments","arguments","call","ListCache","Map","MapCache","data","pairs","length","LARGE_ARRAY_SIZE","push","size","set","1hJj","setCacheAdd","setCacheHas","SetCache","values","index","add","has","defaults","Element","isVertical","bar","_view","width","getBarBounds","x1","x2","y1","y2","vm","halfWidth","x","Math","min","y","base","max","halfHeight","height","left","top","right","bottom","_set","elements","rectangle","backgroundColor","global","defaultColor","borderColor","borderSkipped","borderWidth","extend","draw","signX","signY","ctx","_chart","horizontal","barSize","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","lineWidth","corners","startCorner","indexOf","cornerAt","corner","moveTo","i","lineTo","fill","stroke","inRange","mouseX","mouseY","bounds","inLabelRange","inXRange","inYRange","getCenterPoint","getArea","tooltipPosition","coreJsData","hover","mode","scales","xAxes","id","type","position","yAxes","showLines","tooltips","callbacks","title","label","item","xLabel","yLabel","Chart","controllers","scatter","line","funcToString","Function","toString","func","4/ic","baseGet","object","FUNC_ERROR_TEXT","memoize","resolver","TypeError","memoized","args","apply","cache","get","result","Cache","hashClear","hashDelete","hashGet","hashHas","hashSet","Hash","entries","clear","entry","delete","castPath","isArray","isIndex","isLength","hasFunc","stringToPath","helpers","scale","angleLines","display","gridLines","circular","pointLabels","ticks","beginAtZero","animation","animateRotate","animateScale","startAngle","PI","legendCallback","chart","text","datasets","labels","join","legend","generateLabels","map","meta","getDatasetMeta","ds","custom","valueAtIndexOrDefault","arcOpts","options","arc","hidden","isNaN","onClick","legendItem","ilen","update","polarArea","DatasetController","dataElementType","Arc","linkScales","noop","reset","me","chartArea","getMeta","opts","minSize","outerRadius","innerRadius","cutoutPercentage","radiusLength","getVisibleDatasetCount","count","countVisibleElements","each","updateElement","dataset","getDataset","animationOpts","circumference","calculateCircumference","centerX","xCenter","centerY","yCenter","visibleCount","datasetStartAngle","distance","getDistanceFromCenterForValue","endAngle","resetRadius","_datasetIndex","_index","_scale","_model","removeHoverStyle","pivot","element","6rqY","Interaction","layouts","platform","plugins","positionIsHorizontal","types","instances","construct","config","configMerge","context","acquireContext","canvas","uid","aspectRatio","_bufferedRender","controller","defineProperty","initialize","console","error","notify","retinaScale","devicePixelRatio","bindEvents","responsive","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","animationService","cancelAnimation","silent","maintainAspectRatio","newWidth","floor","getMaximumWidth","newHeight","getMaximumHeight","style","newSize","onResize","responsiveAnimationDuration","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","items","updated","keys","reduce","obj","concat","dtype","dposition","isDefault","scaleType","valueOrDefault","scaleClass","scaleService","getScaleConstructor","mergeTicksOptions","hasUpdated","addScalesToLayout","buildOrUpdateControllers","newControllers","datasetIndex","destroyDatasetMeta","updateIndex","ControllerClass","Error","resetElements","tooltip","newOptions","duration","lazy","removeBox","_options","_invalidate","_data","buildOrUpdateElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","easing","render","updateDataset","animationOptions","onComplete","callback","Animation","numSteps","animationObject","easingFunction","effects","currentStep","stepDecimal","onAnimationProgress","onProgress","onAnimationComplete","addAnimation","easingValue","isNullOrUndef","transition","boxes","box","drawDatasets","_drawTooltip","isDatasetVisible","drawDataset","getElementAtEvent","modes","single","getElementsAtEvent","intersect","getElementsAtXAxis","getElementsAtEventForMode","method","getDatasetAtEvent","_meta","xAxisID","yAxisID","generateLegend","destroy","unbindEvents","releaseContext","toBase64Image","toDataURL","Tooltip","_chartInstance","listeners","_listeners","listener","eventHandler","events","addEventListener","removeEventListener","updateHoverStyle","enabled","changed","handleEvent","_start","bufferedRequest","animating","animationDuration","hoverOptions","active","onHover","native","arrayEquals","Controller","Ctor","constructor","convert","string","Color","valid","rgb","hsl","hsv","hwb","cmyk","alpha","vals","getRgba","setValues","getHsla","getHwb","r","red","l","lightness","v","w","whiteness","c","cyan","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","val","setChannel","green","blue","hue","saturation","saturationv","blackness","magenta","yellow","black","hexString","rgbString","rgbaString","percentString","hslString","hslaString","hwbString","keyword","rgbNumber","luminosity","lum","chan","pow","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","ratio","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","p","a","w1","w2","toJSON","clone","source","target","prop","slice","spaces","maxes","getValues","space","charAt","capped","chans","round","sname","Array","svalues","window","7GkX","arrayLikeKeys","baseKeys","isArrayLike","Line","array","iteratee","current","forEach","Ticks","globalDefaults","defaultConfig","animate","color","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","formatters","linear","fontSize","getValueCount","getPointLabelFontOptions","pointLabelOptions","defaultFontSize","fontStyle","defaultFontStyle","fontFamily","defaultFontFamily","family","font","fontString","determineLimits","angle","pos","start","end","getTextAlignForAngle","fillText","spacing","adjustPointPositionForLabelHeight","textSize","h","numberOrZero","param","isNumber","LinearRadialScale","LinearScaleBase","setDimensions","tickOpts","maxWidth","maxHeight","tickFontSize","drawingArea","determineDataLimits","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","rawValue","getRightValue","handleTickRangeOptions","getTickLimit","maxTicksLimit","ceil","convertTicksToLabels","getLabelForIndex","fit","largestPossibleRadius","pointPosition","plFont","furthestLimits","b","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","longestText","measureText","angleRadians","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","setCenterPoint","radiusReductionLeft","sin","radiusReductionRight","radiusReductionTop","cos","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","scalingFactor","reverse","distanceFromCenter","thisAngle","getPointPositionForValue","getBasePosition","gridLineOpts","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset","ticksAsNumbers","radius","closePath","tickFontColor","fontColor","defaultFontColor","save","translate","labelWidth","fillRect","textAlign","textBaseline","restore","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","registerScaleType","DatasetScale","Scale","getLabels","isHorizontal","xLabels","yLabels","findIndex","minIndex","maxIndex","buildTicks","getPixelForValue","valueCategory","offset","offsetAmt","idx","valueWidth","widthOffset","valueHeight","heightOffset","getPixelForTick","getValueForPixel","pixel","_ticks","horz","valueDimension","getBasePixel","9Nap","isSymbol","reIsDeepProp","reIsPlainProp","test","frameDuration","animations","dropFrames","request","requestAnimationFrame","splice","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","isPrototype","nativeKeys","Symbol","nativeObjectToString","symToStringTag","toStringTag","isOwn","tag","unmasked","getBoxWidth","labelOpts","usePointStyle","SQRT2","boxWidth","fullWidth","ci","padding","lineCap","borderCapStyle","lineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","pointStyle","Legend","legendHitBoxes","doughnutMode","beforeUpdate","margins","beforeSetDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","afterFit","afterUpdate","paddingLeft","paddingTop","paddingRight","paddingBottom","legendItems","filter","globalDefault","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","isLineWidthZero","setLineDash","offSet","drawPoint","strokeRect","halfFontSize","xLeft","yMiddle","lh","hitBox","createNewLegendAndAttach","legendOpts","configure","addBox","_element","beforeInit","mergeIf","afterEvent","toLineHeight","matches","match","toPadding","isObject","resolve","inputs","CDJp","scope","merge","baseIsNative","getValue","undefined","root","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","maskSrcKey","exec","IE_PROTO","spanGaps","lineEnabled","showLine","datasetElementType","Point","points","lineElementOptions","getScaleForId","tension","lineTension","_children","steppedLine","stepped","cubicInterpolationMode","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","yScale","xScale","pointOptions","pointRadius","hitRadius","pointHitRadius","NaN","calculatePointY","_xScale","_yScale","skip","dsMeta","sumPos","sumNeg","stacked","stackedRightValue","rightValue","model","controlPoints","area","capControlPoint","pt","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","next","controlPointNextY","capBezierPoints","clipArea","unclipArea","setHoverStyle","hoverRadius","pointHoverRadius","hoverBackgroundColor","pointHoverBackgroundColor","getHoverColor","hoverBorderColor","pointHoverBorderColor","hoverBorderWidth","pointHoverBorderWidth","baseIsEqual","hasIn","isStrictComparable","matchesStrictComparable","srcValue","objValue","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","rePropName","reEscapeChar","charCodeAt","replace","number","quote","subString","getMapData","dataHandler","newData","oldData","$data","newDatasetLabels","oldDatasetLabels","oldLabels","JSON","stringify","oldDatasetKeys","newDatasetKeys","deletionKeys","attribute","deletionKey","renderChart","chartData","mixins","reactiveData","watch","reactiveProp","props","required","generateChart","chartId","chartType","createElement","styles","class","cssClasses","attrs","ref","default","String","_plugins","methods","addPlugin","plugin","chart_default","$refs","getContext","beforeDestroy","Bar","HorizontalBar","Doughnut","Pie","PolarArea","Radar","Bubble","Scatter","d","u","f","g","s","HDyB","Uint8Array","eq","equalArrays","mapToArray","setToArray","symbolProto","symbolValueOf","valueOf","other","bitmask","customizer","equalFunc","stack","byteLength","byteOffset","buffer","name","message","isPartial","HOxn","Promise","Hvzi","nativeCreate","argsTag","configuration","ease","view","actual","origin","c0","c1","isFinite","hasValue","inherits","arrayEvents","unlistenArrayEvents","stub","_chartjs","addElements","scaleID","createMetaDataset","createMetaData","metaData","addElementAndReset","configurable","enumerable","toUpperCase","res","resyncElements","elementOpts","numMeta","numData","insertElements","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","KfNM","freeGlobal","freeSelf","self","predicate","resIndex","rgb2hsl","delta","rgb2hsv","rgb2hwb","rgb2cmyk","k","rgb2keyword","reverseKeywords","rgb2xyz","rgb2lab","xyz","z","hsl2rgb","t1","t2","t3","hsv2rgb","hi","q","hwb2rgb","wh","bl","cmyk2rgb","m","xyz2rgb","xyz2lab","lab2xyz","lab","lab2lch","atan2","sqrt","lab2rgb","lch2lab","lch","hr","keyword2rgb","cssKeywords","rgb2lch","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2lch","lch2xyz","lch2rgb","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellowgreen","isFunction","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","getSymbols","symbol","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","RegExp","getRawTag","objectToString","xRange","WeakMap","conversions","Converter","arg","pair","from","to","convs","routeSpace","fspace","isKeyable","QqLw","DataView","Set","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","ctorString","moment","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate","table","skey","sval","tkey","range","mid","i0","i1","lo","prev","span","momentify","parser","format","parse","input","time","startOf","determineMajorUnit","unit","generate","capacity","timeOpts","minor","minUnit","interval","factor","major","stepSize","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","last","milliseconds","TimeScale","warn","j","jlen","timestamp","timestamps","sort","endOf","_horizontal","_table","_timestamps","getLabelCapacity","_unit","diff","as","_majorUnit","distribution","curr","_offsets","upper","lower","_labelFormat","momentDate","hasTime","majorUnit","tooltipFormat","tickFormatFunction","tick","formatOverride","formats","displayFormats","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","userCallback","getPixelForOffset","getTicks","getLabelWidth","ticksOpts","tickLabelWidth","toRadians","maxRotation","cosRotation","sinRotation","exampleTime","exampleLabel","innerWidth","displayFormat","autoSkip","RDha","S3/U","Sfow","clearRect","roundedRect","rx","ry","quadraticCurveTo","rect","edgeLength","xOffset","yOffset","leftX","topY","sideSize","drawImage","clip","flip","bezierCurveTo","drawRoundedRectangle","TC34","defaultValue","fn","thisArg","loopable","len","a0","a1","v0","v1","klen","_merger","tval","_mergerIf","sources","merger","setFn","extensions","ChartElement","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","_cacheId","register","unregister","getAll","hook","descriptor","params","descriptors","$plugins","Title","pluginService","PluginBase","canvasHelpers","layoutService","chartX","chartY","pointRelativePosition","getAngleFromPoint","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","rotation","tooltipItem","dataLabel","doughnut","pie","getRingIndex","ringIndex","availableWidth","availableHeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","offsetX","offsetY","total","calculateTotal","arcs","hoverWidth","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","logarithmic","LogarithmicScale","IDMatches","minNotZero","hasStacks","valuesPerStack","valuesForType","minVal","maxVal","log10","generationOptions","dataRange","exp","significand","tickVal","endExp","endSignificand","precision","lastTick","tickValues","_getFirstTickValue","innerDimension","sign","firstTickValue","LinearScale","positiveValues","negativeValues","relativePoints","maxTicks","handleDirectionalChanges","categoryPercentage","barPercentage","offsetGridLines","axis","Rectangle","rects","_ruler","getRuler","rectangleOptions","datasetLabel","updateElementGeometry","vscale","getValueScale","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","stackCount","pixels","barThickness","imeta","ivalue","percent","chunk","thickness","stackIndex","maxBarThickness","Infinity","rectangleElementOptions","horizontalBar","baseIsMatch","getMatchData","matchData","baseIteratee","baseSum","aB2c","radar","pointElementOptions","b80T","baseTimes","isTypedArray","inherited","isArr","isArg","isBuff","isType","skipIndexes","dataPoint","bubble","_resolveElementOptions","dsIndex","getPixelForDecimal","dataIndex","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","labelsFromTicks","getLineValue","lineValue","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","lineHeight","minRotation","mirror","autoSkipPadding","labelOffset","computeTextSize","parseFontOptions","parseLineHeight","getPadding","longestTextCache","beforeDataLimits","afterDataLimits","beforeBuildTicks","afterBuildTicks","beforeTickToLabelConversion","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","tickFont","labelRotation","originalLabelWidth","tickWidth","scaleLabelOpts","isFullWidth","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","optionMajorTicks","isRotated","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","scaleLabelPadding","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","zeroLineIndex","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","lineCount","scaleLabelX","scaleLabelY","halfLineHeight","typedArrayTags","baseToString","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","Stack","equalByTag","equalObjects","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","filterByPosition","where","sortByWeight","_tmpIndex_","layoutItem","layoutOptions","layout","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","arrayPush","keysFunc","symbolsFunc","stackClear","stackDelete","stackGet","stackHas","stackSet","tickValue","logDelta","tickString","numDecimal","toFixed","remain","toExponential","gCq4","baseHasIn","hasPath","basic","dom","implementation","_enabled","filler","k+1r","transform","proxyTag","noCustomizer","mdPL","freeProcess","process","require","binding","colorNames","parseInt","parseFloat","rgba","percentaString","hsla","num","hexDouble","str","getRgb","getHsl","getAlpha","reverseNames","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","getRelativePosition","parseVisibleItems","handler","getIntersectItems","getNearestItems","distanceMetric","minDistance","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","x-axis","nearest","ret","intersectsItem","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","scaleMerge","getScaleDefaults","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","epsilon","almostWhole","rounded","exponent","log","LOG10E","powerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","distanceBetweenPoints","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","loop","niceNum","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","currentTarget","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","container","clientWidth","cw","clientHeight","ch","el","property","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","arraySome","cacheHas","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","fixedStepSize","niceRange","niceMin","niceMax","numSpaces","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","eventListenerOptions","supports","passive","createEvent","nativeEvent","addResizeListener","ticking","expando","resizer","cls","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","proxy","renderProxy","animationName","reflow","offsetParent","classList","insertBefore","firstChild","removeResizeListener","remove","removeChild","css","keyframes","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","getElementById","renderHeight","getAttribute","renderWidth","initial","displayWidth","displayHeight","removeAttribute","proxies","event","addEvent","removeEvent","baseGetAllKeys","getAllKeys","objProps","objLength","skipCtor","objCtor","othCtor","tadb","constructors","scaleConstructor","scaleDefaults","updateScaleDefaults","additions","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","HASH_UNDEFINED","baseMatches","baseMatchesProperty","identity","propagate","mappers","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","visible","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","p0","p1","d0","d1","wF/u","baseIsEqualDeep","reIsUint","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","mergeOpacity","colorString","opacity","pushOrConcat","toPush","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","positioners","_eventPosition","itemSort","body","dataPoints","paddingAndSize","radiusAndPadding","combinedBodyLength","titleLineCount","footerLineCount","widthPadding","maxLineWidth","lf","rf","olf","orf","yf","midX","midY","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","hasTooltipContent","average","eventPosition","nearestElement","tp","yGk4","arrayMap","symbolToString"],"mappings":"gFAAA,IAAAA,EAAAC,EAAA,QAeAC,EAAAC,QAJA,SAAAC,GACA,OAAAJ,EAAAK,KAAAC,SAAAF,IAAA,IAAAG,OAAA,SAAAC,EAAAC,EAAAC,GCZA,IAAAC,EAAAV,EAAA,QACAW,EAAAX,EAAA,QACAY,EAAAZ,EAAA,QACAa,EAAAb,EAAA,QA4BAC,EAAAC,QAJA,SAAAY,GACA,OAAAF,EAAAE,GAAAJ,EAAAG,EAAAC,IAAAH,EAAAG,4BC5BA,IAAAC,EAAAf,EAAA,QACAgB,EAAAhB,EAAA,QA2BAC,EAAAC,QALA,SAAAe,GACA,uBAAAA,GACAD,EAAAC,IArBA,mBAqBAF,EAAAE,KAAAC,uBCzBA,IAAAC,EAAAnB,EAAA,QACAgB,EAAAhB,EAAA,QAGAoB,EAAAC,OAAAC,UAGAC,EAAAH,EAAAG,eAGAC,EAAAJ,EAAAI,qBAoBAC,EAAAN,EAAA,WAA8C,OAAAO,UAA9C,IAAkEP,EAAA,SAAAF,GAClE,OAAAD,EAAAC,IAAAM,EAAAI,KAAAV,EAAA,YACAO,EAAAG,KAAAV,EAAA,WAGAhB,EAAAC,QAAAuB,0BCnCA,IAAAG,EAAA5B,EAAA,QACA6B,EAAA7B,EAAA,QACA8B,EAAA9B,EAAA,QA+BAC,EAAAC,QAhBA,SAAAC,EAAAc,GACA,IAAAc,EAAA3B,KAAAC,SACA,GAAA0B,aAAAH,EAAA,CACA,IAAAI,EAAAD,EAAA1B,SACA,IAAAwB,GAAAG,EAAAC,OAAAC,IAGA,OAFAF,EAAAG,MAAAhC,EAAAc,IACAb,KAAAgC,OAAAL,EAAAK,KACAhC,KAEA2B,EAAA3B,KAAAC,SAAA,IAAAyB,EAAAE,GAIA,OAFAD,EAAAM,IAAAlC,EAAAc,GACAb,KAAAgC,KAAAL,EAAAK,KACAhC,4BCRAH,EAAAC,QAJA,WACA,WAAAoC,OAAA,SAAA/B,EAAAC,EAAAC,GCnBA,IAAAqB,EAAA9B,EAAA,QACAuC,EAAAvC,EAAA,QACAwC,EAAAxC,EAAA,QAUA,SAAAyC,EAAAC,GACA,IAAAC,GAAA,EACAV,EAAA,MAAAS,EAAA,EAAAA,EAAAT,OAGA,IADA7B,KAAAC,SAAA,IAAAyB,IACAa,EAAAV,GACA7B,KAAAwC,IAAAF,EAAAC,IAKAF,EAAAnB,UAAAsB,IAAAH,EAAAnB,UAAAa,KAAAI,EACAE,EAAAnB,UAAAuB,IAAAL,EAEAvC,EAAAC,QAAAuC,uCCxBA,IAAAK,EAAA9C,EAAA,QACA+C,EAAA/C,EAAA,QAaA,SAAAgD,EAAAC,GACA,gBAAAA,EAAAC,MAAAC,MASA,SAAAC,EAAAH,GACA,IACAI,EAAAC,EAAAC,EAAAC,EADAC,EAAAR,EAAAC,MAGA,GAAAF,EAAAC,GAAA,CAEA,IAAAS,EAAAD,EAAAN,MAAA,EACAE,EAAAI,EAAAE,EAAAD,EACAJ,EAAAG,EAAAE,EAAAD,EACAH,EAAAK,KAAAC,IAAAJ,EAAAK,EAAAL,EAAAM,MACAP,EAAAI,KAAAI,IAAAP,EAAAK,EAAAL,EAAAM,UACE,CAEF,IAAAE,EAAAR,EAAAS,OAAA,EACAb,EAAAO,KAAAC,IAAAJ,EAAAE,EAAAF,EAAAM,MACAT,EAAAM,KAAAI,IAAAP,EAAAE,EAAAF,EAAAM,MACAR,EAAAE,EAAAK,EAAAG,EACAT,EAAAC,EAAAK,EAAAG,EAGA,OACAE,KAAAd,EACAe,IAAAb,EACAc,MAAAf,EACAgB,OAAAd,GA7CAV,EAAAyB,KAAA,UACAC,UACAC,WACAC,gBAAA5B,EAAA6B,OAAAC,aACAC,YAAA/B,EAAA6B,OAAAC,aACAE,cAAA,SACAC,YAAA,MA2CA9E,EAAAC,QAAA6C,EAAAiC,QACAC,KAAA,WACA,IAEAd,EAAAE,EAAAD,EAAAE,EAAAY,EAAAC,EAAAL,EAFAM,EAAAhF,KAAAiF,OAAAD,IACA3B,EAAArD,KAAA8C,MAEA6B,EAAAtB,EAAAsB,YAwBA,GAtBAtB,EAAA6B,YAWAnB,EAAAV,EAAAM,KACAM,EAAAZ,EAAAE,EACAS,EAAAX,EAAAK,EAAAL,EAAAS,OAAA,EACAI,EAAAb,EAAAK,EAAAL,EAAAS,OAAA,EACAgB,EAAAb,EAAAF,EAAA,KACAgB,EAAA,EACAL,EAAArB,EAAAqB,eAAA,SAfAX,EAAAV,EAAAE,EAAAF,EAAAN,MAAA,EACAkB,EAAAZ,EAAAE,EAAAF,EAAAN,MAAA,EACAiB,EAAAX,EAAAK,EAEAoB,EAAA,EACAC,GAFAb,EAAAb,EAAAM,MAEAK,EAAA,KACAU,EAAArB,EAAAqB,eAAA,UAcAC,EAAA,CAEA,IAAAQ,EAAA3B,KAAAC,IAAAD,KAAA4B,IAAArB,EAAAE,GAAAT,KAAA4B,IAAApB,EAAAE,IAEAmB,GADAV,IAAAQ,IAAAR,GACA,EAEAW,EAAAvB,GAAA,SAAAW,EAAAW,EAAAP,EAAA,GACAS,EAAAtB,GAAA,UAAAS,GAAAW,EAAAP,EAAA,GACAU,EAAAxB,GAAA,QAAAU,EAAAW,EAAAN,EAAA,GACAU,EAAAvB,GAAA,WAAAQ,GAAAW,EAAAN,EAAA,GAEAO,IAAAC,IACAvB,EAAAwB,EACAtB,EAAAuB,GAGAD,IAAAC,IACA1B,EAAAuB,EACArB,EAAAsB,GAIAP,EAAAU,YACAV,EAAAW,UAAAtC,EAAAiB,gBACAU,EAAAY,YAAAvC,EAAAoB,YACAO,EAAAa,UAAAlB,EAKA,IAAAmB,IACA/B,EAAAG,IACAH,EAAAC,IACAC,EAAAD,IACAC,EAAAC,IAKA6B,GADA,+BACAC,QAAAtB,EAAA,GAKA,SAAAuB,EAAA1D,GACA,OAAAuD,GAAAC,EAAAxD,GAAA,IALA,IAAAwD,IACAA,EAAA,GAQA,IAAAG,EAAAD,EAAA,GACAjB,EAAAmB,OAAAD,EAAA,GAAAA,EAAA,IAEA,QAAAE,EAAA,EAAiBA,EAAA,EAAOA,IACxBF,EAAAD,EAAAG,GACApB,EAAAqB,OAAAH,EAAA,GAAAA,EAAA,IAGAlB,EAAAsB,OACA3B,GACAK,EAAAuB,UAIAzC,OAAA,WACA,IAAAT,EAAArD,KAAA8C,MACA,OAAAO,EAAAM,KAAAN,EAAAK,GAGA8C,QAAA,SAAAC,EAAAC,GACA,IAAAF,KAEA,GAAAxG,KAAA8C,MAAA,CACA,IAAA6D,EAAA3D,EAAAhD,MACAwG,EAAAC,GAAAE,EAAA5C,MAAA0C,GAAAE,EAAA1C,OAAAyC,GAAAC,EAAA3C,KAAA0C,GAAAC,EAAAzC,OAGA,OAAAsC,GAGAI,aAAA,SAAAH,EAAAC,GAEA,IADA1G,KACA8C,MACA,SAGA,IACA6D,EAAA3D,EANAhD,MAcA,OANA4C,EARA5C,MASAyG,GAAAE,EAAA5C,MAAA0C,GAAAE,EAAA1C,MAEAyC,GAAAC,EAAA3C,KAAA0C,GAAAC,EAAAzC,QAMA2C,SAAA,SAAAJ,GACA,IAAAE,EAAA3D,EAAAhD,MACA,OAAAyG,GAAAE,EAAA5C,MAAA0C,GAAAE,EAAA1C,OAGA6C,SAAA,SAAAJ,GACA,IAAAC,EAAA3D,EAAAhD,MACA,OAAA0G,GAAAC,EAAA3C,KAAA0C,GAAAC,EAAAzC,QAGA6C,eAAA,WACA,IACAxD,EAAAG,EADAL,EAAArD,KAAA8C,MAUA,OARAF,EAAA5C,OACAuD,EAAAF,EAAAE,EACAG,GAAAL,EAAAK,EAAAL,EAAAM,MAAA,IAEAJ,GAAAF,EAAAE,EAAAF,EAAAM,MAAA,EACAD,EAAAL,EAAAK,IAGUH,IAAAG,MAGVsD,QAAA,WACA,IAAA3D,EAAArD,KAAA8C,MACA,OAAAO,EAAAN,MAAAS,KAAA4B,IAAA/B,EAAAK,EAAAL,EAAAM,OAGAsD,gBAAA,WACA,IAAA5D,EAAArD,KAAA8C,MACA,OACAS,EAAAF,EAAAE,EACAG,EAAAL,EAAAK,8BCrNA,IAGAwD,EAHAtH,EAAA,QAGA,sBAEAC,EAAAC,QAAAoH,uCCHAtH,EAAA,QAEAuE,KAAA,WACAgD,OACAC,KAAA,UAGAC,QACAC,QACAC,GAAA,WACAC,KAAA,SACAC,SAAA,WAEAC,QACAH,GAAA,WACAC,KAAA,SACAC,SAAA,UAIAE,aAEAC,UACAC,WACAC,MAAA,WACA,UAEAC,MAAA,SAAAC,GACA,UAAAA,EAAAC,OAAA,KAAAD,EAAAE,OAAA,SAMArI,EAAAC,QAAA,SAAAqI,GAGAA,EAAAC,YAAAC,QAAAF,EAAAC,YAAAE,4BC1BAzI,EAAAC,QAJA,SAAAe,GACA,OAAAb,KAAAC,SAAAwC,IAAA5B,0BCTA,IAGA0H,EAHAC,SAAAtH,UAGAuH,SAqBA5I,EAAAC,QAZA,SAAA4I,GACA,SAAAA,EAAA,CACA,IACA,OAAAH,EAAAhH,KAAAmH,GACK,MAAAtI,IACL,IACA,OAAAsI,EAAA,GACK,MAAAtI,KAEL,WAAAuI,OAAA,SAAAxI,EAAAC,EAAAC,GCtBA,IAAAuI,EAAAhJ,EAAA,QAeAC,EAAAC,QANA,SAAAY,GACA,gBAAAmI,GACA,OAAAD,EAAAC,EAAAnI,6BCXA,IAAAgB,EAAA9B,EAAA,QAGAkJ,EAAA,sBA8CA,SAAAC,EAAAL,EAAAM,GACA,sBAAAN,GAAA,MAAAM,GAAA,mBAAAA,EACA,UAAAC,UAAAH,GAEA,IAAAI,EAAA,WACA,IAAAC,EAAA7H,UACAvB,EAAAiJ,IAAAI,MAAApJ,KAAAmJ,KAAA,GACAE,EAAAH,EAAAG,MAEA,GAAAA,EAAA5G,IAAA1C,GACA,OAAAsJ,EAAAC,IAAAvJ,GAEA,IAAAwJ,EAAAb,EAAAU,MAAApJ,KAAAmJ,GAEA,OADAD,EAAAG,QAAApH,IAAAlC,EAAAwJ,IAAAF,EACAE,GAGA,OADAL,EAAAG,MAAA,IAAAN,EAAAS,OAAA9H,GACAwH,EAIAH,EAAAS,MAAA9H,EAEA7B,EAAAC,QAAAiJ,0BCxEA,IAAAU,EAAA7J,EAAA,QACA8J,EAAA9J,EAAA,QACA+J,EAAA/J,EAAA,QACAgK,EAAAhK,EAAA,QACAiK,EAAAjK,EAAA,QASA,SAAAkK,EAAAC,GACA,IAAAxH,GAAA,EACAV,EAAA,MAAAkI,EAAA,EAAAA,EAAAlI,OAGA,IADA7B,KAAAgK,UACAzH,EAAAV,GAAA,CACA,IAAAoI,EAAAF,EAAAxH,GACAvC,KAAAiC,IAAAgI,EAAA,GAAAA,EAAA,KAKAH,EAAA5I,UAAA8I,MAAAP,EACAK,EAAA5I,UAAAgJ,OAAAR,EACAI,EAAA5I,UAAAoI,IAAAK,EACAG,EAAA5I,UAAAuB,IAAAmH,EACAE,EAAA5I,UAAAe,IAAA4H,EAEAhK,EAAAC,QAAAgK,0BC/BA,IAAAK,EAAAvK,EAAA,QACAyB,EAAAzB,EAAA,QACAwK,EAAAxK,EAAA,QACAyK,EAAAzK,EAAA,QACA0K,EAAA1K,EAAA,QACAa,EAAAb,EAAA,QAiCAC,EAAAC,QAtBA,SAAA+I,EAAAnI,EAAA6J,GAOA,IAJA,IAAAhI,GAAA,EACAV,GAHAnB,EAAAyJ,EAAAzJ,EAAAmI,IAGAhH,OACA0H,OAEAhH,EAAAV,GAAA,CACA,IAAA9B,EAAAU,EAAAC,EAAA6B,IACA,KAAAgH,EAAA,MAAAV,GAAA0B,EAAA1B,EAAA9I,IACA,MAEA8I,IAAA9I,GAEA,OAAAwJ,KAAAhH,GAAAV,EACA0H,KAEA1H,EAAA,MAAAgH,EAAA,EAAAA,EAAAhH,SACAyI,EAAAzI,IAAAwI,EAAAtK,EAAA8B,KACAuI,EAAAvB,IAAAxH,EAAAwH,6BCnCA,IAAAuB,EAAAxK,EAAA,QACAY,EAAAZ,EAAA,QACA4K,EAAA5K,EAAA,QACA6I,EAAA7I,EAAA,QAiBAC,EAAAC,QAPA,SAAAe,EAAAgI,GACA,OAAAuB,EAAAvJ,GACAA,EAEAL,EAAAK,EAAAgI,IAAAhI,GAAA2J,EAAA/B,EAAA5H,0CCfA,IAAA6B,EAAA9C,EAAA,QACAwE,EAAAxE,EAAA,QACA6K,EAAA7K,EAAA,QAEA8C,EAAAyB,KAAA,aACAuG,OACAlD,KAAA,eACAmD,YACAC,YAEAC,WACAC,aAEAC,aACAH,YAEAI,OACAC,iBAKAC,WACAC,iBACAC,iBAGAC,YAAA,GAAA7H,KAAA8H,GACAC,eAAA,SAAAC,GACA,IAAAC,KACAA,EAAA1J,KAAA,cAAAyJ,EAAAjE,GAAA,aAEA,IAAA5F,EAAA6J,EAAA7J,KACA+J,EAAA/J,EAAA+J,SACAC,EAAAhK,EAAAgK,OAEA,GAAAD,EAAA7J,OACA,QAAAuE,EAAA,EAAkBA,EAAAsF,EAAA,GAAA/J,KAAAE,SAA6BuE,EAC/CqF,EAAA1J,KAAA,qCAAA2J,EAAA,GAAApH,gBAAA8B,GAAA,aACAuF,EAAAvF,IACAqF,EAAA1J,KAAA4J,EAAAvF,IAEAqF,EAAA1J,KAAA,SAKA,OADA0J,EAAA1J,KAAA,SACA0J,EAAAG,KAAA,KAEAC,QACAF,QACAG,eAAA,SAAAN,GACA,IAAA7J,EAAA6J,EAAA7J,KACA,OAAAA,EAAAgK,OAAA9J,QAAAF,EAAA+J,SAAA7J,OACAF,EAAAgK,OAAAI,IAAA,SAAAhE,EAAA3B,GACA,IAAA4F,EAAAR,EAAAS,eAAA,GACAC,EAAAvK,EAAA+J,SAAA,GAEAS,EADAH,EAAArK,KAAAyE,GACA+F,WACAC,EAAA3B,EAAA2B,sBACAC,EAAAb,EAAAc,QAAAlI,SAAAmI,IAKA,OACAd,KAAA1D,EACApC,UANAwG,EAAA7H,gBAAA6H,EAAA7H,gBAAA8H,EAAAF,EAAA5H,gBAAA8B,EAAAiG,EAAA/H,iBAOAsB,YANAuG,EAAA1H,YAAA0H,EAAA1H,YAAA2H,EAAAF,EAAAzH,YAAA2B,EAAAiG,EAAA5H,aAOAoB,UANAsG,EAAAxH,YAAAwH,EAAAxH,YAAAyH,EAAAF,EAAAvH,YAAAyB,EAAAiG,EAAA1H,aAOA6H,OAAAC,MAAAP,EAAAvK,KAAAyE,KAAA4F,EAAArK,KAAAyE,GAAAoG,OAGAjK,MAAA6D,UAQAsG,QAAA,SAAAtM,EAAAuM,GACA,IAEAvG,EAAAwG,EAAAZ,EAFAzJ,EAAAoK,EAAApK,MACAiJ,EAAAxL,KAAAwL,MAGA,IAAApF,EAAA,EAAAwG,GAAApB,EAAA7J,KAAA+J,cAAA7J,OAAyDuE,EAAAwG,IAAUxG,GACnE4F,EAAAR,EAAAS,eAAA7F,IACAzE,KAAAY,GAAAiK,QAAAR,EAAArK,KAAAY,GAAAiK,OAGAhB,EAAAqB,WAKAjF,UACAC,WACAC,MAAA,WACA,UAEAC,MAAA,SAAAC,EAAArG,GACA,OAAAA,EAAAgK,OAAA3D,EAAAzF,OAAA,KAAAyF,EAAAE,YAMArI,EAAAC,QAAA,SAAAqI,GAEAA,EAAAC,YAAA0E,UAAA3E,EAAA4E,kBAAAnI,QAEAoI,gBAAA5I,EAAA6I,IAEAC,WAAAzC,EAAA0C,KAEAN,OAAA,SAAAO,GACA,IAAAC,EAAArN,KACAwL,EAAA6B,EAAA7B,MACA8B,EAAA9B,EAAA8B,UACAtB,EAAAqB,EAAAE,UACAC,EAAAhC,EAAAc,QACAD,EAAAmB,EAAApJ,SAAAmI,IACAkB,EAAAjK,KAAAC,IAAA6J,EAAArJ,MAAAqJ,EAAAvJ,KAAAuJ,EAAApJ,OAAAoJ,EAAAtJ,KACAwH,EAAAkC,YAAAlK,KAAAI,KAAA6J,EAAApB,EAAA1H,YAAA,QACA6G,EAAAmC,YAAAnK,KAAAI,IAAA4J,EAAAI,iBAAApC,EAAAkC,YAAA,IAAAF,EAAAI,iBAAA,KACApC,EAAAqC,cAAArC,EAAAkC,YAAAlC,EAAAmC,aAAAnC,EAAAsC,yBAEAT,EAAAK,YAAAlC,EAAAkC,YAAAlC,EAAAqC,aAAAR,EAAA9K,MACA8K,EAAAM,YAAAN,EAAAK,YAAAlC,EAAAqC,aAEA7B,EAAA+B,MAAAV,EAAAW,uBAEAvD,EAAAwD,KAAAjC,EAAArK,KAAA,SAAA4K,EAAAhK,GACA8K,EAAAa,cAAA3B,EAAAhK,EAAA6K,MAIAc,cAAA,SAAA3B,EAAAhK,EAAA6K,GAiBA,IAhBA,IAAAC,EAAArN,KACAwL,EAAA6B,EAAA7B,MACA2C,EAAAd,EAAAe,aACAZ,EAAAhC,EAAAc,QACA+B,EAAAb,EAAAtC,UACAR,EAAAc,EAAAd,MACAiB,EAAAH,EAAA7J,KAAAgK,OAEA2C,EAAAjB,EAAAkB,uBAAAJ,EAAAxM,KAAAY,IACAiM,EAAA9D,EAAA+D,QACAC,EAAAhE,EAAAiE,QAIAC,EAAA,EACA5C,EAAAqB,EAAAE,UACAnH,EAAA,EAAkBA,EAAA7D,IAAW6D,EAC7BqG,MAAA0B,EAAAxM,KAAAyE,KAAA4F,EAAArK,KAAAyE,GAAAoG,UACAoC,EAKA,IAAAC,EAAArB,EAAAnC,WACAyD,EAAAvC,EAAAC,OAAA,EAAA9B,EAAAqE,8BAAAZ,EAAAxM,KAAAY,IACA8I,EAAAwD,EAAAP,EAAAM,EACAI,EAAA3D,GAAAkB,EAAAC,OAAA,EAAA8B,GAEAW,EAAAZ,EAAAjD,aAAA,EAAAV,EAAAqE,8BAAAZ,EAAAxM,KAAAY,IAEAkI,EAAA7F,OAAA2H,GAEA2C,cAAA7B,EAAA9K,MACA4M,OAAA5M,EACA6M,OAAA1E,EAGA2E,QACA9L,EAAAiL,EACA9K,EAAAgL,EACAf,YAAA,EACAD,YAAAN,EAAA6B,EAAAH,EACAzD,WAAA+B,GAAAiB,EAAAlD,cAAA0D,EAAAxD,EACA2D,SAAA5B,GAAAiB,EAAAlD,cAAA0D,EAAAG,EACAjH,MAAA0C,EAAA2B,sBAAAT,EAAApJ,EAAAoJ,EAAApJ,OAKA8K,EAAAiC,iBAAA/C,GAEAA,EAAAgD,SAGAD,iBAAA,SAAA/C,GACApE,EAAA4E,kBAAA7L,UAAAoO,iBAAA/N,KAAAvB,KAAAuM,EAAAvM,KAAAwL,MAAAc,QAAAlI,SAAAmI,MAGAyB,qBAAA,WACA,IAAAG,EAAAnO,KAAAoO,aACApC,EAAAhM,KAAAuN,UACAQ,EAAA,EAQA,OANAtD,EAAAwD,KAAAjC,EAAArK,KAAA,SAAA6N,EAAAjN,GACAkK,MAAA0B,EAAAxM,KAAAY,KAAAiN,EAAAhD,QACAuB,MAIAA,GAGAQ,uBAAA,SAAA1N,GACA,IAAAkN,EAAA/N,KAAAuN,UAAAQ,MACA,OAAAA,EAAA,IAAAtB,MAAA5L,GACA,EAAA2C,KAAA8H,GAAAyC,EAEA,OAAA0B,OAAA,SAAAtP,EAAAC,EAAAC,GAAA,aCxNA,IAAAqC,EAAA9C,EAAA,QACA6K,EAAA7K,EAAA,QACA8P,EAAA9P,EAAA,QACA+P,EAAA/P,EAAA,QACAgQ,EAAAhQ,EAAA,QACAiQ,EAAAjQ,EAAA,QAEAC,EAAAC,QAAA,SAAAqI,GAwDA,SAAA2H,EAAArI,GACA,cAAAA,GAAA,WAAAA,EAtDAU,EAAA4H,SAIA5H,EAAA6H,aAGA7H,EAAAC,eAkDAqC,EAAA7F,OAAAuD,EAAAjH,WAIA+O,UAAA,SAAAjI,EAAAkI,GACA,IAAA7C,EAAArN,KAEAkQ,EApDA,SAAAA,GAKA,IAAAvO,GAJAuO,SAIAvO,KAAAuO,EAAAvO,SASA,OARAA,EAAA+J,SAAA/J,EAAA+J,aACA/J,EAAAgK,OAAAhK,EAAAgK,WAEAuE,EAAA5D,QAAA7B,EAAA0F,YACAzN,EAAA6B,OACA7B,EAAAwN,EAAA1I,MACA0I,EAAA5D,aAEA4D,EAdA,CAoDAA,GAEA,IAAAE,EAAAR,EAAAS,eAAArI,EAAAkI,GACAI,EAAAF,KAAAE,OACAxM,EAAAwM,KAAAxM,OACAf,EAAAuN,KAAAvN,MAEAsK,EAAA9F,GAAAkD,EAAA8F,MACAlD,EAAArI,IAAAoL,EACA/C,EAAAiD,SACAjD,EAAA6C,SACA7C,EAAAtK,QACAsK,EAAAvJ,SACAuJ,EAAAmD,YAAA1M,EAAAf,EAAAe,EAAA,KACAuJ,EAAAf,QAAA4D,EAAA5D,QACAe,EAAAoD,mBAUApD,EAAA7B,MAAA6B,EACAA,EAAAqD,WAAArD,EAGAlF,EAAA6H,UAAA3C,EAAA9F,IAAA8F,EAGApM,OAAA0P,eAAAtD,EAAA,QACA/D,IAAA,WACA,OAAA+D,EAAA6C,OAAAvO,MAEAM,IAAA,SAAApB,GACAwM,EAAA6C,OAAAvO,KAAAd,KAIAuP,GAAAE,GASAjD,EAAAuD,aACAvD,EAAAR,UALAgE,QAAAC,MAAA,sEAWAF,WAAA,WACA,IAAAvD,EAAArN,KAsBA,OAnBA6P,EAAAkB,OAAA1D,EAAA,cAEA5C,EAAAuG,YAAA3D,IAAAf,QAAA2E,kBAEA5D,EAAA6D,aAEA7D,EAAAf,QAAA6E,YAEA9D,EAAA+D,WAIA/D,EAAAgE,sBACAhE,EAAAiE,sBACAjE,EAAAkE,cAGA1B,EAAAkB,OAAA1D,EAAA,aAEAA,GAGArD,MAAA,WAEA,OADAS,EAAA6F,OAAAtG,MAAAhK,MACAA,MAGAwR,KAAA,WAGA,OADArJ,EAAAsJ,iBAAAC,gBAAA1R,MACAA,MAGAoR,OAAA,SAAAO,GACA,IAAAtE,EAAArN,KACAsM,EAAAe,EAAAf,QACAgE,EAAAjD,EAAAiD,OACAE,EAAAlE,EAAAsF,qBAAAvE,EAAAmD,aAAA,KAMAqB,EAAArO,KAAAI,IAAA,EAAAJ,KAAAsO,MAAArH,EAAAsH,gBAAAzB,KACA0B,EAAAxO,KAAAI,IAAA,EAAAJ,KAAAsO,MAAAtB,EAAAqB,EAAArB,EAAA/F,EAAAwH,iBAAA3B,KAEA,IAAAjD,EAAAtK,QAAA8O,GAAAxE,EAAAvJ,SAAAkO,KAIA1B,EAAAvN,MAAAsK,EAAAtK,MAAA8O,EACAvB,EAAAxM,OAAAuJ,EAAAvJ,OAAAkO,EACA1B,EAAA4B,MAAAnP,MAAA8O,EAAA,KACAvB,EAAA4B,MAAApO,OAAAkO,EAAA,KAEAvH,EAAAuG,YAAA3D,EAAAf,EAAA2E,mBAEAU,GAAA,CAEA,IAAAQ,GAAmBpP,MAAA8O,EAAA/N,OAAAkO,GACnBnC,EAAAkB,OAAA1D,EAAA,UAAA8E,IAGA9E,EAAAf,QAAA8F,UACA/E,EAAAf,QAAA8F,SAAA/E,EAAA8E,GAGA9E,EAAAmE,OACAnE,EAAAR,OAAAQ,EAAAf,QAAA+F,+BAIAhB,oBAAA,WACA,IAAA/E,EAAAtM,KAAAsM,QACAgG,EAAAhG,EAAAjF,WACAkL,EAAAjG,EAAA5B,MAEAD,EAAAwD,KAAAqE,EAAAhL,MAAA,SAAAkL,EAAAjQ,GACAiQ,EAAAjL,GAAAiL,EAAAjL,IAAA,UAAAhF,IAGAkI,EAAAwD,KAAAqE,EAAA5K,MAAA,SAAA+K,EAAAlQ,GACAkQ,EAAAlL,GAAAkL,EAAAlL,IAAA,UAAAhF,IAGAgQ,IACAA,EAAAhL,GAAAgL,EAAAhL,IAAA,UAOA+J,oBAAA,WACA,IAAAjE,EAAArN,KACAsM,EAAAe,EAAAf,QACAjF,EAAAgG,EAAAhG,WACAqL,KACAC,EAAA1R,OAAA2R,KAAAvL,GAAAwL,OAAA,SAAAC,EAAAvL,GAEA,OADAuL,EAAAvL,MACAuL,OAGAxG,EAAAjF,SACAqL,IAAAK,QACAzG,EAAAjF,OAAAC,WAAAyE,IAAA,SAAAyG,GACA,OAAclG,QAAAkG,EAAAQ,MAAA,WAAAC,UAAA,aAEd3G,EAAAjF,OAAAK,WAAAqE,IAAA,SAAA0G,GACA,OAAcnG,QAAAmG,EAAAO,MAAA,SAAAC,UAAA,YAKd3G,EAAA5B,OACAgI,EAAA3Q,MACAuK,UAAA5B,MACAsI,MAAA,eACAE,aACAD,UAAA,cAIAxI,EAAAwD,KAAAyE,EAAA,SAAA1K,GACA,IAAAuK,EAAAvK,EAAAsE,QACA/E,EAAAgL,EAAAhL,GACA4L,EAAA1I,EAAA2I,eAAAb,EAAA/K,KAAAQ,EAAAgL,OAEAlD,EAAAyC,EAAA9K,YAAAqI,EAAA9H,EAAAiL,aACAV,EAAA9K,SAAAO,EAAAiL,WAGAN,EAAApL,MACA,IAAAmD,EAAA,KACA,GAAAnD,KAAAF,KAAAE,GAAAC,OAAA2L,GACAzI,EAAArD,EAAAE,IACA+E,QAAAiG,EACA7H,EAAA1F,IAAAqI,EAAArI,IACA0F,EAAAc,MAAA6B,MACK,CACL,IAAAgG,EAAAlL,EAAAmL,aAAAC,oBAAAJ,GACA,IAAAE,EACA,OAEA3I,EAAA,IAAA2I,GACA9L,KACAC,KAAA2L,EACA7G,QAAAiG,EACAvN,IAAAqI,EAAArI,IACAwG,MAAA6B,IAEAhG,EAAAqD,EAAAnD,IAAAmD,EAGAA,EAAA8I,oBAKAxL,EAAAkL,YACA7F,EAAA3C,WAIAD,EAAAwD,KAAA0E,EAAA,SAAAc,EAAAlM,GACAkM,UACApM,EAAAE,KAIA8F,EAAAhG,SAEAc,EAAAmL,aAAAI,kBAAA1T,OAGA2T,yBAAA,WACA,IAAAtG,EAAArN,KACA+P,KACA6D,KA4BA,OA1BAnJ,EAAAwD,KAAAZ,EAAA1L,KAAA+J,SAAA,SAAAyC,EAAA0F,GACA,IAAA7H,EAAAqB,EAAApB,eAAA4H,GACArM,EAAA2G,EAAA3G,MAAA6F,EAAA6C,OAAA1I,KAUA,GARAwE,EAAAxE,MAAAwE,EAAAxE,WACA6F,EAAAyG,mBAAAD,GACA7H,EAAAqB,EAAApB,eAAA4H,IAEA7H,EAAAxE,OAEAuI,EAAAhO,KAAAiK,EAAAxE,MAEAwE,EAAA0E,WACA1E,EAAA0E,WAAAqD,YAAAF,GACA7H,EAAA0E,WAAAxD,iBACK,CACL,IAAA8G,EAAA7L,EAAAC,YAAA4D,EAAAxE,MACA,YAAAwM,EACA,UAAAC,MAAA,IAAAjI,EAAAxE,KAAA,0BAGAwE,EAAA0E,WAAA,IAAAsD,EAAA3G,EAAAwG,GACAD,EAAA7R,KAAAiK,EAAA0E,cAEIrD,GAEJuG,GAOAM,cAAA,WACA,IAAA7G,EAAArN,KACAyK,EAAAwD,KAAAZ,EAAA1L,KAAA+J,SAAA,SAAAyC,EAAA0F,GACAxG,EAAApB,eAAA4H,GAAAnD,WAAAtD,SACIC,IAMJD,MAAA,WACApN,KAAAkU,gBACAlU,KAAAmU,QAAAvD,cAGA/D,OAAA,SAAAqD,GACA,IAjUA1E,EACA4I,EAgUA/G,EAAArN,KAgBA,GAdAkQ,GAAA,iBAAAA,IAEAA,GACAmE,SAAAnE,EACAoE,KAAAhT,UAAA,KAtUA8S,GADA5I,EA2UA6B,GA1UAf,QAEA7B,EAAAwD,KAAAzC,EAAAnE,OAAA,SAAAqD,GACAiF,EAAA4E,UAAA/I,EAAAd,KAGA0J,EAAA3J,EAAA0F,YACAhI,EAAAzF,SAAA6B,OACA4D,EAAAzF,SAAA8I,EAAA0E,OAAA1I,MACA4M,GAEA5I,EAAAc,QAAAd,EAAA0E,OAAA5D,QAAA8H,EACA5I,EAAA6F,sBACA7F,EAAA8F,sBAEA9F,EAAA2I,QAAAK,SAAAJ,EAAAxM,SACA4D,EAAA2I,QAAAvD,aA8TAf,EAAA4E,YAAApH,QAEAwC,EAAAkB,OAAA1D,EAAA,iBAKAA,EAAA8G,QAAAO,MAAArH,EAAA1L,KAGA,IAAAiS,EAAAvG,EAAAsG,2BAGAlJ,EAAAwD,KAAAZ,EAAA1L,KAAA+J,SAAA,SAAAyC,EAAA0F,GACAxG,EAAApB,eAAA4H,GAAAnD,WAAAiE,yBACItH,GAEJA,EAAAuH,eAGAvH,EAAAf,QAAApB,WAAAmC,EAAAf,QAAApB,UAAAmJ,UACA5J,EAAAwD,KAAA2F,EAAA,SAAAlD,GACAA,EAAAtD,UAIAC,EAAAwH,iBAIAxH,EAAA8G,QAAAvD,aAIAvD,EAAAyH,cAGAjF,EAAAkB,OAAA1D,EAAA,eAEAA,EAAAoD,gBACApD,EAAA0H,kBACAV,SAAAnE,EAAAmE,SACAW,OAAA9E,EAAA8E,OACAV,KAAApE,EAAAoE,MAGAjH,EAAA4H,OAAA/E,KASA0E,aAAA,gBAGA/E,EAAAkB,OAFA/Q,KAEA,kBAIA2P,EAAA9C,OAAA7M,UAAA+C,MAAA/C,KAAA8D,QASA+L,EAAAkB,OAfA/Q,KAeA,oBACA6P,EAAAkB,OAhBA/Q,KAgBA,iBAQA6U,eAAA,WAGA,QAAAhF,EAAAkB,OAFA/Q,KAEA,yBAIA,QAAAoG,EAAA,EAAAwG,EANA5M,KAMA2B,KAAA+J,SAAA7J,OAAkDuE,EAAAwG,IAAUxG,EAN5DpG,KAOAkV,cAAA9O,GAGAyJ,EAAAkB,OAVA/Q,KAUA,yBAQAkV,cAAA,SAAA3S,GACA,IACAyJ,EADAhM,KACAiM,eAAA1J,GACA4G,GACA6C,OACAzJ,cAGAsN,EAAAkB,OAPA/Q,KAOA,uBAAAmJ,MAIA6C,EAAA0E,WAAA7D,SAEAgD,EAAAkB,OAbA/Q,KAaA,sBAAAmJ,MAGA8L,OAAA,SAAA/E,GACA,IAAA7C,EAAArN,KAEAkQ,GAAA,iBAAAA,IAEAA,GACAmE,SAAAnE,EACAoE,KAAAhT,UAAA,KAIA,IAAA+S,EAAAnE,EAAAmE,SACAC,EAAApE,EAAAoE,KAEA,QAAAzE,EAAAkB,OAAA1D,EAAA,iBAIA,IAAA8H,EAAA9H,EAAAf,QAAApB,UACAkK,EAAA,SAAAlK,GACA2E,EAAAkB,OAAA1D,EAAA,eACA5C,EAAA4K,SAAAF,KAAAC,YAAAlK,GAAAmC,IAGA,GAAA8H,aAAAd,GAAA,IAAAA,eAAA,IAAAc,EAAAd,UAAA,CACA,IAAAnJ,EAAA,IAAA/C,EAAAmN,WACAC,UAAAlB,GAAAc,EAAAd,UAAA,MACAW,OAAA9E,EAAA8E,QAAAG,EAAAH,OAEAC,OAAA,SAAAzJ,EAAAgK,GACA,IAAAC,EAAAhL,EAAAuK,OAAAU,QAAAF,EAAAR,QACAW,EAAAH,EAAAG,YACAC,EAAAD,EAAAH,EAAAD,SAEA/J,EAAA3G,KAAA4Q,EAAAG,KAAAD,IAGAE,oBAAAV,EAAAW,WACAC,oBAAAX,IAGAjN,EAAAsJ,iBAAAuE,aAAA3I,EAAAnC,EAAAmJ,EAAAC,QAEAjH,EAAAxI,OAGAuQ,EAAA,IAAAjN,EAAAmN,WAAoCC,SAAA,EAAA/J,MAAA6B,KAGpC,OAAAA,IAGAxI,KAAA,SAAAoR,GACA,IAAA5I,EAAArN,KAEAqN,EAAArD,QAEAS,EAAAyL,cAAAD,KACAA,EAAA,GAGA5I,EAAA8I,WAAAF,QAEApG,EAAAkB,OAAA1D,EAAA,cAAA4I,MAKAxL,EAAAwD,KAAAZ,EAAA+I,MAAA,SAAAC,GACAA,EAAAxR,KAAAwI,EAAAC,YACID,GAEJA,EAAA3C,OACA2C,EAAA3C,MAAA7F,OAGAwI,EAAAiJ,aAAAL,GACA5I,EAAAkJ,aAAAN,GAEApG,EAAAkB,OAAA1D,EAAA,aAAA4I,MAMAE,WAAA,SAAAF,GAGA,IAFA,IAEA7P,EAAA,EAAAwG,GAFA5M,KAEA2B,KAAA+J,cAAA7J,OAA0DuE,EAAAwG,IAAUxG,EAFpEpG,KAGAwW,iBAAApQ,IAHApG,KAIAiM,eAAA7F,GAAAsK,WAAAyF,WAAAF,GAJAjW,KAQAmU,QAAAgC,WAAAF,IAQAK,aAAA,SAAAL,GACA,IAAA5I,EAAArN,KAEA,QAAA6P,EAAAkB,OAAA1D,EAAA,sBAAA4I,IAAA,CAKA,QAAA7P,GAAAiH,EAAA1L,KAAA+J,cAAA7J,OAAA,EAAoDuE,GAAA,IAAQA,EAC5DiH,EAAAmJ,iBAAApQ,IACAiH,EAAAoJ,YAAArQ,EAAA6P,GAIApG,EAAAkB,OAAA1D,EAAA,qBAAA4I,MAQAQ,YAAA,SAAAlU,EAAA0T,GACA,IACAjK,EADAhM,KACAiM,eAAA1J,GACA4G,GACA6C,OACAzJ,QACA0T,oBAGApG,EAAAkB,OARA/Q,KAQA,qBAAAmJ,MAIA6C,EAAA0E,WAAA7L,KAAAoR,GAEApG,EAAAkB,OAdA/Q,KAcA,oBAAAmJ,MAQAoN,aAAA,SAAAN,GACA,IACA9B,EADAnU,KACAmU,QACAhL,GACAgL,UACA8B,oBAGApG,EAAAkB,OAPA/Q,KAOA,qBAAAmJ,MAIAgL,EAAAtP,OAEAgL,EAAAkB,OAbA/Q,KAaA,oBAAAmJ,MAKAuN,kBAAA,SAAAtW,GACA,OAAAsP,EAAAiH,MAAAC,OAAA5W,KAAAI,IAGAyW,mBAAA,SAAAzW,GACA,OAAAsP,EAAAiH,MAAA5O,MAAA/H,KAAAI,GAA4C0W,gBAG5CC,mBAAA,SAAA3W,GACA,OAAAsP,EAAAiH,MAAA,UAAA3W,KAAAI,GAAgD0W,gBAGhDE,0BAAA,SAAA5W,EAAAgH,EAAAkF,GACA,IAAA2K,EAAAvH,EAAAiH,MAAAvP,GACA,yBAAA6P,EACAA,EAAAjX,KAAAI,EAAAkM,OAMA4K,kBAAA,SAAA9W,GACA,OAAAsP,EAAAiH,MAAAxI,QAAAnO,KAAAI,GAA8C0W,gBAG9C7K,eAAA,SAAA4H,GACA,IACA1F,EADAnO,KACA2B,KAAA+J,SAAAmI,GACA1F,EAAAgJ,QACAhJ,EAAAgJ,UAGA,IAAAnL,EAAAmC,EAAAgJ,MANAnX,KAMAuH,IAaA,OAZAyE,IACAA,EAAAmC,EAAAgJ,MARAnX,KAQAuH,KACAC,KAAA,KACA7F,QACAwM,QAAA,KACAuC,WAAA,KACAlE,OAAA,KACA4K,QAAA,KACAC,QAAA,OAIArL,GAGA8B,uBAAA,WAEA,IADA,IAAAC,EAAA,EACA3H,EAAA,EAAAwG,EAAA5M,KAAA2B,KAAA+J,SAAA7J,OAAoDuE,EAAAwG,IAAUxG,EAC9DpG,KAAAwW,iBAAApQ,IACA2H,IAGA,OAAAA,GAGAyI,iBAAA,SAAA3C,GACA,IAAA7H,EAAAhM,KAAAiM,eAAA4H,GAIA,wBAAA7H,EAAAQ,QAAAR,EAAAQ,QAAAxM,KAAA2B,KAAA+J,SAAAmI,GAAArH,QAGA8K,eAAA,WACA,OAAAtX,KAAAsM,QAAAf,eAAAvL,OAMA8T,mBAAA,SAAAD,GACA,IAAAtM,EAAAvH,KAAAuH,GACA4G,EAAAnO,KAAA2B,KAAA+J,SAAAmI,GACA7H,EAAAmC,EAAAgJ,OAAAhJ,EAAAgJ,MAAA5P,GAEAyE,IACAA,EAAA0E,WAAA6G,iBACApJ,EAAAgJ,MAAA5P,KAIAgQ,QAAA,WACA,IAEAnR,EAAAwG,EAFAS,EAAArN,KACAsQ,EAAAjD,EAAAiD,OAMA,IAHAjD,EAAAmE,OAGApL,EAAA,EAAAwG,EAAAS,EAAA1L,KAAA+J,SAAA7J,OAA8CuE,EAAAwG,IAAUxG,EACxDiH,EAAAyG,mBAAA1N,GAGAkK,IACAjD,EAAAmK,eACA/M,EAAA6F,OAAAtG,MAAAqD,GACAuC,EAAA6H,eAAApK,EAAArI,KACAqI,EAAAiD,OAAA,KACAjD,EAAArI,IAAA,MAGA6K,EAAAkB,OAAA1D,EAAA,kBAEAlF,EAAA6H,UAAA3C,EAAA9F,KAGAmQ,cAAA,WACA,OAAA1X,KAAAsQ,OAAAqH,UAAAvO,MAAApJ,KAAAsQ,OAAAhP,YAGAiQ,YAAA,WACA,IAAAlE,EAAArN,KACAqN,EAAA8G,QAAA,IAAAhM,EAAAyP,SACA3S,OAAAoI,EACAwK,eAAAxK,EACAqH,MAAArH,EAAA1L,KACA6S,SAAAnH,EAAAf,QAAA1E,UACIyF,IAMJ6D,WAAA,WACA,IAAA7D,EAAArN,KACA8X,EAAAzK,EAAA0K,cACAC,EAAA,WACA3K,EAAA4K,aAAA7O,MAAAiE,EAAA/L,YAGAmJ,EAAAwD,KAAAZ,EAAAf,QAAA4L,OAAA,SAAA1Q,GACAoI,EAAAuI,iBAAA9K,EAAA7F,EAAAwQ,GACAF,EAAAtQ,GAAAwQ,IAKA3K,EAAAf,QAAA6E,aACA6G,EAAA,WACA3K,EAAA+D,UAGAxB,EAAAuI,iBAAA9K,EAAA,SAAA2K,GACAF,EAAA1G,OAAA4G,IAOAR,aAAA,WACA,IAAAnK,EAAArN,KACA8X,EAAAzK,EAAA0K,WACAD,WAIAzK,EAAA0K,WACAtN,EAAAwD,KAAA6J,EAAA,SAAAE,EAAAxQ,GACAoI,EAAAwI,oBAAA/K,EAAA7F,EAAAwQ,OAIAK,iBAAA,SAAAjU,EAAAgD,EAAAkR,GACA,IACA9I,EAAApJ,EAAAwG,EADAqK,EAAAqB,EAAA,mCAGA,IAAAlS,EAAA,EAAAwG,EAAAxI,EAAAvC,OAAsCuE,EAAAwG,IAAUxG,GAChDoJ,EAAApL,EAAAgC,KAEApG,KAAAiM,eAAAuD,EAAAN,eAAAwB,WAAAuG,GAAAzH,IAQAyI,aAAA,SAAA7X,GACA,IAAAiN,EAAArN,KACAmU,EAAA9G,EAAA8G,QAEA,QAAAtE,EAAAkB,OAAA1D,EAAA,eAAAjN,IAAA,CAKAiN,EAAAoD,mBACApD,EAAA0H,iBAAA,KAEA,IAAAwD,EAAAlL,EAAAmL,YAAApY,GAKA+T,IACAoE,EAAApE,EAAAsE,OACAtE,EAAAqE,YAAApY,GACAmY,EAAApE,EAAAqE,YAAApY,IAGAyP,EAAAkB,OAAA1D,EAAA,cAAAjN,IAEA,IAAAsY,EAAArL,EAAA0H,iBAgBA,OAfA2D,EAEArL,EAAA4H,OAAAyD,GACIH,IAAAlL,EAAAsL,YAEJtL,EAAAmE,OAIAnE,EAAA4H,OAAA5H,EAAAf,QAAAnF,MAAAyR,uBAGAvL,EAAAoD,mBACApD,EAAA0H,iBAAA,KAEA1H,IASAmL,YAAA,SAAApY,GACA,IAGAmY,EAHAlL,EAAArN,KACAsM,EAAAe,EAAAf,YACAuM,EAAAvM,EAAAnF,MAsCA,OAnCAkG,EAAAyH,WAAAzH,EAAAyH,eAGA,aAAA1U,EAAAoH,KACA6F,EAAAyL,UAEAzL,EAAAyL,OAAAzL,EAAA2J,0BAAA5W,EAAAyY,EAAAzR,KAAAyR,GAKApO,EAAA4K,SAAA/I,EAAAyM,SAAAzM,EAAAnF,MAAA4R,SAAA3Y,EAAA4Y,OAAA3L,EAAAyL,QAAAzL,GAEA,YAAAjN,EAAAoH,MAAA,UAAApH,EAAAoH,MACA8E,EAAAI,SAEAJ,EAAAI,QAAAnL,KAAA8L,EAAAjN,EAAA4Y,OAAA3L,EAAAyL,QAKAzL,EAAAyH,WAAAjT,QACAwL,EAAAgL,iBAAAhL,EAAAyH,WAAA+D,EAAAzR,SAIAiG,EAAAyL,OAAAjX,QAAAgX,EAAAzR,MACAiG,EAAAgL,iBAAAhL,EAAAyL,OAAAD,EAAAzR,SAGAmR,GAAA9N,EAAAwO,YAAA5L,EAAAyL,OAAAzL,EAAAyH,YAGAzH,EAAAyH,WAAAzH,EAAAyL,OAEAP,KAWApQ,EAAA+Q,WAAA/Q,yBCh7BA,IAAAnH,EAAAC,OAAAC,UAgBArB,EAAAC,QAPA,SAAAe,GACA,IAAAsY,EAAAtY,KAAAuY,YAGA,OAAAvY,KAFA,mBAAAsY,KAAAjY,WAAAF,4BCXA,IAAAqY,EAAAzZ,EAAA,QACA0Z,EAAA1Z,EAAA,QAEA2Z,EAAA,SAAAzG,GACA,OAAAA,aAAAyG,EACAzG,EAEA9S,gBAAAuZ,GAIAvZ,KAAAwZ,SACAxZ,KAAAsC,QACAmX,KAAA,OACAC,KAAA,OACAC,KAAA,OACAC,KAAA,OACAC,MAAA,SACAC,MAAA,QAKA,iBAAAhH,GACAiH,EAAAT,EAAAU,QAAAlH,IAEA9S,KAAAia,UAAA,MAAAF,IACGA,EAAAT,EAAAY,QAAApH,IACH9S,KAAAia,UAAA,MAAAF,IACGA,EAAAT,EAAAa,OAAArH,KACH9S,KAAAia,UAAA,MAAAF,GAEE,iBAAAjH,cACFiH,EAAAjH,GACAsH,YAAAL,EAAAM,IACAra,KAAAia,UAAA,MAAAF,YACGA,EAAAO,YAAAP,EAAAQ,UACHva,KAAAia,UAAA,MAAAF,YACGA,EAAAS,YAAAT,EAAAlZ,MACHb,KAAAia,UAAA,MAAAF,YACGA,EAAAU,YAAAV,EAAAW,UACH1a,KAAAia,UAAA,MAAAF,YACGA,EAAAY,YAAAZ,EAAAa,MACH5a,KAAAia,UAAA,OAAAF,MAnCA,IAAAR,EAAAzG,GAcA,IAAAiH,GA0BAR,EAAArY,WACA2Z,QAAA,WACA,OAAA7a,KAAAwZ,OAEAC,IAAA,WACA,OAAAzZ,KAAA8a,SAAA,MAAAxZ,YAEAoY,IAAA,WACA,OAAA1Z,KAAA8a,SAAA,MAAAxZ,YAEAqY,IAAA,WACA,OAAA3Z,KAAA8a,SAAA,MAAAxZ,YAEAsY,IAAA,WACA,OAAA5Z,KAAA8a,SAAA,MAAAxZ,YAEAuY,KAAA,WACA,OAAA7Z,KAAA8a,SAAA,OAAAxZ,YAGAyZ,SAAA,WACA,OAAA/a,KAAAsC,OAAAmX,KAEAuB,SAAA,WACA,OAAAhb,KAAAsC,OAAAoX,KAEAuB,SAAA,WACA,OAAAjb,KAAAsC,OAAAqX,KAEAuB,SAAA,WACA,IAAA5Y,EAAAtC,KAAAsC,OACA,WAAAA,EAAAwX,MACAxX,EAAAsX,IAAA7G,QAAAzQ,EAAAwX,QAEAxX,EAAAsX,KAEAuB,UAAA,WACA,OAAAnb,KAAAsC,OAAAuX,MAEAuB,UAAA,WACA,IAAA9Y,EAAAtC,KAAAsC,OACA,OAAAA,EAAAmX,IAAA1G,QAAAzQ,EAAAwX,SAEAuB,UAAA,WACA,IAAA/Y,EAAAtC,KAAAsC,OACA,OAAAA,EAAAoX,IAAA3G,QAAAzQ,EAAAwX,SAEAA,MAAA,SAAAwB,GACA,gBAAAA,EACAtb,KAAAsC,OAAAwX,OAEA9Z,KAAAia,UAAA,QAAAqB,GACAtb,OAGAqa,IAAA,SAAAiB,GACA,OAAAtb,KAAAub,WAAA,QAAAD,IAEAE,MAAA,SAAAF,GACA,OAAAtb,KAAAub,WAAA,QAAAD,IAEAG,KAAA,SAAAH,GACA,OAAAtb,KAAAub,WAAA,QAAAD,IAEAI,IAAA,SAAAJ,GAKA,OAJAA,IAEAA,GADAA,GAAA,KACA,MAAAA,KAEAtb,KAAAub,WAAA,QAAAD,IAEAK,WAAA,SAAAL,GACA,OAAAtb,KAAAub,WAAA,QAAAD,IAEAf,UAAA,SAAAe,GACA,OAAAtb,KAAAub,WAAA,QAAAD,IAEAM,YAAA,SAAAN,GACA,OAAAtb,KAAAub,WAAA,QAAAD,IAEAZ,UAAA,SAAAY,GACA,OAAAtb,KAAAub,WAAA,QAAAD,IAEAO,UAAA,SAAAP,GACA,OAAAtb,KAAAub,WAAA,QAAAD,IAEAza,MAAA,SAAAya,GACA,OAAAtb,KAAAub,WAAA,QAAAD,IAEAV,KAAA,SAAAU,GACA,OAAAtb,KAAAub,WAAA,SAAAD,IAEAQ,QAAA,SAAAR,GACA,OAAAtb,KAAAub,WAAA,SAAAD,IAEAS,OAAA,SAAAT,GACA,OAAAtb,KAAAub,WAAA,SAAAD,IAEAU,MAAA,SAAAV,GACA,OAAAtb,KAAAub,WAAA,SAAAD,IAGAW,UAAA,WACA,OAAA3C,EAAA2C,UAAAjc,KAAAsC,OAAAmX,MAEAyC,UAAA,WACA,OAAA5C,EAAA4C,UAAAlc,KAAAsC,OAAAmX,IAAAzZ,KAAAsC,OAAAwX,QAEAqC,WAAA,WACA,OAAA7C,EAAA6C,WAAAnc,KAAAsC,OAAAmX,IAAAzZ,KAAAsC,OAAAwX,QAEAsC,cAAA,WACA,OAAA9C,EAAA8C,cAAApc,KAAAsC,OAAAmX,IAAAzZ,KAAAsC,OAAAwX,QAEAuC,UAAA,WACA,OAAA/C,EAAA+C,UAAArc,KAAAsC,OAAAoX,IAAA1Z,KAAAsC,OAAAwX,QAEAwC,WAAA,WACA,OAAAhD,EAAAgD,WAAAtc,KAAAsC,OAAAoX,IAAA1Z,KAAAsC,OAAAwX,QAEAyC,UAAA,WACA,OAAAjD,EAAAiD,UAAAvc,KAAAsC,OAAAsX,IAAA5Z,KAAAsC,OAAAwX,QAEA0C,QAAA,WACA,OAAAlD,EAAAkD,QAAAxc,KAAAsC,OAAAmX,IAAAzZ,KAAAsC,OAAAwX,QAGA2C,UAAA,WACA,IAAAhD,EAAAzZ,KAAAsC,OAAAmX,IACA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAGAiD,WAAA,WAIA,IAFA,IAAAjD,EAAAzZ,KAAAsC,OAAAmX,IACAkD,KACAvW,EAAA,EAAiBA,EAAAqT,EAAA5X,OAAgBuE,IAAA,CACjC,IAAAwW,EAAAnD,EAAArT,GAAA,IACAuW,EAAAvW,GAAAwW,GAAA,OAAAA,EAAA,MAAApZ,KAAAqZ,KAAAD,EAAA,iBAEA,YAAAD,EAAA,SAAAA,EAAA,SAAAA,EAAA,IAGAG,SAAA,SAAAC,GAEA,IAAAC,EAAAhd,KAAA0c,aACAO,EAAAF,EAAAL,aACA,OAAAM,EAAAC,GACAD,EAAA,MAAAC,EAAA,MAEAA,EAAA,MAAAD,EAAA,MAGAE,MAAA,SAAAH,GACA,IAAAI,EAAAnd,KAAA8c,SAAAC,GACA,OAAAI,GAAA,IACA,MAGAA,GAAA,aAGAC,KAAA,WAEA,IAAA3D,EAAAzZ,KAAAsC,OAAAmX,IAEA,OADA,IAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,QACA,KAGA4D,MAAA,WACA,OAAArd,KAAAod,QAGAE,OAAA,WAEA,IADA,IAAA7D,KACArT,EAAA,EAAiBA,EAAA,EAAOA,IACxBqT,EAAArT,GAAA,IAAApG,KAAAsC,OAAAmX,IAAArT,GAGA,OADApG,KAAAia,UAAA,MAAAR,GACAzZ,MAGAud,QAAA,SAAAC,GACA,IAAA9D,EAAA1Z,KAAAsC,OAAAoX,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAA8D,EACAxd,KAAAia,UAAA,MAAAP,GACA1Z,MAGAyd,OAAA,SAAAD,GACA,IAAA9D,EAAA1Z,KAAAsC,OAAAoX,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAA8D,EACAxd,KAAAia,UAAA,MAAAP,GACA1Z,MAGA0d,SAAA,SAAAF,GACA,IAAA9D,EAAA1Z,KAAAsC,OAAAoX,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAA8D,EACAxd,KAAAia,UAAA,MAAAP,GACA1Z,MAGA2d,WAAA,SAAAH,GACA,IAAA9D,EAAA1Z,KAAAsC,OAAAoX,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAA8D,EACAxd,KAAAia,UAAA,MAAAP,GACA1Z,MAGA4d,OAAA,SAAAJ,GACA,IAAA5D,EAAA5Z,KAAAsC,OAAAsX,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAA4D,EACAxd,KAAAia,UAAA,MAAAL,GACA5Z,MAGA6d,QAAA,SAAAL,GACA,IAAA5D,EAAA5Z,KAAAsC,OAAAsX,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAA4D,EACAxd,KAAAia,UAAA,MAAAL,GACA5Z,MAGA8d,UAAA,WACA,IAAArE,EAAAzZ,KAAAsC,OAAAmX,IAEA6B,EAAA,GAAA7B,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAEA,OADAzZ,KAAAia,UAAA,OAAAqB,QACAtb,MAGA+d,QAAA,SAAAP,GACA,IAAA1D,EAAA9Z,KAAAsC,OAAAwX,MAEA,OADA9Z,KAAAia,UAAA,QAAAH,IAAA0D,GACAxd,MAGAge,QAAA,SAAAR,GACA,IAAA1D,EAAA9Z,KAAAsC,OAAAwX,MAEA,OADA9Z,KAAAia,UAAA,QAAAH,IAAA0D,GACAxd,MAGAie,OAAA,SAAAC,GACA,IAAAxE,EAAA1Z,KAAAsC,OAAAoX,IACAgC,GAAAhC,EAAA,GAAAwE,GAAA,IAGA,OAFAxE,EAAA,GAAAgC,EAAA,MAAAA,IACA1b,KAAAia,UAAA,MAAAP,GACA1Z,MAOAme,IAAA,SAAAC,EAAAC,GACA,IACAtB,EAAAqB,EACAE,WAAAD,EAAA,GAAAA,EAEA5D,EAAA,EAAA6D,EAAA,EACAC,EALAve,KAKA8Z,QAAAiD,EAAAjD,QAEA0E,IAAA/D,EAAA8D,IAAA,EAAA9D,KAAA8D,IAAA,EAAA9D,EAAA8D,IAAA,KACAE,EAAA,EAAAD,EAEA,OAAAxe,KACAyZ,IACA+E,EAZAxe,KAYAqa,MAAAoE,EAAA1B,EAAA1C,MACAmE,EAbAxe,KAaAwb,QAAAiD,EAAA1B,EAAAvB,QACAgD,EAdAxe,KAcAyb,OAAAgD,EAAA1B,EAAAtB,QAEA3B,MAhBA9Z,KAgBA8Z,QAAAwE,EAAAvB,EAAAjD,SAAA,EAAAwE,KAGAI,OAAA,WACA,OAAA1e,KAAAyZ,OAGAkF,MAAA,WAKA,IAGA9d,EAAA2G,EAHA+B,EAAA,IAAAgQ,EACAqF,EAAA5e,KAAAsC,OACAuc,EAAAtV,EAAAjH,OAGA,QAAAwc,KAAAF,EACAA,EAAAzd,eAAA2d,KACAje,EAAA+d,EAAAE,GAEA,oBADAtX,KAAciB,SAAAlH,KAAAV,IAEdge,EAAAC,GAAAje,EAAAke,MAAA,GACK,oBAAAvX,EACLqX,EAAAC,GAAAje,EAEAgQ,QAAAC,MAAA,0BAAAjQ,IAKA,OAAA0I,IAIAgQ,EAAArY,UAAA8d,QACAvF,KAAA,sBACAC,KAAA,gCACAC,KAAA,4BACAC,KAAA,+BACAC,MAAA,oCAGAN,EAAArY,UAAA+d,OACAxF,KAAA,aACAC,KAAA,aACAC,KAAA,aACAC,KAAA,aACAC,MAAA,kBAGAN,EAAArY,UAAAge,UAAA,SAAAC,GAIA,IAHA,IAAA7c,EAAAtC,KAAAsC,OACAyX,KAEA3T,EAAA,EAAgBA,EAAA+Y,EAAAtd,OAAkBuE,IAClC2T,EAAAoF,EAAAC,OAAAhZ,IAAA9D,EAAA6c,GAAA/Y,GAQA,OALA,IAAA9D,EAAAwX,QACAC,EAAAwE,EAAAjc,EAAAwX,OAIAC,GAGAR,EAAArY,UAAA+Y,UAAA,SAAAkF,EAAApF,GACA,IAIA3T,EAkCAiZ,EAtCA/c,EAAAtC,KAAAsC,OACA0c,EAAAhf,KAAAgf,OACAC,EAAAjf,KAAAif,MACAnF,EAAA,EAKA,GAFA9Z,KAAAwZ,SAEA,UAAA2F,EACArF,EAAAC,OACE,GAAAA,EAAAlY,OAEFS,EAAA6c,GAAApF,EAAAgF,MAAA,EAAAI,EAAAtd,QACAiY,EAAAC,EAAAoF,EAAAtd,aACE,YAAAkY,EAAAoF,EAAAC,OAAA,KAEF,IAAAhZ,EAAA,EAAaA,EAAA+Y,EAAAtd,OAAkBuE,IAC/B9D,EAAA6c,GAAA/Y,GAAA2T,EAAAoF,EAAAC,OAAAhZ,IAGA0T,EAAAC,EAAAwE,OACE,YAAAxE,EAAAiF,EAAAG,GAAA,KAEF,IAAAG,EAAAN,EAAAG,GAEA,IAAA/Y,EAAA,EAAaA,EAAA+Y,EAAAtd,OAAkBuE,IAC/B9D,EAAA6c,GAAA/Y,GAAA2T,EAAAuF,EAAAlZ,IAGA0T,EAAAC,EAAAD,MAKA,GAFAxX,EAAAwX,MAAAtW,KAAAI,IAAA,EAAAJ,KAAAC,IAAA,WAAAqW,EAAAxX,EAAAwX,UAEA,UAAAqF,EACA,SAMA,IAAA/Y,EAAA,EAAYA,EAAA+Y,EAAAtd,OAAkBuE,IAC9BiZ,EAAA7b,KAAAI,IAAA,EAAAJ,KAAAC,IAAAwb,EAAAE,GAAA/Y,GAAA9D,EAAA6c,GAAA/Y,KACA9D,EAAA6c,GAAA/Y,GAAA5C,KAAA+b,MAAAF,GAIA,QAAAG,KAAAR,EACAQ,IAAAL,IACA7c,EAAAkd,GAAAnG,EAAA8F,GAAAK,GAAAld,EAAA6c,KAIA,UAGA5F,EAAArY,UAAA4Z,SAAA,SAAAqE,EAAAhW,GACA,IAAA4Q,EAAA5Q,EAAA,GAEA,gBAAA4Q,EAEA/Z,KAAAkf,UAAAC,IAIA,iBAAApF,IACAA,EAAA0F,MAAAve,UAAA6d,MAAAxd,KAAA4H,IAGAnJ,KAAAia,UAAAkF,EAAApF,GACA/Z,OAGAuZ,EAAArY,UAAAqa,WAAA,SAAA4D,EAAA5c,EAAA+Y,GACA,IAAAoE,EAAA1f,KAAAsC,OAAA6c,GACA,gBAAA7D,EAEAoE,EAAAnd,GACE+Y,IAAAoE,EAAAnd,GAEFvC,MAIA0f,EAAAnd,GAAA+Y,EACAtb,KAAAia,UAAAkF,EAAAO,GAEA1f,OAGA,oBAAA2f,SACAA,OAAApG,SAGA1Z,EAAAC,QAAAyZ,wBCvdA1Z,EAAAC,QANA,SAAAC,GACA,gBAAA8I,GACA,aAAAA,WAAA9I,6BCTA,IAAAyB,EAAA5B,EAAA,QAcAC,EAAAC,QALA,WACAE,KAAAC,SAAA,IAAAuB,EACAxB,KAAAgC,KAAA,IAAA4d,OAAA,SAAAzf,EAAAC,EAAAC,GCXA,IAAAwf,EAAAjgB,EAAA,QACAkgB,EAAAlgB,EAAA,QACAmgB,EAAAngB,EAAA,QAkCAC,EAAAC,QAJA,SAAA+I,GACA,OAAAkX,EAAAlX,GAAAgX,EAAAhX,GAAAiX,EAAAjX,yCC/BAhJ,EAAAC,QAAA,SAAAqI,GAEAA,EAAA6X,KAAA,SAAA5P,EAAAF,GAGA,OAFAA,EAAA1I,KAAA,OAEA,IAAAW,EAAAiI,EAAAF,2BCgBArQ,EAAAC,QAdA,SAAAmgB,EAAAC,GAKA,IAJA,IAAA3W,EACAhH,GAAA,EACAV,EAAAoe,EAAApe,SAEAU,EAAAV,GAAA,CACA,IAAAse,EAAAD,EAAAD,EAAA1d,aACA4d,IACA5W,aAAA4W,EAAA5W,EAAA4W,GAGA,OAAA5W,yBCHA1J,EAAAC,QAVA,SAAAiM,GACA,IAAAxJ,GAAA,EACAgH,EAAAkW,MAAA1T,EAAA/J,MAKA,OAHA+J,EAAAqU,QAAA,SAAAvf,EAAAd,GACAwJ,IAAAhH,IAAAxC,EAAAc,KAEA0I,wCCZA,IAAA7G,EAAA9C,EAAA,QACA6K,EAAA7K,EAAA,QACAygB,EAAAzgB,EAAA,QAEAC,EAAAC,QAAA,SAAAqI,GAEA,IAAAmY,EAAA5d,EAAA6B,OAEAgc,GACA3V,WAGA4V,WACA/Y,SAAA,YAEAkD,YACAC,WACA6V,MAAA,qBACA5a,UAAA,GAGAgF,WACAC,aAIAE,OAEA0V,qBAGAC,cAAA,yBAGAC,iBAAA,EAGAC,iBAAA,EAEAxL,SAAAgL,EAAAS,WAAAC,QAGAhW,aAEAH,WAGAoW,SAAA,GAGA3L,SAAA,SAAAtN,GACA,OAAAA,KAKA,SAAAkZ,EAAAvW,GACA,IAAA8C,EAAA9C,EAAA4B,QACA,OAAAkB,EAAA7C,WAAAC,SAAA4C,EAAAzC,YAAAH,QAAAF,EAAAc,MAAA7J,KAAAgK,OAAA9J,OAAA,EAGA,SAAAqf,EAAAxW,GACA,IAAAyW,EAAAzW,EAAA4B,QAAAvB,YACAiW,EAAAvW,EAAA2I,eAAA+N,EAAAH,SAAAV,EAAAc,iBACAC,EAAA5W,EAAA2I,eAAA+N,EAAAE,UAAAf,EAAAgB,kBACAC,EAAA9W,EAAA2I,eAAA+N,EAAAI,WAAAjB,EAAAkB,mBAGA,OACAxf,KAAAgf,EACA9O,MAAAmP,EACAI,OAAAF,EACAG,KANAjX,EAAAkX,WAAAX,EAAAK,EAAAE,IAwBA,SAAAK,EAAAC,EAAAC,EAAA9f,EAAAyB,EAAAG,GACA,OAAAie,IAAApe,GAAAoe,IAAAje,GAEAme,MAAAD,EAAA9f,EAAA,EACAggB,IAAAF,EAAA9f,EAAA,GAEG6f,EAAApe,GAAAoe,EAAAje,GAEHme,MAAAD,EAAA9f,EAAA,EACAggB,IAAAF,IAKAC,MAAAD,EACAE,IAAAF,EAAA9f,EAAA,GAkGA,SAAAigB,EAAAJ,GACA,WAAAA,GAAA,MAAAA,EACA,SACGA,EAAA,IACH,OAGA,QAGA,SAAAK,EAAAld,EAAAyG,EAAAhE,EAAAuZ,GACA,GAAAvW,EAAAL,QAAAqB,GAIA,IAHA,IAAA/H,EAAA+D,EAAA/D,EACAye,EAAA,IAAAnB,EAEA5a,EAAA,EAAkBA,EAAAqF,EAAA5J,SAAiBuE,EACnCpB,EAAAkd,SAAAzW,EAAArF,GAAAqB,EAAAlE,EAAAG,GACAA,GAAAye,OAGAnd,EAAAkd,SAAAzW,EAAAhE,EAAAlE,EAAAkE,EAAA/D,GAIA,SAAA0e,EAAAP,EAAAQ,EAAA5a,GACA,KAAAoa,GAAA,MAAAA,EACApa,EAAA/D,GAAA2e,EAAAC,EAAA,GACGT,EAAA,KAAAA,EAAA,MACHpa,EAAA/D,GAAA2e,EAAAC,GAiFA,SAAAC,EAAAC,GACA,OAAA/X,EAAAgY,SAAAD,KAAA,EAGA,IAAAE,EAAAva,EAAAwa,gBAAA/d,QACAge,cAAA,WACA,IAAAvV,EAAArN,KACAwN,EAAAH,EAAAf,QACAuW,EAAArV,EAAAxC,MAEAqC,EAAAtK,MAAAsK,EAAAyV,SACAzV,EAAAvJ,OAAAuJ,EAAA0V,UACA1V,EAAAoB,QAAAjL,KAAA+b,MAAAlS,EAAAtK,MAAA,GACAsK,EAAAsB,QAAAnL,KAAA+b,MAAAlS,EAAAvJ,OAAA,GAEA,IAAA2J,EAAAhD,EAAAhH,KAAA4J,EAAAvJ,OAAAuJ,EAAAtK,QACAigB,EAAAvY,EAAA2I,eAAAyP,EAAA7B,SAAAV,EAAAc,iBACA/T,EAAA4V,YAAAzV,EAAA5C,QAAA6C,EAAA,GAAAuV,EAAA,EAAAH,EAAAjC,kBAAAnT,EAAA,GAEAyV,oBAAA,WACA,IAAA7V,EAAArN,KACAwL,EAAA6B,EAAA7B,MACA/H,EAAA0f,OAAAC,kBACAxf,EAAAuf,OAAAE,kBAEA5Y,EAAAwD,KAAAzC,EAAA7J,KAAA+J,SAAA,SAAAyC,EAAA0F,GACA,GAAArI,EAAAgL,iBAAA3C,GAAA,CACA,IAAA7H,EAAAR,EAAAS,eAAA4H,GAEApJ,EAAAwD,KAAAE,EAAAxM,KAAA,SAAA2hB,EAAA/gB,GACA,IAAA1B,GAAAwM,EAAAkW,cAAAD,GACA7W,MAAA5L,IAAAmL,EAAArK,KAAAY,GAAAiK,SAIA/I,EAAAD,KAAAC,IAAA5C,EAAA4C,GACAG,EAAAJ,KAAAI,IAAA/C,EAAA+C,SAKAyJ,EAAA5J,QAAA0f,OAAAC,kBAAA,EAAA3f,EACA4J,EAAAzJ,QAAAuf,OAAAE,kBAAA,EAAAzf,EAGAyJ,EAAAmW,0BAEAC,aAAA,WACA,IAAAZ,EAAA7iB,KAAAsM,QAAAtB,MACAgY,EAAAvY,EAAA2I,eAAAyP,EAAA7B,SAAAV,EAAAc,iBACA,OAAA5d,KAAAC,IAAAof,EAAAa,cAAAb,EAAAa,cAAA,GAAAlgB,KAAAmgB,KAAA3jB,KAAAijB,aAAA,IAAAD,MAEAY,qBAAA,WACA,IAAAvW,EAAArN,KAEAmI,EAAAwa,gBAAAzhB,UAAA0iB,qBAAAriB,KAAA8L,GAGAA,EAAAtC,YAAAsC,EAAA7B,MAAA7J,KAAAgK,OAAAI,IAAAsB,EAAAf,QAAAvB,YAAAsK,SAAAhI,IAEAwW,iBAAA,SAAAthB,EAAAsR,GACA,OAAA7T,KAAAujB,cAAAvjB,KAAAwL,MAAA7J,KAAA+J,SAAAmI,GAAAlS,KAAAY,KAEAuhB,IAAA,WAlLA,IAAApZ,EACAqZ,EAkLA/jB,KAAAsM,QAAAvB,YAAAH,QAxQA,SAAAF,GA6BA,IAYAtE,EAAAic,EAAA2B,EAZAC,EAAA/C,EAAAxW,GAIAqZ,EAAAvgB,KAAAC,IAAAiH,EAAA5G,OAAA,EAAA4G,EAAA3H,MAAA,GACAmhB,GACA9J,EAAA1P,EAAA3H,MACAuX,EAAA,EACAna,EAAAuK,EAAA5G,OACAqgB,EAAA,GAEAC,KAGA1Z,EAAA1F,IAAA0c,KAAAuC,EAAAvC,KACAhX,EAAA2Z,oBAEA,IAlFArf,EAAAgc,EAAAjZ,EAkFAuc,EAAArD,EAAAvW,GACA,IAAAtE,EAAA,EAAaA,EAAAke,EAAgBle,IAAA,CAC7B4d,EAAAtZ,EAAA6Z,iBAAAne,EAAA2d,GApFA/e,EAqFA0F,EAAA1F,IArFAgc,EAqFAiD,EAAAjiB,KArFA+F,EAqFA2C,EAAAK,YAAA3E,IAAA,GAAAic,EApFA5X,EAAAL,QAAArC,IAEA0S,EAAAhQ,EAAA+Z,YAAAxf,IAAA0c,KAAA3Z,GACAua,EAAAva,EAAAlG,OAAAmf,EAAA,KAAAjZ,EAAAlG,OAAA,GAAAmf,IAKAvG,EAAAzV,EAAAyf,YAAA1c,GAAAhF,MACAuf,EAAAtB,GA4EAtW,EAAA2Z,iBAAAje,GAAAic,EAGA,IAAAqC,EAAAha,EAAAia,cAAAve,GACAyb,EAAApX,EAAAma,UAAAF,GAAA,IACAG,EAAAjD,EAAAC,EAAAmC,EAAAzgB,EAAA8e,EAAA5H,EAAA,OACAqK,EAAAlD,EAAAC,EAAAmC,EAAAtgB,EAAA2e,EAAAC,EAAA,QAEAuC,EAAA9C,MAAAmC,EAAA5J,IACA4J,EAAA5J,EAAAuK,EAAA9C,MACAqC,EAAA9J,EAAAoK,GAGAG,EAAA7C,IAAAkC,EAAA9J,IACA8J,EAAA9J,EAAAyK,EAAA7C,IACAoC,EAAAhK,EAAAsK,GAGAI,EAAA/C,MAAAmC,EAAA/jB,IACA+jB,EAAA/jB,EAAA2kB,EAAA/C,MACAqC,EAAAjkB,EAAAukB,GAGAI,EAAA9C,IAAAkC,EAAAC,IACAD,EAAAC,EAAAW,EAAA9C,IACAoC,EAAAD,EAAAO,GAIAha,EAAAqa,cAAAhB,EAAAG,EAAAE,GA/EA,CAyQApkB,OApLA0K,EAsLA1K,KArLA+jB,EAAAvgB,KAAAC,IAAAiH,EAAA5G,OAAA,EAAA4G,EAAA3H,MAAA,GACA2H,EAAAuY,YAAAzf,KAAA+b,MAAAwE,GACArZ,EAAAsa,eAAA,WA0LAD,cAAA,SAAAhB,EAAAG,EAAAE,GACA,IACAa,EAAAf,EAAA5J,EAAA9W,KAAA0hB,IAAAd,EAAA9J,GACA6K,EAAA3hB,KAAAI,IAAAsgB,EAAA9J,EAFApa,KAEA+C,MAAA,GAAAS,KAAA0hB,IAAAd,EAAAhK,GACAgL,GAAAlB,EAAA/jB,EAAAqD,KAAA6hB,IAAAjB,EAAAjkB,GACAmlB,GAAA9hB,KAAAI,IAAAsgB,EAAAC,EAJAnkB,KAIA8D,OAAA,GAAAN,KAAA6hB,IAAAjB,EAAAD,GAEAc,EAAA1C,EAAA0C,GACAE,EAAA5C,EAAA4C,GACAC,EAAA7C,EAAA6C,GACAE,EAAA/C,EAAA+C,GATAtlB,KAWAijB,YAAAzf,KAAAC,IACAD,KAAA+b,MAAAwE,GAAAkB,EAAAE,GAAA,GACA3hB,KAAA+b,MAAAwE,GAAAqB,EAAAE,GAAA,IAbAtlB,KAcAglB,eAAAC,EAAAE,EAAAC,EAAAE,IAEAN,eAAA,SAAAO,EAAAC,EAAAC,EAAAC,GACA,IAAArY,EAAArN,KACA2lB,EAAAtY,EAAAtK,MAAAyiB,EAAAnY,EAAA4V,YACA2C,EAAAL,EAAAlY,EAAA4V,YACA4C,EAAAJ,EAAApY,EAAA4V,YACA6C,EAAAzY,EAAAvJ,OAAA4hB,EAAArY,EAAA4V,YAEA5V,EAAAoB,QAAAjL,KAAA+b,OAAAqG,EAAAD,GAAA,EAAAtY,EAAAtJ,MACAsJ,EAAAsB,QAAAnL,KAAA+b,OAAAsG,EAAAC,GAAA,EAAAzY,EAAArJ,MAGA2gB,cAAA,SAAApiB,GASA,OAAAA,GARA,EAAAiB,KAAA8H,GAAA2V,EAAAjhB,QACAA,KAAAwL,MAAAc,SAAAtM,KAAAwL,MAAAc,QAAAjB,WACArL,KAAAwL,MAAAc,QAAAjB,WACA,GAEA7H,KAAA8H,GAAA,OAKAyD,8BAAA,SAAAlO,GACA,IAAAwM,EAAArN,KAEA,UAAAa,EACA,SAIA,IAAAklB,EAAA1Y,EAAA4V,aAAA5V,EAAAzJ,IAAAyJ,EAAA5J,KACA,OAAA4J,EAAAf,QAAAtB,MAAAgb,SACA3Y,EAAAzJ,IAAA/C,GAAAklB,GAEAllB,EAAAwM,EAAA5J,KAAAsiB,GAEAxB,iBAAA,SAAAhiB,EAAA0jB,GACA,IACAC,EADAlmB,KACA2kB,cAAApiB,GAAAiB,KAAA8H,GAAA,EACA,OACA/H,EAAAC,KAAA+b,MAAA/b,KAAA6hB,IAAAa,GAAAD,GAHAjmB,KAGAyO,QACA/K,EAAAF,KAAA+b,MAAA/b,KAAA0hB,IAAAgB,GAAAD,GAJAjmB,KAIA2O,UAGAwX,yBAAA,SAAA5jB,EAAA1B,GACA,OAAAb,KAAAukB,iBAAAhiB,EAAAvC,KAAA+O,8BAAAlO,KAGAulB,gBAAA,WACA,IACA3iB,EADAzD,KACAyD,IACAG,EAFA5D,KAEA4D,IAEA,OAJA5D,KAIAmmB,yBAAA,EAJAnmB,KAKAiL,YAAA,EACAxH,EAAA,GAAAG,EAAA,EAAAA,EACAH,EAAA,GAAAG,EAAA,EAAAH,EACA,IAGAoB,KAAA,WACA,IAAAwI,EAAArN,KACAwN,EAAAH,EAAAf,QACA+Z,EAAA7Y,EAAA3C,UACAgY,EAAArV,EAAAxC,MACAoI,EAAA3I,EAAA2I,eAEA,GAAA5F,EAAA5C,QAAA,CACA,IAAA5F,EAAAqI,EAAArI,IACAqG,EAAArL,KAAA2kB,cAAA,GAGA3B,EAAA5P,EAAAyP,EAAA7B,SAAAV,EAAAc,iBACAkF,EAAAlT,EAAAyP,EAAAxB,UAAAf,EAAAgB,kBACAiF,EAAAnT,EAAAyP,EAAAtB,WAAAjB,EAAAkB,mBACAgF,EAAA/b,EAAAkX,WAAAqB,EAAAsD,EAAAC,GAEA9b,EAAAwD,KAAAZ,EAAArC,MAAA,SAAAjD,EAAAxF,GAEA,GAAAA,EAAA,GAAAsgB,EAAAmD,QAAA,CACA,IAAAS,EAAApZ,EAAA0B,8BAAA1B,EAAAqZ,eAAAnkB,IAOA,GAJA8jB,EAAAzb,SAAA,IAAArI,GA/MA,SAAAmI,EAAA2b,EAAAM,EAAApkB,GACA,IAAAyC,EAAA0F,EAAA1F,IAIA,GAHAA,EAAAY,YAAA6E,EAAA2B,sBAAAia,EAAA5F,MAAAle,EAAA,GACAyC,EAAAa,UAAA4E,EAAA2B,sBAAAia,EAAAxgB,UAAAtD,EAAA,GAEAmI,EAAA4B,QAAAzB,UAAAC,SAEA9F,EAAAU,YACAV,EAAAuH,IAAA7B,EAAA+D,QAAA/D,EAAAiE,QAAAgY,EAAA,IAAAnjB,KAAA8H,IACAtG,EAAA4hB,YACA5hB,EAAAuB,aACG,CAEH,IAAA+d,EAAArD,EAAAvW,GAEA,OAAA4Z,EACA,OAGAtf,EAAAU,YACA,IAAAse,EAAAtZ,EAAA6Z,iBAAA,EAAAoC,GACA3hB,EAAAmB,OAAA6d,EAAAzgB,EAAAygB,EAAAtgB,GAEA,QAAA0C,EAAA,EAAkBA,EAAAke,EAAgBle,IAClC4d,EAAAtZ,EAAA6Z,iBAAAne,EAAAugB,GACA3hB,EAAAqB,OAAA2d,EAAAzgB,EAAAygB,EAAAtgB,GAGAsB,EAAA4hB,YACA5hB,EAAAuB,UA7BA,CAgNA8G,EAAAgZ,EAAAI,EAAAlkB,GAGAsgB,EAAAjY,QAAA,CACA,IAAAic,EAAAzT,EAAAyP,EAAAiE,UAAAxG,EAAAyG,kBAOA,GANA/hB,EAAA0c,KAAA8E,EAEAxhB,EAAAgiB,OACAhiB,EAAAiiB,UAAA5Z,EAAAoB,QAAApB,EAAAsB,SACA3J,EAAAiZ,OAAA5S,GAEAwX,EAAAnC,kBAAA,CACA,IAAAwG,EAAAliB,EAAAyf,YAAA1c,GAAAhF,MACAiC,EAAAW,UAAAkd,EAAAlC,cACA3b,EAAAmiB,UACAD,EAAA,EAAArE,EAAAhC,kBACA4F,EAAAzD,EAAA,EAAAH,EAAAjC,iBACAsG,EAAA,EAAArE,EAAAhC,iBACAmC,EAAA,EAAAH,EAAAjC,kBAIA5b,EAAAoiB,UAAA,SACApiB,EAAAqiB,aAAA,SACAriB,EAAAW,UAAAkhB,EACA7hB,EAAAkd,SAAAna,EAAA,GAAA0e,GACAzhB,EAAAsiB,eAKA9Z,EAAA7C,WAAAC,SAAA4C,EAAAzC,YAAAH,UA3RA,SAAAF,GACA,IAAA1F,EAAA0F,EAAA1F,IACAwI,EAAA9C,EAAA4B,QACAib,EAAA/Z,EAAA7C,WACA6c,EAAAha,EAAAzC,YAEA/F,EAAAa,UAAA0hB,EAAA1hB,UACAb,EAAAY,YAAA2hB,EAAA9G,MAEA,IAAAgH,EAAA/c,EAAAqE,8BAAAvB,EAAAxC,MAAAgb,QAAAtb,EAAAjH,IAAAiH,EAAA9G,KAGAqgB,EAAA/C,EAAAxW,GAEA1F,EAAAqiB,aAAA,MAEA,QAAAjhB,EAAA6a,EAAAvW,GAAA,EAAwCtE,GAAA,EAAQA,IAAA,CAChD,GAAAmhB,EAAA3c,QAAA,CACA,IAAA8c,EAAAhd,EAAA6Z,iBAAAne,EAAAqhB,GACAziB,EAAAU,YACAV,EAAAmB,OAAAuE,EAAA+D,QAAA/D,EAAAiE,SACA3J,EAAAqB,OAAAqhB,EAAAnkB,EAAAmkB,EAAAhkB,GACAsB,EAAAuB,SACAvB,EAAA4hB,YAGA,GAAAY,EAAA5c,QAAA,CAEA,IAAA+c,EAAAjd,EAAA6Z,iBAAAne,EAAAqhB,EAAA,GAGAG,EAAAnd,EAAA2B,sBAAAob,EAAAV,UAAA1gB,EAAAka,EAAAyG,kBACA/hB,EAAA0c,KAAAuC,EAAAvC,KACA1c,EAAAW,UAAAiiB,EAEA,IAAAlD,EAAAha,EAAAia,cAAAve,GACAyb,EAAApX,EAAAma,UAAAF,GACA1f,EAAAoiB,UAAAnF,EAAAJ,GACAO,EAAAP,EAAAnX,EAAA2Z,iBAAAje,GAAAuhB,GACAzF,EAAAld,EAAA0F,EAAAK,YAAA3E,IAAA,GAAAuhB,EAAA1D,EAAAjiB,QAvCA,CA4RAqL,OAKAlF,EAAAmL,aAAAuU,kBAAA,eAAAnF,EAAAnC,yCC5gBA1gB,EAAAC,QAAA,SAAAqI,GAGA,IAIA2f,EAAA3f,EAAA4f,MAAAnjB,QAMAojB,UAAA,WACA,IAAArmB,EAAA3B,KAAAwL,MAAA7J,KACA,OAAA3B,KAAAsM,QAAAX,SAAA3L,KAAAioB,eAAAtmB,EAAAumB,QAAAvmB,EAAAwmB,UAAAxmB,EAAAgK,QAGAuX,oBAAA,WACA,IAIAkF,EAJA/a,EAAArN,KACA2L,EAAA0B,EAAA2a,YACA3a,EAAAgb,SAAA,EACAhb,EAAAib,SAAA3c,EAAA9J,OAAA,WAGAwL,EAAAf,QAAAtB,MAAAvH,MAEA2kB,EAAAzc,EAAA3F,QAAAqH,EAAAf,QAAAtB,MAAAvH,KACA4J,EAAAgb,UAAA,IAAAD,IAAA/a,EAAAgb,mBAGAhb,EAAAf,QAAAtB,MAAApH,MAEAwkB,EAAAzc,EAAA3F,QAAAqH,EAAAf,QAAAtB,MAAApH,KACAyJ,EAAAib,UAAA,IAAAF,IAAA/a,EAAAib,UAGAjb,EAAA5J,IAAAkI,EAAA0B,EAAAgb,UACAhb,EAAAzJ,IAAA+H,EAAA0B,EAAAib,WAGAC,WAAA,WACA,IAAAlb,EAAArN,KACA2L,EAAA0B,EAAA2a,YAEA3a,EAAArC,MAAA,IAAAqC,EAAAgb,UAAAhb,EAAAib,WAAA3c,EAAA9J,OAAA,EAAA8J,IAAAoT,MAAA1R,EAAAgb,SAAAhb,EAAAib,SAAA,IAGAzE,iBAAA,SAAAthB,EAAAsR,GACA,IAAAxG,EAAArN,KACA2B,EAAA0L,EAAA7B,MAAA7J,KACAsmB,EAAA5a,EAAA4a,eAEA,OAAAtmB,EAAAwmB,UAAAF,EACA5a,EAAAkW,cAAA5hB,EAAA+J,SAAAmI,GAAAlS,KAAAY,IAEA8K,EAAArC,MAAAzI,EAAA8K,EAAAgb,WAIAG,iBAAA,SAAA3nB,EAAA0B,GACA,IAOAkmB,EAPApb,EAAArN,KACA0oB,EAAArb,EAAAf,QAAAoc,OAEAC,EAAAnlB,KAAAI,IAAAyJ,EAAAib,SAAA,EAAAjb,EAAAgb,UAAAK,EAAA,QAQA,YAHA7nB,GAAA,OAAAA,IACA4nB,EAAApb,EAAA4a,eAAApnB,EAAA0C,EAAA1C,EAAA6C,YAEA+kB,YAAA5nB,GAAA4L,MAAAlK,GAAA,CACA,IAAAoJ,EAAA0B,EAAA2a,YACAnnB,EAAA4nB,GAAA5nB,EACA,IAAA+nB,EAAAjd,EAAA3F,QAAAnF,GACA0B,GAAA,IAAAqmB,IAAArmB,EAGA,GAAA8K,EAAA4a,eAAA,CACA,IAAAY,EAAAxb,EAAAtK,MAAA4lB,EACAG,EAAAD,GAAAtmB,EAAA8K,EAAAgb,UAMA,OAJAK,IACAI,GAAAD,EAAA,GAGAxb,EAAAtJ,KAAAP,KAAA+b,MAAAuJ,GAEA,IAAAC,EAAA1b,EAAAvJ,OAAA6kB,EACAK,EAAAD,GAAAxmB,EAAA8K,EAAAgb,UAMA,OAJAK,IACAM,GAAAD,EAAA,GAGA1b,EAAArJ,IAAAR,KAAA+b,MAAAyJ,IAEAC,gBAAA,SAAA1mB,GACA,OAAAvC,KAAAwoB,iBAAAxoB,KAAAgL,MAAAzI,KAAAvC,KAAAqoB,SAAA,OAEAa,iBAAA,SAAAC,GACA,IAAA9b,EAAArN,KACA0oB,EAAArb,EAAAf,QAAAoc,OAEAC,EAAAnlB,KAAAI,IAAAyJ,EAAA+b,OAAAvnB,QAAA6mB,EAAA,QACAW,EAAAhc,EAAA4a,eACAqB,GAAAD,EAAAhc,EAAAtK,MAAAsK,EAAAvJ,QAAA6kB,EAcA,OAZAQ,GAAAE,EAAAhc,EAAAtJ,KAAAsJ,EAAArJ,IAEA0kB,IACAS,GAAAG,EAAA,IAGAH,GAAA,EACA,EAEA3lB,KAAA+b,MAAA4J,EAAAG,IAGAjc,EAAAgb,UAEAkB,aAAA,WACA,OAAAvpB,KAAAkE,UAIAiE,EAAAmL,aAAAuU,kBAAA,WAAAC,GA5HArgB,SAAA,aAAA+hB,OAAA,SAAArpB,EAAAC,EAAAC,GCNA,IAAAopB,EAAA7pB,EAAA,QAoBAC,EAAAC,QARA,SAAAe,GACA,oBAAAA,GAAA4oB,EAAA5oB,GACA,OAAAA,EAEA,IAAA0I,EAAA1I,EAAA,GACA,WAAA0I,GAAA,EAAA1I,IAdA,IAcA,KAAA0I,2BCjBA,IAAAa,EAAAxK,EAAA,QACA6pB,EAAA7pB,EAAA,QAGA8pB,EAAA,mDACAC,EAAA,QAuBA9pB,EAAAC,QAbA,SAAAe,EAAAgI,GACA,GAAAuB,EAAAvJ,GACA,SAEA,IAAA2G,SAAA3G,EACA,kBAAA2G,GAAA,UAAAA,GAAA,WAAAA,GACA,MAAA3G,IAAA4oB,EAAA5oB,KAGA8oB,EAAAC,KAAA/oB,KAAA6oB,EAAAE,KAAA/oB,IACA,MAAAgI,GAAAhI,KAAAI,OAAA4H,uCCtBA,IAAAnG,EAAA9C,EAAA,QACA+C,EAAA/C,EAAA,QACA6K,EAAA7K,EAAA,QAEA8C,EAAAyB,KAAA,UACA+G,WACAmJ,SAAA,IACAW,OAAA,eACAc,WAAArL,EAAA0C,KACAiI,WAAA3K,EAAA0C,QAIAtN,EAAAC,QAAA,SAAAqI,GAEAA,EAAAmN,UAAA3S,EAAAiC,QACA4G,MAAA,KACAmK,YAAA,EACAJ,SAAA,GACAP,OAAA,GACAC,OAAA,KAEAY,oBAAA,KACAE,oBAAA,OAGA5N,EAAAsJ,kBACAoY,cAAA,GACAC,cACAC,WAAA,EACAC,QAAA,KAQAhU,aAAA,SAAAxK,EAAAN,EAAAmJ,EAAAC,GACA,IACAlO,EAAAwG,EADAkd,EAAA9pB,KAAA8pB,WASA,IANA5e,EAAAM,QAEA8I,IACA9I,EAAAmN,cAGAvS,EAAA,EAAAwG,EAAAkd,EAAAjoB,OAAwCuE,EAAAwG,IAAUxG,EAClD,GAAA0jB,EAAA1jB,GAAAoF,UAEA,YADAse,EAAA1jB,GAAA8E,GAKA4e,EAAA/nB,KAAAmJ,GAGA,IAAA4e,EAAAjoB,QACA7B,KAAAiqB,yBAIAvY,gBAAA,SAAAlG,GACA,IAAAjJ,EAAAkI,EAAA2d,UAAApoB,KAAA8pB,WAAA,SAAA5e,GACA,OAAAA,EAAAM,aAGA,IAAAjJ,IACAvC,KAAA8pB,WAAAI,OAAA3nB,EAAA,GACAiJ,EAAAmN,eAIAsR,sBAAA,WACA,IAAA5c,EAAArN,KACA,OAAAqN,EAAA2c,UAIA3c,EAAA2c,QAAAvf,EAAA0f,iBAAA5oB,KAAAoe,OAAA,WACAtS,EAAA2c,QAAA,KACA3c,EAAA+c,kBAQAA,YAAA,WACA,IAAA/c,EAAArN,KACAqqB,EAAAC,KAAAC,MACAC,EAAA,EAEAnd,EAAA0c,WAAA,IACAS,EAAAhnB,KAAAsO,MAAAzE,EAAA0c,YACA1c,EAAA0c,WAAA1c,EAAA0c,WAAA,GAGA1c,EAAAod,QAAA,EAAAD,GAEA,IAAAE,EAAAJ,KAAAC,MAEAld,EAAA0c,aAAAW,EAAAL,GAAAhd,EAAAwc,cAGAxc,EAAAyc,WAAAjoB,OAAA,GACAwL,EAAA4c,yBAOAQ,QAAA,SAAA1c,GAKA,IAJA,IACA7C,EAAAM,EADAse,EAAA9pB,KAAA8pB,WAEA1jB,EAAA,EAEAA,EAAA0jB,EAAAjoB,QAEA2J,GADAN,EAAA4e,EAAA1jB,IACAoF,MAEAN,EAAAyK,aAAAzK,EAAAyK,aAAA,GAAA5H,EACA7C,EAAAyK,YAAAnS,KAAAC,IAAAyH,EAAAyK,YAAAzK,EAAAqK,UAEA9K,EAAA4K,SAAAnK,EAAA+J,QAAAzJ,EAAAN,GAAAM,GACAf,EAAA4K,SAAAnK,EAAA2K,qBAAA3K,GAAAM,GAEAN,EAAAyK,aAAAzK,EAAAqK,UACA9K,EAAA4K,SAAAnK,EAAA6K,qBAAA7K,GAAAM,GACAA,EAAAmN,aACAmR,EAAAI,OAAA9jB,EAAA,MAEAA,IAYAnF,OAAA0P,eAAAxI,EAAAmN,UAAApU,UAAA,mBACAoI,IAAA,WACA,OAAAtJ,QAUAiB,OAAA0P,eAAAxI,EAAAmN,UAAApU,UAAA,iBACAoI,IAAA,WACA,OAAAtJ,KAAAwL,OAEAvJ,IAAA,SAAApB,GACAb,KAAAwL,MAAA3K,4BCvKA,IAAA8pB,EAAA/qB,EAAA,QACAgrB,EAAAhrB,EAAA,QAMAuB,EAHAF,OAAAC,UAGAC,eAsBAtB,EAAAC,QAbA,SAAA+I,GACA,IAAA8hB,EAAA9hB,GACA,OAAA+hB,EAAA/hB,GAEA,IAAAU,KACA,QAAAxJ,KAAAkB,OAAA4H,GACA1H,EAAAI,KAAAsH,EAAA9I,IAAA,eAAAA,GACAwJ,EAAAxH,KAAAhC,GAGA,OAAAwJ,yBC1BA,IAAAshB,EAAAjrB,EAAA,QAGAoB,EAAAC,OAAAC,UAGAC,EAAAH,EAAAG,eAOA2pB,EAAA9pB,EAAAyH,SAGAsiB,EAAAF,IAAAG,mBA6BAnrB,EAAAC,QApBA,SAAAe,GACA,IAAAoqB,EAAA9pB,EAAAI,KAAAV,EAAAkqB,GACAG,EAAArqB,EAAAkqB,GAEA,IACAlqB,EAAAkqB,UACA,IAAAI,KACG,MAAA/qB,IAEH,IAAAmJ,EAAAuhB,EAAAvpB,KAAAV,GAQA,OAPAsqB,IACAF,EACApqB,EAAAkqB,GAAAG,SAEArqB,EAAAkqB,IAGAxhB,sCCxCA,IAAA7G,EAAA9C,EAAA,QACA+C,EAAA/C,EAAA,QACA6K,EAAA7K,EAAA,QACA+P,EAAA/P,EAAA,QAEAuN,EAAA1C,EAAA0C,KAmFA,SAAAie,EAAAC,EAAArK,GACA,OAAAqK,EAAAC,cACAtK,EAAAxd,KAAA+nB,MACAF,EAAAG,SApFA9oB,EAAAyB,KAAA,UACA0H,QACAjB,WACAnD,SAAA,MACAgkB,aACAzF,WACA3H,OAAA,IAGA3R,QAAA,SAAAtM,EAAAuM,GACA,IAAApK,EAAAoK,EAAAkH,aACA6X,EAAA1rB,KAAAwL,MACAQ,EAAA0f,EAAAzf,eAAA1J,GAGAyJ,EAAAQ,OAAA,OAAAR,EAAAQ,QAAAkf,EAAA/pB,KAAA+J,SAAAnJ,GAAAiK,OAAA,KAGAkf,EAAA7e,UAGAkM,QAAA,KAEApN,QACA6f,SAAA,GACAG,QAAA,GAYA7f,eAAA,SAAAN,GACA,IAAA7J,EAAA6J,EAAA7J,KACA,OAAA8I,EAAAL,QAAAzI,EAAA+J,UAAA/J,EAAA+J,SAAAK,IAAA,SAAAoC,EAAA/H,GACA,OACAqF,KAAA0C,EAAApG,MACApC,UAAA8E,EAAAL,QAAA+D,EAAA7J,iBAAA6J,EAAA7J,gBAAA,GAAA6J,EAAA7J,gBACAkI,QAAAhB,EAAAgL,iBAAApQ,GACAwlB,QAAAzd,EAAA0d,eACAC,SAAA3d,EAAA4d,WACAC,eAAA7d,EAAA8d,iBACAC,SAAA/d,EAAAge,gBACAtmB,UAAAsI,EAAAxJ,YACAiB,YAAAuI,EAAA1J,YACA2nB,WAAAje,EAAAie,WAGAvY,aAAAzN,IAEKpG,YAKLuL,eAAA,SAAAC,GACA,IAAAC,KACAA,EAAA1J,KAAA,cAAAyJ,EAAAjE,GAAA,aACA,QAAAnB,EAAA,EAAiBA,EAAAoF,EAAA7J,KAAA+J,SAAA7J,OAAgCuE,IACjDqF,EAAA1J,KAAA,qCAAAyJ,EAAA7J,KAAA+J,SAAAtF,GAAA9B,gBAAA,aACAkH,EAAA7J,KAAA+J,SAAAtF,GAAA2B,OACA0D,EAAA1J,KAAAyJ,EAAA7J,KAAA+J,SAAAtF,GAAA2B,OAEA0D,EAAA1J,KAAA,SAGA,OADA0J,EAAA1J,KAAA,SACA0J,EAAAG,KAAA,OAmBA,IAAAygB,EAAA1pB,EAAAiC,QAEAgM,WAAA,SAAAV,GACAzF,EAAA7F,OAAA5E,KAAAkQ,GAGAlQ,KAAAssB,kBAGAtsB,KAAAusB,iBAOAC,aAAArf,EACAN,OAAA,SAAAiW,EAAAC,EAAA0J,GACA,IAAApf,EAAArN,KA0BA,OAvBAqN,EAAAmf,eAGAnf,EAAAyV,WACAzV,EAAA0V,YACA1V,EAAAof,UAGApf,EAAAqf,sBACArf,EAAAuV,gBACAvV,EAAAsf,qBAEAtf,EAAAuf,oBACAvf,EAAAwf,cACAxf,EAAAyf,mBAGAzf,EAAA0f,YACA1f,EAAAyW,MACAzW,EAAA2f,WAEA3f,EAAA4f,cAEA5f,EAAAI,SAEAwf,YAAA9f,EAIAuf,oBAAAvf,EACAyV,cAAA,WACA,IAAAvV,EAAArN,KAEAqN,EAAA4a,gBAEA5a,EAAAtK,MAAAsK,EAAAyV,SACAzV,EAAAtJ,KAAA,EACAsJ,EAAApJ,MAAAoJ,EAAAtK,QAEAsK,EAAAvJ,OAAAuJ,EAAA0V,UAGA1V,EAAArJ,IAAA,EACAqJ,EAAAnJ,OAAAmJ,EAAAvJ,QAIAuJ,EAAA6f,YAAA,EACA7f,EAAA8f,WAAA,EACA9f,EAAA+f,aAAA,EACA/f,EAAAggB,cAAA,EAGAhgB,EAAAI,SACA1K,MAAA,EACAe,OAAA,IAGA6oB,mBAAAxf,EAIAyf,kBAAAzf,EACA0f,YAAA,WACA,IAAAxf,EAAArN,KACAqrB,EAAAhe,EAAAf,QAAAX,WACA2hB,EAAA7iB,EAAA4K,SAAAgW,EAAAvf,gBAAAuB,EAAA7B,OAAA6B,OAEAge,EAAAkC,SACAD,IAAAC,OAAA,SAAAvlB,GACA,OAAAqjB,EAAAkC,OAAAvlB,EAAAqF,EAAA7B,MAAA7J,SAIA0L,EAAAf,QAAA0Z,SACAsH,EAAAtH,UAGA3Y,EAAAigB,eAEAR,iBAAA3f,EAIA4f,UAAA5f,EACA2W,IAAA,WACA,IAAAzW,EAAArN,KACAwN,EAAAH,EAAAf,QACA+e,EAAA7d,EAAA7B,OACAf,EAAA4C,EAAA5C,QAEA5F,EAAAqI,EAAArI,IAEAwoB,EAAA9qB,EAAA6B,OACA6O,EAAA3I,EAAA2I,eACA4N,EAAA5N,EAAAiY,EAAArK,SAAAwM,EAAApM,iBACAC,EAAAjO,EAAAiY,EAAAhK,UAAAmM,EAAAlM,kBACAC,EAAAnO,EAAAiY,EAAA9J,WAAAiM,EAAAhM,mBACAiM,EAAAhjB,EAAAkX,WAAAX,EAAAK,EAAAE,GAGAmM,EAAArgB,EAAAif,kBAEA7e,EAAAJ,EAAAI,QACAwa,EAAA5a,EAAA4a,eAWA,GATAA,GACAxa,EAAA1K,MAAAsK,EAAAyV,SACArV,EAAA3J,OAAA8G,EAAA,OAEA6C,EAAA1K,MAAA6H,EAAA,KACA6C,EAAA3J,OAAAuJ,EAAA0V,WAIAnY,EAGA,GAFA5F,EAAA0c,KAAA+L,EAEAxF,EAAA,CAIA,IAAA0F,EAAAtgB,EAAAsgB,YAAA,GACAC,EAAAvgB,EAAAigB,YAAAzrB,OAAAmf,EAAAqK,EAAAM,QAAA,EAEA3mB,EAAAoiB,UAAA,OACApiB,EAAAqiB,aAAA,MAEA5c,EAAAwD,KAAAZ,EAAAigB,YAAA,SAAA3gB,EAAAvG,GACA,IACArD,EADAqoB,EAAAC,EAAArK,GACAA,EAAA,EAAAhc,EAAAyf,YAAA9X,EAAAlB,MAAA1I,MAEA4qB,IAAA9rB,OAAA,GAAAkB,EAAAsoB,EAAAM,SAAAte,EAAAtK,QACA6qB,GAAA5M,EAAAqK,EAAAM,QACAgC,IAAA9rB,QAAAwL,EAAAtJ,MAIA2pB,EAAAtnB,IACArC,KAAA,EACAC,IAAA,EACAjB,QACAe,OAAAkd,GAGA2M,IAAA9rB,OAAA,IAAAkB,EAAAsoB,EAAAM,UAGAle,EAAA3J,QAAA8pB,MAEI,CACJ,IAAAC,EAAAxC,EAAAM,QACAmC,EAAAzgB,EAAAygB,gBACAC,EAAA1C,EAAAM,QACAqC,EAAA,EACAC,EAAA,EACAC,EAAAlN,EAAA6M,EAEApjB,EAAAwD,KAAAZ,EAAAigB,YAAA,SAAA3gB,EAAAvG,GACA,IACA+nB,EADA/C,EAAAC,EAAArK,GACAA,EAAA,EAAAhc,EAAAyf,YAAA9X,EAAAlB,MAAA1I,MAGAkrB,EAAAC,EAAAzgB,EAAA3J,SACAiqB,GAAAC,EAAA3C,EAAAM,QACAmC,EAAA/rB,KAAAisB,GAEAA,EAAA,EACAC,EAAA,GAIAD,EAAAxqB,KAAAI,IAAAoqB,EAAAG,GACAF,GAAAC,EAGAR,EAAAtnB,IACArC,KAAA,EACAC,IAAA,EACAjB,MAAAorB,EACArqB,OAAAkd,KAIA+M,GAAAC,EACAF,EAAA/rB,KAAAisB,GACAvgB,EAAA1K,OAAAgrB,EAIA1gB,EAAAtK,MAAA0K,EAAA1K,MACAsK,EAAAvJ,OAAA2J,EAAA3J,QAEAkpB,SAAA7f,EAGA8a,aAAA,WACA,cAAAjoB,KAAAsM,QAAA7E,UAAA,WAAAzH,KAAAsM,QAAA7E,UAIA5C,KAAA,WACA,IAAAwI,EAAArN,KACAwN,EAAAH,EAAAf,QACA+e,EAAA7d,EAAA7B,OACA6hB,EAAA9qB,EAAA6B,OACA6pB,EAAAZ,EAAAppB,SAAAkE,KACA+lB,EAAAhhB,EAAAtK,MACA4qB,EAAAtgB,EAAAsgB,WAEA,GAAAngB,EAAA5C,QAAA,CACA,IAOA0jB,EAPAtpB,EAAAqI,EAAArI,IACAoO,EAAA3I,EAAA2I,eACA0T,EAAA1T,EAAAiY,EAAAvE,UAAA0G,EAAAzG,kBACA/F,EAAA5N,EAAAiY,EAAArK,SAAAwM,EAAApM,iBACAC,EAAAjO,EAAAiY,EAAAhK,UAAAmM,EAAAlM,kBACAC,EAAAnO,EAAAiY,EAAA9J,WAAAiM,EAAAhM,mBACAiM,EAAAhjB,EAAAkX,WAAAX,EAAAK,EAAAE,GAIAvc,EAAAoiB,UAAA,OACApiB,EAAAqiB,aAAA,SACAriB,EAAAa,UAAA,GACAb,EAAAY,YAAAkhB,EACA9hB,EAAAW,UAAAmhB,EACA9hB,EAAA0c,KAAA+L,EAEA,IAAAjC,EAAAJ,EAAAC,EAAArK,GACA0M,EAAArgB,EAAAif,eA8DArE,EAAA5a,EAAA4a,eAEAqG,EADArG,GAEA1kB,EAAA8J,EAAAtJ,MAAAsqB,EAAAV,EAAA,MACAjqB,EAAA2J,EAAArJ,IAAAqnB,EAAAM,QACArjB,KAAA,IAIA/E,EAAA8J,EAAAtJ,KAAAsnB,EAAAM,QACAjoB,EAAA2J,EAAArJ,IAAAqnB,EAAAM,QACArjB,KAAA,GAIA,IAAA4lB,EAAAlN,EAAAqK,EAAAM,QACAlhB,EAAAwD,KAAAZ,EAAAigB,YAAA,SAAA3gB,EAAAvG,GACA,IAAAmoB,EAAAvpB,EAAAyf,YAAA9X,EAAAlB,MAAA1I,MACAA,EAAAyoB,EAAAxK,EAAA,EAAAuN,EACAhrB,EAAA+qB,EAAA/qB,EACAG,EAAA4qB,EAAA5qB,EAEAukB,EACA1kB,EAAAR,GAAAsrB,IACA3qB,EAAA4qB,EAAA5qB,GAAAwqB,EACAI,EAAAhmB,OACA/E,EAAA+qB,EAAA/qB,EAAA8J,EAAAtJ,MAAAsqB,EAAAV,EAAAW,EAAAhmB,OAAA,GAEK5E,EAAAwqB,EAAA7gB,EAAAnJ,SACLX,EAAA+qB,EAAA/qB,IAAA8J,EAAAygB,aAAAQ,EAAAhmB,MAAA+iB,EAAAM,QACAjoB,EAAA4qB,EAAA5qB,EAAA2J,EAAArJ,IAAAqnB,EAAAM,QACA2C,EAAAhmB,QA1FA,SAAA/E,EAAAG,EAAAiJ,GACA,KAAAF,MAAA+e,OAAA,IAKAxmB,EAAAgiB,OAEAhiB,EAAAW,UAAAyN,EAAAzG,EAAAhH,UAAA6nB,EAAAhpB,cACAQ,EAAA4mB,QAAAxY,EAAAzG,EAAAif,QAAAwC,EAAAvC,gBACA7mB,EAAAgnB,eAAA5Y,EAAAzG,EAAAqf,eAAAoC,EAAAnC,kBACAjnB,EAAAknB,SAAA9Y,EAAAzG,EAAAuf,SAAAkC,EAAAjC,iBACAnnB,EAAAa,UAAAuN,EAAAzG,EAAA9G,UAAAuoB,EAAAzpB,aACAK,EAAAY,YAAAwN,EAAAzG,EAAA/G,YAAA4nB,EAAAhpB,cACA,IAAAgqB,EAAA,IAAApb,EAAAzG,EAAA9G,UAAAuoB,EAAAzpB,aAOA,GALAK,EAAAypB,aAEAzpB,EAAAypB,YAAArb,EAAAzG,EAAAmf,SAAAsC,EAAArC,aAGAve,EAAA7B,QAAA6B,EAAA7B,OAAA2f,cAAA,CAGA,IAAA3E,EAAA3F,EAAAxd,KAAA+nB,MAAA,EACAmD,EAAA/H,EAAAnjB,KAAA+nB,MACA/c,EAAAjL,EAAAmrB,EACAhgB,EAAAhL,EAAAgrB,EAGAjkB,EAAA6F,OAAAqe,UAAA3pB,EAAA2H,EAAAyf,WAAAzF,EAAAnY,EAAAE,QAGA8f,GACAxpB,EAAA4pB,WAAArrB,EAAAG,EAAA8nB,EAAAxK,GAEAhc,EAAAmiB,SAAA5jB,EAAAG,EAAA8nB,EAAAxK,GAGAhc,EAAAsiB,WAvCA,CA6FA/jB,EAAAG,EAAAiJ,GAEA+gB,EAAAtnB,GAAArC,KAAAR,EACAmqB,EAAAtnB,GAAApC,IAAAN,EAvDA,SAAAH,EAAAG,EAAAiJ,EAAA4hB,GACA,IAAAM,EAAA7N,EAAA,EACA8N,EAAAtD,EAAAqD,EAwDAtrB,EAvDAwrB,EAuDArrB,EAvDAmrB,EAEA7pB,EAAAkd,SAAAvV,EAAAlB,KAAAqjB,EAAAC,GAEApiB,EAAAH,SAEAxH,EAAAU,YACAV,EAAAa,UAAA,EACAb,EAAAmB,OAAA2oB,EAAAC,GACA/pB,EAAAqB,OAAAyoB,EAAAP,EAAAQ,GACA/pB,EAAAuB,UAbA,CA0DAhD,EAAAG,EAAAiJ,EAAA4hB,GAEAtG,EACAqG,EAAA/qB,GAAAR,EAAAsoB,EAAAM,QAEA2C,EAAA5qB,GAAAwqB,MAaA1V,YAAA,SAAApY,GACA,IAAAiN,EAAArN,KACAwN,EAAAH,EAAAf,QACA9E,EAAA,YAAApH,EAAAoH,KAAA,QAAApH,EAAAoH,KACA+Q,KAEA,iBAAA/Q,GACA,IAAAgG,EAAAuL,QACA,WAEG,cAAAvR,EAKH,OAJA,IAAAgG,EAAAd,QACA,OAOA,IAAAnJ,EAAAnD,EAAAmD,EACAG,EAAAtD,EAAAsD,EAEA,GAAAH,GAAA8J,EAAAtJ,MAAAR,GAAA8J,EAAApJ,OAAAP,GAAA2J,EAAArJ,KAAAN,GAAA2J,EAAAnJ,OAGA,IADA,IAAA8qB,EAAA3hB,EAAAif,eACAlmB,EAAA,EAAkBA,EAAA4oB,EAAAntB,SAAeuE,EAAA,CACjC,IAAA6oB,EAAAD,EAAA5oB,GAEA,GAAA7C,GAAA0rB,EAAAlrB,MAAAR,GAAA0rB,EAAAlrB,KAAAkrB,EAAAlsB,OAAAW,GAAAurB,EAAAjrB,KAAAN,GAAAurB,EAAAjrB,IAAAirB,EAAAnrB,OAAA,CAEA,aAAA0D,EAAA,CAEAgG,EAAAd,QAAAnL,KAAA8L,EAAAjN,EAAA4Y,OAAA3L,EAAAigB,YAAAlnB,IACAmS,KACA,MACM,iBAAA/Q,EAAA,CAENgG,EAAAuL,QAAAxX,KAAA8L,EAAAjN,EAAA4Y,OAAA3L,EAAAigB,YAAAlnB,IACAmS,KACA,QAMA,OAAAA,KAIA,SAAA2W,EAAA1jB,EAAA2jB,GACA,IAAAtjB,EAAA,IAAAwgB,GACArnB,IAAAwG,EAAAxG,IACAsH,QAAA6iB,EACA3jB,UAGAmE,EAAAyf,UAAA5jB,EAAAK,EAAAsjB,GACAxf,EAAA0f,OAAA7jB,EAAAK,GACAL,EAAAK,SAGAhM,EAAAC,SACAyH,GAAA,SASA+nB,SAAAjD,EAEAkD,WAAA,SAAA/jB,GACA,IAAA2jB,EAAA3jB,EAAAc,QAAAT,OAEAsjB,GACAD,EAAA1jB,EAAA2jB,IAIA3C,aAAA,SAAAhhB,GACA,IAAA2jB,EAAA3jB,EAAAc,QAAAT,OACAA,EAAAL,EAAAK,OAEAsjB,GACA1kB,EAAA+kB,QAAAL,EAAAzsB,EAAA6B,OAAAsH,QAEAA,GACA8D,EAAAyf,UAAA5jB,EAAAK,EAAAsjB,GACAtjB,EAAAS,QAAA6iB,GAEAD,EAAA1jB,EAAA2jB,IAEGtjB,IACH8D,EAAA4E,UAAA/I,EAAAK,UACAL,EAAAK,SAIA4jB,WAAA,SAAAjkB,EAAApL,GACA,IAAAyL,EAAAL,EAAAK,OACAA,GACAA,EAAA2M,YAAApY,wCC1jBA,IAAAqK,EAAA7K,EAAA,QAMAC,EAAAC,SASA4vB,aAAA,SAAA7uB,EAAAmB,GACA,IAAA2tB,GAAA,GAAA9uB,GAAA+uB,MAAA,wCACA,IAAAD,GAAA,WAAAA,EAAA,GACA,WAAA3tB,EAKA,OAFAnB,GAAA8uB,EAAA,GAEAA,EAAA,IACA,SACA,OAAA9uB,EACA,QACAA,GAAA,IAMA,OAAAmB,EAAAnB,GAUAgvB,UAAA,SAAAhvB,GACA,IAAAV,EAAAia,EAAA+J,EAAA7J,EAWA,OATA7P,EAAAqlB,SAAAjvB,IACAV,GAAAU,EAAAmD,KAAA,EACAoW,GAAAvZ,EAAAoD,OAAA,EACAkgB,GAAAtjB,EAAAqD,QAAA,EACAoW,GAAAzZ,EAAAkD,MAAA,GAEA5D,EAAAia,EAAA+J,EAAA7J,GAAAzZ,GAAA,GAIAmD,IAAA7D,EACA8D,MAAAmW,EACAlW,OAAAigB,EACApgB,KAAAuW,EACAxW,OAAA3D,EAAAgkB,EACAphB,MAAAuX,EAAAF,IAaA2V,QAAA,SAAAC,EAAA5f,EAAA7N,GACA,IAAA6D,EAAAwG,EAAA/L,EAEA,IAAAuF,EAAA,EAAAwG,EAAAojB,EAAAnuB,OAAmCuE,EAAAwG,IAAUxG,EAE7C,aADAvF,EAAAmvB,EAAA5pB,eAIAgK,GAAA,mBAAAvP,IACAA,IAAAuP,aAEA7N,GAAAkI,EAAAL,QAAAvJ,KACAA,IAAA0B,aAEA1B,GACA,OAAAA,wBC1EAhB,EAAAC,QAJA,WACA,WAAAmwB,KAAA,SAAA9vB,EAAAC,EAAAC,GAAA,aCZA,IAAAoK,EAAA7K,EAAA,QAEAC,EAAAC,SAIAqE,KAAA,SAAA+rB,EAAA5tB,GACA,OAAAmI,EAAA0lB,MAAAnwB,KAAAkwB,KAAAlwB,KAAAkwB,OAAuD5tB,yBCUvDzC,EAAAC,QAXA,SAAAmgB,EAAA3d,GAKA,IAJA,IAAAC,GAAA,EACAV,EAAAS,EAAAT,OACA6mB,EAAAzI,EAAApe,SAEAU,EAAAV,GACAoe,EAAAyI,EAAAnmB,GAAAD,EAAAC,GAEA,OAAA0d,yBChBA,IAAA6P,EAAAlwB,EAAA,QAcAC,EAAAC,QAJA,SAAAe,GACA,OAAAA,OAAAivB,EAAAjvB,0BCXA,IAAAuvB,EAAAxwB,EAAA,QACAywB,EAAAzwB,EAAA,QAeAC,EAAAC,QALA,SAAA+I,EAAA9I,GACA,IAAAc,EAAAwvB,EAAAxnB,EAAA9I,GACA,OAAAqwB,EAAAvvB,cAAAyvB,+BCbAzwB,GAAA,IAAA0wB,EAAA3wB,EAAA,QACA4wB,EAAA5wB,EAAA,QAGA6wB,EAAA,iBAAA3wB,SAAA4wB,UAAA5wB,EAGA6wB,EAAAF,GAAA,iBAAA5wB,SAAA6wB,UAAA7wB,EAMA+wB,EAHAD,KAAA7wB,UAAA2wB,EAGAF,EAAAK,cAsBAC,GAnBAD,IAAAC,kBAmBAL,EAEA3wB,EAAAC,QAAA+wB,kDCrCA,IAIAtgB,EAJArJ,EAAAtH,EAAA,QAGAkxB,GACAvgB,EAAA,SAAAwgB,KAAA7pB,KAAA0L,MAAA1L,EAAA0L,KAAAoe,UAAA,KACA,iBAAAzgB,EAAA,GAcA1Q,EAAAC,QAJA,SAAA4I,GACA,QAAAooB,QAAApoB,uBCFA7I,EAAAC,QAPA,SAAAe,GACA,IAAA2G,SAAA3G,EACA,gBAAA2G,GAAA,UAAAA,GAAA,UAAAA,GAAA,WAAAA,EACA,cAAA3G,EACA,OAAAA,uBCiBAhB,EAAAC,QAJA,SAAAe,GACA,aAAAA,GAAA,iBAAAA,sCCvBA,IAAA6B,EAAA9C,EAAA,QACAwE,EAAAxE,EAAA,QACA6K,EAAA7K,EAAA,QAEA8C,EAAAyB,KAAA,QACAwD,aACAspB,YAEA9pB,OACAC,KAAA,SAGAC,QACAC,QACAE,KAAA,WACAD,GAAA,aAEAG,QACAF,KAAA,SACAD,GAAA,gBAKA1H,EAAAC,QAAA,SAAAqI,GAEA,SAAA+oB,EAAA/iB,EAAA7B,GACA,OAAA7B,EAAA2I,eAAAjF,EAAAgjB,SAAA7kB,EAAA3E,WAGAQ,EAAAC,YAAAE,KAAAH,EAAA4E,kBAAAnI,QAEAwsB,mBAAAhtB,EAAA4b,KAEAhT,gBAAA5I,EAAAitB,MAEAxkB,OAAA,SAAAO,GACA,IAOAhH,EAAAwG,EAAAT,EAPAkB,EAAArN,KACAgM,EAAAqB,EAAAE,UACAjF,EAAA0D,EAAAmC,QACAmjB,EAAAtlB,EAAArK,SACA2K,EAAAe,EAAA7B,MAAAc,QACAilB,EAAAjlB,EAAAlI,SAAAkE,KACAoC,EAAA2C,EAAAmkB,cAAAxlB,EAAAqL,SAEAlJ,EAAAd,EAAAe,aACA+iB,EAAAD,EAAA/iB,EAAA7B,GAwCA,IArCA6kB,IACAhlB,EAAA7D,EAAA6D,oBAGAgC,EAAAsjB,kBAAAtjB,EAAAujB,cACAvjB,EAAAujB,YAAAvjB,EAAAsjB,SAIAnpB,EAAA8G,OAAA1E,EACApC,EAAA4G,cAAA7B,EAAA9K,MAEA+F,EAAAqpB,UAAAL,EAEAhpB,EAAA+G,QAKA4hB,SAAA9iB,EAAA8iB,SAAA9iB,EAAA8iB,SAAA3kB,EAAA2kB,SACAQ,QAAAtlB,EAAAslB,QAAAtlB,EAAAslB,QAAAhnB,EAAA2I,eAAAjF,EAAAujB,YAAAH,EAAAE,SACAntB,gBAAA6H,EAAA7H,gBAAA6H,EAAA7H,gBAAA6J,EAAA7J,iBAAAitB,EAAAjtB,gBACAK,YAAAwH,EAAAxH,YAAAwH,EAAAxH,YAAAwJ,EAAAxJ,aAAA4sB,EAAA5sB,YACAF,YAAA0H,EAAA1H,YAAA0H,EAAA1H,YAAA0J,EAAA1J,aAAA8sB,EAAA9sB,YACAonB,eAAA1f,EAAA0f,eAAA1f,EAAA0f,eAAA1d,EAAA0d,gBAAA0F,EAAA1F,eACAE,WAAA5f,EAAA4f,WAAA5f,EAAA4f,WAAA5d,EAAA4d,YAAAwF,EAAAxF,WACAE,iBAAA9f,EAAA8f,iBAAA9f,EAAA8f,iBAAA9d,EAAA8d,kBAAAsF,EAAAtF,iBACAE,gBAAAhgB,EAAAggB,gBAAAhgB,EAAAggB,gBAAAhe,EAAAge,iBAAAoF,EAAApF,gBACA7lB,KAAA6F,EAAA7F,KAAA6F,EAAA7F,cAAA6H,EAAA7H,KAAA6H,EAAA7H,KAAAirB,EAAAjrB,KACAsrB,YAAAzlB,EAAAylB,YAAAzlB,EAAAylB,YAAAnnB,EAAA2I,eAAAjF,EAAAyjB,YAAAL,EAAAM,SACAC,uBAAA3lB,EAAA2lB,uBAAA3lB,EAAA2lB,uBAAArnB,EAAA2I,eAAAjF,EAAA2jB,uBAAAP,EAAAO,yBAGAxpB,EAAAiH,SAIAnJ,EAAA,EAAAwG,EAAA0kB,EAAAzvB,OAAoCuE,EAAAwG,IAAUxG,EAC9CiH,EAAAa,cAAAojB,EAAAlrB,KAAAgH,GAQA,IALA+jB,GAAA,IAAA7oB,EAAA+G,OAAAoiB,SACApkB,EAAA0kB,4BAIA3rB,EAAA,EAAAwG,EAAA0kB,EAAAzvB,OAAoCuE,EAAAwG,IAAUxG,EAC9CkrB,EAAAlrB,GAAAmJ,SAIAyiB,wBAAA,SAAAC,EAAA1vB,GACA,IAAA+B,EAAAtE,KAAAwL,MAAAc,QAAAlI,SAAA6tB,MAAA3tB,gBACA6J,EAAAnO,KAAAoO,aACAjC,EAAA8lB,EAAA9lB,WAUA,OARAA,EAAA7H,gBACAA,EAAA6H,EAAA7H,gBACI6J,EAAA+jB,qBACJ5tB,EAAAmG,EAAA2B,sBAAA+B,EAAA+jB,qBAAA3vB,EAAA+B,GACI6J,EAAA7J,kBACJA,EAAA6J,EAAA7J,iBAGAA,GAGA6tB,oBAAA,SAAAF,EAAA1vB,GACA,IAAAkC,EAAAzE,KAAAwL,MAAAc,QAAAlI,SAAA6tB,MAAAxtB,YACA0J,EAAAnO,KAAAoO,aACAjC,EAAA8lB,EAAA9lB,WAUA,OARAA,EAAA1H,YACAA,EAAA0H,EAAA1H,YACI0J,EAAAikB,iBACJ3tB,EAAAgG,EAAA2B,sBAAA+B,EAAAikB,iBAAA7vB,EAAAkC,GACI0J,EAAA1J,cACJA,EAAA0J,EAAA1J,aAGAA,GAGA4tB,oBAAA,SAAAJ,EAAA1vB,GACA,IAAAoC,EAAA3E,KAAAwL,MAAAc,QAAAlI,SAAA6tB,MAAAttB,YACAwJ,EAAAnO,KAAAoO,aACAjC,EAAA8lB,EAAA9lB,WAUA,OARAM,MAAAN,EAAAxH,cAEI8H,MAAA0B,EAAAmkB,mBAAA7nB,EAAAL,QAAA+D,EAAAmkB,kBACJ3tB,EAAA8F,EAAA2B,sBAAA+B,EAAAmkB,iBAAA/vB,EAAAoC,GACI8H,MAAA0B,EAAAxJ,eACJA,EAAAwJ,EAAAxJ,aAJAA,EAAAwH,EAAAxH,YAOAA,GAGAuJ,cAAA,SAAA+jB,EAAA1vB,EAAA6K,GACA,IASA7J,EAAAG,EATA2J,EAAArN,KACAgM,EAAAqB,EAAAE,UACApB,EAAA8lB,EAAA9lB,WACAgC,EAAAd,EAAAe,aACAyF,EAAAxG,EAAA9K,MACA1B,EAAAsN,EAAAxM,KAAAY,GACAgwB,EAAAllB,EAAAmkB,cAAAxlB,EAAAqL,SACAmb,EAAAnlB,EAAAmkB,cAAAxlB,EAAAoL,SACAqb,EAAAplB,EAAA7B,MAAAc,QAAAlI,SAAA6tB,eAIA9jB,EAAAwY,iBAAAxY,EAAAukB,cACAvkB,EAAAukB,YAAAvkB,EAAAwY,iBAEAxY,EAAAwkB,oBAAAxkB,EAAAykB,iBACAzkB,EAAAykB,eAAAzkB,EAAAwkB,WAGApvB,EAAAivB,EAAAhK,iBAAA,iBAAA3nB,IAAAgyB,IAAAtwB,EAAAsR,GACAnQ,EAAA0J,EAAAmlB,EAAAhJ,eAAAlc,EAAAylB,gBAAAjyB,EAAA0B,EAAAsR,GAGAoe,EAAAc,QAAAP,EACAP,EAAAe,QAAAT,EACAN,EAAA/iB,cAAA2E,EACAoe,EAAA9iB,OAAA5M,EAGA0vB,EAAA5iB,QACA9L,IACAG,IACAuvB,KAAA9mB,EAAA8mB,MAAAxmB,MAAAlJ,IAAAkJ,MAAA/I,GAEAijB,OAAAxa,EAAAwa,QAAAlc,EAAA2B,sBAAA+B,EAAAukB,YAAAnwB,EAAAkwB,EAAA9L,QACAyF,WAAAjgB,EAAAigB,YAAA3hB,EAAA2B,sBAAA+B,EAAAie,WAAA7pB,EAAAkwB,EAAArG,YACA9nB,gBAAA+I,EAAA2kB,wBAAAC,EAAA1vB,GACAkC,YAAA4I,EAAA8kB,oBAAAF,EAAA1vB,GACAoC,YAAA0I,EAAAglB,oBAAAJ,EAAA1vB,GACAkvB,QAAAzlB,EAAAmC,QAAAkB,OAAArD,EAAAmC,QAAAkB,OAAAoiB,QAAA,EACAG,cAAA5lB,EAAAmC,QAAAkB,QAAArD,EAAAmC,QAAAkB,OAAAuiB,YAEAe,UAAAxmB,EAAAwmB,WAAAloB,EAAA2B,sBAAA+B,EAAAykB,eAAArwB,EAAAkwB,EAAAE,aAIAG,gBAAA,SAAAjyB,EAAA0B,EAAAsR,GACA,IAMAzN,EAAA8F,EAAAgnB,EALA1nB,EADAxL,KACAwL,MACAQ,EAFAhM,KAEAuN,UACAglB,EAHAvyB,KAGAwxB,cAAAxlB,EAAAqL,SACA8b,EAAA,EACAC,EAAA,EAGA,GAAAb,EAAAjmB,QAAA+mB,QAAA,CACA,IAAAjtB,EAAA,EAAeA,EAAAyN,EAAkBzN,IAGjC,GAFA8F,EAAAV,EAAA7J,KAAA+J,SAAAtF,GAEA,UADA8sB,EAAA1nB,EAAAS,eAAA7F,IACAoB,MAAA0rB,EAAA7b,UAAAkb,EAAAhrB,IAAAiE,EAAAgL,iBAAApQ,GAAA,CACA,IAAAktB,EAAAnQ,OAAAoP,EAAAhP,cAAArX,EAAAvK,KAAAY,KACA+wB,EAAA,EACAF,GAAAE,GAAA,EAEAH,GAAAG,GAAA,EAKA,IAAAC,EAAApQ,OAAAoP,EAAAhP,cAAA1iB,IACA,OAAA0yB,EAAA,EACAhB,EAAA/J,iBAAA4K,EAAAG,GAEAhB,EAAA/J,iBAAA2K,EAAAI,GAGA,OAAAhB,EAAA/J,iBAAA3nB,IAGAkxB,0BAAA,WACA,IAIA3rB,EAAAwG,EAAA4mB,EAAAC,EAHAznB,EADAhM,KACAuN,UACAmmB,EAFA1zB,KAEAwL,MAAA8B,UACAgkB,EAAAtlB,EAAArK,SAUA,SAAAgyB,EAAAC,EAAAnwB,EAAAG,GACA,OAAAJ,KAAAI,IAAAJ,KAAAC,IAAAmwB,EAAAhwB,GAAAH,GAGA,GAVAuI,EAAAmC,QAAAkB,OAAA4hB,WACAK,IAAA/D,OAAA,SAAAqG,GACA,OAAAA,EAAAvkB,OAAA4jB,QAQA,aAAAjnB,EAAAmC,QAAAkB,OAAAyiB,uBACArnB,EAAAopB,oBAAAvC,QAEA,IAAAlrB,EAAA,EAAAwG,EAAA0kB,EAAAzvB,OAAqCuE,EAAAwG,IAAUxG,EAE/CotB,EADAlC,EAAAlrB,GACAiJ,OACAokB,EAAAhpB,EAAAqpB,YACArpB,EAAAspB,aAAAzC,EAAAlrB,GAAAiJ,OACAmkB,EACA/oB,EAAAupB,SAAA1C,EAAAlrB,GAAAiJ,OACArD,EAAAmC,QAAAkB,OAAAoiB,SAEA+B,EAAAS,sBAAAR,EAAAS,SAAA3wB,EACAiwB,EAAAW,sBAAAV,EAAAS,SAAAxwB,EACA8vB,EAAAY,kBAAAX,EAAAY,KAAA9wB,EACAiwB,EAAAc,kBAAAb,EAAAY,KAAA3wB,EAIA,GApCA1D,KAoCAwL,MAAAc,QAAAlI,SAAAkE,KAAAisB,gBACA,IAAAnuB,EAAA,EAAAwG,EAAA0kB,EAAAzvB,OAAqCuE,EAAAwG,IAAUxG,GAC/CotB,EAAAlC,EAAAlrB,GAAAiJ,QACA4kB,sBAAAN,EAAAH,EAAAS,sBAAAP,EAAA3vB,KAAA2vB,EAAAzvB,OACAuvB,EAAAW,sBAAAR,EAAAH,EAAAW,sBAAAT,EAAA1vB,IAAA0vB,EAAAxvB,QACAsvB,EAAAY,kBAAAT,EAAAH,EAAAY,kBAAAV,EAAA3vB,KAAA2vB,EAAAzvB,OACAuvB,EAAAc,kBAAAX,EAAAH,EAAAc,kBAAAZ,EAAA1vB,IAAA0vB,EAAAxvB,SAKAW,KAAA,WACA,IACA2G,EADAxL,KACAwL,MACAQ,EAFAhM,KAEAuN,UACA+jB,EAAAtlB,EAAArK,SACA+xB,EAAAloB,EAAA8B,UACAV,EAAA0kB,EAAAzvB,OACAuE,EAAA,EAWA,IATAqE,EAAA6F,OAAAkkB,SAAAhpB,EAAAxG,IAAA0uB,GAEAxC,EAVAlxB,KAUAoO,aAAA5C,EAAAc,UACAN,EAAAmC,QAAAtJ,OAGA4F,EAAA6F,OAAAmkB,WAAAjpB,EAAAxG,KAGSoB,EAAAwG,IAAUxG,EACnBkrB,EAAAlrB,GAAAvB,KAAA6uB,IAIAgB,cAAA,SAAAzC,GAEA,IAAA9jB,EAAAnO,KAAAwL,MAAA7J,KAAA+J,SAAAumB,EAAA/iB,eACA3M,EAAA0vB,EAAA9iB,OACAhD,EAAA8lB,EAAA9lB,WACAqnB,EAAAvB,EAAA5iB,OAEAmkB,EAAA7M,OAAAxa,EAAAwoB,aAAAlqB,EAAA2B,sBAAA+B,EAAAymB,iBAAAryB,EAAAvC,KAAAwL,MAAAc,QAAAlI,SAAA6tB,MAAA0C,aACAnB,EAAAlvB,gBAAA6H,EAAA0oB,sBAAApqB,EAAA2B,sBAAA+B,EAAA2mB,0BAAAvyB,EAAAkI,EAAAsqB,cAAAvB,EAAAlvB,kBACAkvB,EAAA/uB,YAAA0H,EAAA6oB,kBAAAvqB,EAAA2B,sBAAA+B,EAAA8mB,sBAAA1yB,EAAAkI,EAAAsqB,cAAAvB,EAAA/uB,cACA+uB,EAAA7uB,YAAAwH,EAAA+oB,kBAAAzqB,EAAA2B,sBAAA+B,EAAAgnB,sBAAA5yB,EAAAixB,EAAA7uB,cAGA2K,iBAAA,SAAA2iB,GACA,IAAA5kB,EAAArN,KACAmO,EAAAd,EAAA7B,MAAA7J,KAAA+J,SAAAumB,EAAA/iB,eACA3M,EAAA0vB,EAAA9iB,OACAhD,EAAA8lB,EAAA9lB,WACAqnB,EAAAvB,EAAA5iB,gBAGAlB,EAAAwY,iBAAAxY,EAAAukB,cACAvkB,EAAAukB,YAAAvkB,EAAAwY,QAGA6M,EAAA7M,OAAAxa,EAAAwa,QAAAlc,EAAA2B,sBAAA+B,EAAAukB,YAAAnwB,EAAA8K,EAAA7B,MAAAc,QAAAlI,SAAA6tB,MAAAtL,QACA6M,EAAAlvB,gBAAA+I,EAAA2kB,wBAAAC,EAAA1vB,GACAixB,EAAA/uB,YAAA4I,EAAA8kB,oBAAAF,EAAA1vB,GACAixB,EAAA7uB,YAAA0I,EAAAglB,oBAAAJ,EAAA1vB,6BCzUA,IAAA6yB,EAAAx1B,EAAA,QACA0J,EAAA1J,EAAA,QACAy1B,EAAAz1B,EAAA,QACAY,EAAAZ,EAAA,QACA01B,EAAA11B,EAAA,QACA21B,EAAA31B,EAAA,QACAa,EAAAb,EAAA,QA0BAC,EAAAC,QAZA,SAAAY,EAAA80B,GACA,OAAAh1B,EAAAE,IAAA40B,EAAAE,GACAD,EAAA90B,EAAAC,GAAA80B,GAEA,SAAA3sB,GACA,IAAA4sB,EAAAnsB,EAAAT,EAAAnI,GACA,gBAAA+0B,OAAAD,EACAH,EAAAxsB,EAAAnI,GACA00B,EAAAI,EAAAC,EAAAC,MAAAC,qBC5BA,IAGAC,EAAA,mGAGAC,EAAA,WASArrB,EAfA5K,EAAA,OAAAA,CAeA,SAAA0Z,GACA,IAAA/P,KAOA,OANA,KAAA+P,EAAAwc,WAAA,IACAvsB,EAAAxH,KAAA,IAEAuX,EAAAyc,QAAAH,EAAA,SAAAhG,EAAAoG,EAAAC,EAAAC,GACA3sB,EAAAxH,KAAAk0B,EAAAC,EAAAH,QAAAF,EAAA,MAAAG,GAAApG,KAEArmB,IAGA1J,EAAAC,QAAA0K,sBCIA3K,EAAAC,QALA,SAAAe,GACA,IAAA2G,SAAA3G,EACA,aAAAA,IAAA,UAAA2G,GAAA,YAAAA,0BC3BA,IAAA2uB,EAAAv2B,EAAA,QAqBAC,EAAAC,QATA,SAAAC,EAAAc,GACA,IAAAc,EAAAw0B,EAAAn2B,KAAAD,GACAiC,EAAAL,EAAAK,KAIA,OAFAL,EAAAM,IAAAlC,EAAAc,GACAb,KAAAgC,MAAAL,EAAAK,QAAA,IACAhC,yCClBA,SAAAo2B,EAAAC,EAAAC,GACA,GAAAA,EAAA,CACA,IAAA9qB,EAAAxL,KAAAu2B,MAAAtxB,OACAuxB,EAAAH,EAAA3qB,SAAAK,IAAA,SAAAoC,GACA,OAAAA,EAAApG,QAEA0uB,EAAAH,EAAA5qB,SAAAK,IAAA,SAAAoC,GACA,OAAAA,EAAApG,QAEA2uB,EAAAC,KAAAC,UAAAH,GACAE,KAAAC,UAAAJ,KAEAE,GAAAJ,EAAA5qB,SAAA7J,SAAAw0B,EAAA3qB,SAAA7J,QACAw0B,EAAA3qB,SAAA0U,QAAA,SAAAjS,EAAA/H,GACA,IAAAywB,EAAA51B,OAAA2R,KAAA0jB,EAAA5qB,SAAAtF,IACA0wB,EAAA71B,OAAA2R,KAAAzE,GACA4oB,EAAAF,EAAAtJ,OAAA,SAAAxtB,GACA,gBAAAA,IAAA,IAAA+2B,EAAA9wB,QAAAjG,KAMA,QAAAi3B,KAJAD,EAAA3W,QAAA,SAAA6W,UACAzrB,EAAA7J,KAAA+J,SAAAtF,GAAA6wB,KAGA9oB,EACAA,EAAAhN,eAAA61B,KACAxrB,EAAA7J,KAAA+J,SAAAtF,GAAA4wB,GAAA7oB,EAAA6oB,MAKAX,EAAAl1B,eAAA,YACAqK,EAAA7J,KAAAgK,OAAA0qB,EAAA1qB,QAGA0qB,EAAAl1B,eAAA,aACAqK,EAAA7J,KAAAumB,QAAAmO,EAAAnO,SAGAmO,EAAAl1B,eAAA,aACAqK,EAAA7J,KAAAwmB,QAAAkO,EAAAlO,SAGA3c,EAAAqB,WAEArB,GACAA,EAAA+L,UAGAvX,KAAAk3B,YAAAl3B,KAAAm3B,UAAAn3B,KAAAsM,eAGAtM,KAAAu2B,MAAAtxB,QACAjF,KAAAu2B,MAAAtxB,OAAAsS,UAGAvX,KAAAk3B,YAAAl3B,KAAAm3B,UAAAn3B,KAAAsM,SAIA,IAoBA8qB,GACAC,cApBA11B,KAAA,WACA,OACAw1B,UAAA,OAGAG,OACAH,UAAAf,IAeAmB,cAXAC,OACAL,WACAM,cAGAH,OACAH,UAAAf,0BC3EA,SAAAsB,EAAAC,EAAAC,GACA,OACA3iB,OAAA,SAAA4iB,GACA,OAAAA,EAAA,OACA3lB,MAAAlS,KAAA83B,OACAC,MAAA/3B,KAAAg4B,aACOH,EAAA,UACPI,OACA1wB,GAAAvH,KAAA23B,QACA50B,MAAA/C,KAAA+C,MACAe,OAAA9D,KAAA8D,QAEAo0B,IAAA,cAGAV,OACAG,SACAQ,QAAAR,EACAnwB,KAAA4wB,QAEAr1B,OACAo1B,QAAA,IACA3wB,KAAA2b,QAEArf,QACAq0B,QAAA,IACA3wB,KAAA2b,QAEA6U,YACAxwB,KAAA4wB,OACAD,QAAA,IAEAL,QACAtwB,KAAAvG,QAEA4O,SACArI,KAAAiY,MACA0Y,QAAA,WACA,YAIAx2B,KAAA,WACA,OACAsD,OAAA,KACAozB,SAAAr4B,KAAA6P,UAGAyoB,SACAC,UAAA,SAAAC,GACAx4B,KAAAu2B,MAAA8B,SAAAt2B,KAAAy2B,IAEAtB,YAAA,SAAAv1B,EAAA2K,GACAtM,KAAAu2B,MAAAtxB,QAAAjF,KAAAu2B,MAAAtxB,OAAAsS,UACAvX,KAAAu2B,MAAAtxB,OAAA,IAAAwzB,EAAAla,EAAAve,KAAA04B,MAAApoB,OAAAqoB,WAAA,OACAnxB,KAAAowB,EACAj2B,OACA2K,UACAuD,QAAA7P,KAAAu2B,MAAA8B,aAIAO,cAAA,WACA54B,KAAAu2B,MAAAtxB,QACAjF,KAAAu2B,MAAAtxB,OAAAsS,YAKA,IAAAshB,EAAAnB,EAAA,mBACAoB,EAAApB,EAAA,uCACAqB,EAAArB,EAAA,6BACA1X,EAAA0X,EAAA,qBACAsB,EAAAtB,EAAA,mBACAuB,EAAAvB,EAAA,2BACAwB,EAAAxB,EAAA,uBACAyB,EAAAzB,EAAA,yBACA0B,EAAA1B,EAAA,2BAAAr3B,EAAAg5B,EAAAj5B,GAAA,oBAAAka,IAAAja,EAAAg5B,EAAAj5B,GAAA,oBAAAk5B,IAAAj5B,EAAAg5B,EAAAj5B,GAAA,oBAAAua,IAAAta,EAAAg5B,EAAAj5B,EAAA,sBAAAi5B,IAAAh5B,EAAAg5B,EAAAj5B,GAAA,oBAAAkiB,IAAAjiB,EAAAg5B,EAAAj5B,GAAA,oBAAAm5B,IAAAl5B,EAAAg5B,EAAAj5B,GAAA,oBAAAke,IAAAje,EAAAg5B,EAAAj5B,GAAA,oBAAAo5B,IAAAn5B,EAAAg5B,EAAAj5B,GAAA,oBAAAoa,IAAAna,EAAAg5B,EAAAj5B,EAAA,sBAAAga,IAAA/Z,EAAAg5B,EAAAj5B,GAAA,oBAAAq5B,KAAAC,KAAA,SAAAv5B,EAAAC,EAAAC,GC9EA,IAAAwqB,EAAAjrB,EAAA,QACA+5B,EAAA/5B,EAAA,QACAg6B,EAAAh6B,EAAA,QACAi6B,EAAAj6B,EAAA,QACAk6B,EAAAl6B,EAAA,QACAm6B,EAAAn6B,EAAA,QAqBAo6B,EAAAnP,IAAA3pB,iBACA+4B,EAAAD,IAAAE,eAoFAr6B,EAAAC,QAjEA,SAAA+I,EAAAsxB,EAAAjP,EAAAkP,EAAAC,EAAAC,EAAAC,GACA,OAAArP,GACA,IAzBA,oBA0BA,GAAAriB,EAAA2xB,YAAAL,EAAAK,YACA3xB,EAAA4xB,YAAAN,EAAAM,WACA,SAEA5xB,IAAA6xB,OACAP,IAAAO,OAEA,IAlCA,uBAmCA,QAAA7xB,EAAA2xB,YAAAL,EAAAK,aACAF,EAAA,IAAAX,EAAA9wB,GAAA,IAAA8wB,EAAAQ,KAKA,IAnDA,mBAoDA,IAnDA,gBAoDA,IAjDA,kBAoDA,OAAAP,GAAA/wB,GAAAsxB,GAEA,IAxDA,iBAyDA,OAAAtxB,EAAA8xB,MAAAR,EAAAQ,MAAA9xB,EAAA+xB,SAAAT,EAAAS,QAEA,IAxDA,kBAyDA,IAvDA,kBA2DA,OAAA/xB,GAAAsxB,EAAA,GAEA,IAjEA,eAkEA,IAAA9gB,EAAAygB,EAEA,IAjEA,eAkEA,IAAAe,EA5EA,EA4EAT,EAGA,GAFA/gB,MAAA0gB,GAEAlxB,EAAA7G,MAAAm4B,EAAAn4B,OAAA64B,EACA,SAGA,IAAAxH,EAAAkH,EAAAjxB,IAAAT,GACA,GAAAwqB,EACA,OAAAA,GAAA8G,EAEAC,GAtFA,EAyFAG,EAAAt4B,IAAA4G,EAAAsxB,GACA,IAAA5wB,EAAAswB,EAAAxgB,EAAAxQ,GAAAwQ,EAAA8gB,GAAAC,EAAAC,EAAAC,EAAAC,GAEA,OADAA,EAAArwB,OAAArB,GACAU,EAEA,IAnFA,kBAoFA,GAAA0wB,EACA,OAAAA,EAAA14B,KAAAsH,IAAAoxB,EAAA14B,KAAA44B,GAGA,WAAAW,KAAA,SAAA36B,EAAAC,EAAAC,GC5GA,IAIA06B,EAJAn7B,EAAA,OAAAA,CACAA,EAAA,QAGA,WAEAC,EAAAC,QAAAi7B,sBCDAl7B,EAAAC,SACAuQ,eAAA,SAAArI,GAMA,OALAA,KAAAsI,SAEAtI,IAAAsI,QAGAtI,KAAA2wB,WAAA,eAAAqC,KAAA,SAAA76B,EAAAC,GCIAP,EAAAC,QANA,SAAAC,GACA,IAAAwJ,EAAAvJ,KAAAyC,IAAA1C,WAAAC,KAAAC,SAAAF,GAEA,OADAC,KAAAgC,MAAAuH,EAAA,IACAA,yBCbA,IAAAR,EAAAnJ,EAAA,QAyBAC,EAAAC,QAZA,SAAA4I,GACA,IAAAa,EAAAR,EAAAL,EAAA,SAAA3I,GAIA,OAfA,MAYAsJ,EAAArH,MACAqH,EAAAW,QAEAjK,IAGAsJ,EAAAE,EAAAF,MACA,OAAAE,uBCHA1J,EAAAC,QAVA,SAAAC,EAAAy1B,GACA,gBAAA3sB,GACA,aAAAA,GAGAA,EAAA9I,KAAAy1B,aACAA,GAAAz1B,KAAAkB,OAAA4H,4BCfA,IAGA8wB,EAHA/5B,EAAA,QAGA+5B,WAEA95B,EAAAC,QAAA65B,wBCLA,IAAAxD,EAAAv2B,EAAA,QAeAC,EAAAC,QAJA,SAAAC,GACA,OAAAo2B,EAAAn2B,KAAAD,GAAAuJ,IAAAvJ,0BCZA,IAAAk7B,EAAAr7B,EAAA,QAsBAC,EAAAC,QAPA,SAAAC,EAAAc,GACA,IAAAc,EAAA3B,KAAAC,SAGA,OAFAD,KAAAgC,MAAAhC,KAAAyC,IAAA1C,GAAA,IACA4B,EAAA5B,GAAAk7B,YAAAp6B,EAfA,4BAeAA,EACAb,4BCnBA,IAAAW,EAAAf,EAAA,QACAgB,EAAAhB,EAAA,QAgBAC,EAAAC,QAJA,SAAAe,GACA,OAAAD,EAAAC,IAVA,sBAUAF,EAAAE,KAAAq6B,mBCFAr7B,EAAAC,QAJA,SAAA+I,EAAA9I,GACA,aAAA8I,GAAA9I,KAAAkB,OAAA4H,uCCPA,IAAA4X,EAAA7gB,EAAA,QACA6K,EAAA7K,EAAA,QAmDA+C,EAAA,SAAAw4B,GACA1wB,EAAA7F,OAAA5E,KAAAm7B,GACAn7B,KAAA4Q,WAAAxH,MAAApJ,KAAAsB,YAGAmJ,EAAA7F,OAAAjC,EAAAzB,WAEA0P,WAAA,WACA5Q,KAAAwM,WAGA+C,MAAA,WACA,IAAAlC,EAAArN,KAKA,OAJAqN,EAAAvK,QACAuK,EAAAvK,MAAA2H,EAAAkU,MAAAtR,EAAAgC,SAEAhC,EAAAoL,UACApL,GAGA8I,WAAA,SAAAilB,GACA,IAAA/tB,EAAArN,KACAwzB,EAAAnmB,EAAAgC,OACA0S,EAAA1U,EAAAoL,OACA4iB,EAAAhuB,EAAAvK,MAGA,OAAA0wB,GAAA,IAAA4H,GAMAC,IACAA,EAAAhuB,EAAAvK,UAGAif,IACAA,EAAA1U,EAAAoL,WAvFA,SAAAsJ,EAAAsZ,EAAA7H,EAAA4H,GACA,IACAh1B,EAAAwG,EAAA7M,EAAAu7B,EAAAC,EAAA1c,EAAArX,EAAAg0B,EAAAC,EADA7oB,EAAA3R,OAAA2R,KAAA4gB,GAGA,IAAAptB,EAAA,EAAAwG,EAAAgG,EAAA/Q,OAAgCuE,EAAAwG,IAAUxG,EAa1C,GAVAyY,EAAA2U,EAFAzzB,EAAA6S,EAAAxM,IAMAi1B,EAAAl6B,eAAApB,KACAs7B,EAAAt7B,GAAA8e,IAGAyc,EAAAD,EAAAt7B,MAEA8e,GAAA,MAAA9e,EAAA,IAYA,GARAgiB,EAAA5gB,eAAApB,KACAgiB,EAAAhiB,GAAAu7B,IAKA9zB,SAAAqX,WAFA0c,EAAAxZ,EAAAhiB,IAKA,cAAAyH,GAEA,IADAg0B,EAAA/a,EAAA8a,IACA/hB,QACAiiB,EAAAhb,EAAA5B,IACArF,MAAA,CACA6hB,EAAAt7B,GAAA07B,EAAAtd,IAAAqd,EAAAJ,GAAAlf,YACA,eAGI,cAAA1U,GAAAk0B,SAAAH,IAAAG,SAAA7c,GAAA,CACJwc,EAAAt7B,GAAAw7B,GAAA1c,EAAA0c,GAAAH,EACA,SAIAC,EAAAt7B,GAAA8e,GA7CA,CA0FAkD,EAAAsZ,EAAA7H,EAAA4H,GAEA/tB,IAfAA,EAAAvK,MAAA0wB,EACAnmB,EAAAoL,OAAA,KACApL,IAgBApG,gBAAA,WACA,OACA1D,EAAAvD,KAAAqP,OAAA9L,EACAG,EAAA1D,KAAAqP,OAAA3L,IAIAi4B,SAAA,WACA,OAAAlxB,EAAAgY,SAAAziB,KAAAqP,OAAA9L,IAAAkH,EAAAgY,SAAAziB,KAAAqP,OAAA3L,MAIAf,EAAAiC,OAAA6F,EAAAmxB,SAEA/7B,EAAAC,QAAA6C,qCChHA,IAAA8H,EAAA7K,EAAA,QAEAC,EAAAC,QAAA,SAAAqI,GAEA,IAAA0zB,GAAA,yCAgDA,SAAAC,EAAA7b,EAAAjI,GACA,IAAA+jB,EAAA9b,EAAA+b,SACA,GAAAD,EAAA,CAIA,IAAAjkB,EAAAikB,EAAAjkB,UACAvV,EAAAuV,EAAA9R,QAAAgS,IACA,IAAAzV,GACAuV,EAAAoS,OAAA3nB,EAAA,GAGAuV,EAAAjW,OAAA,IAIAg6B,EAAAzb,QAAA,SAAArgB,UACAkgB,EAAAlgB,YAGAkgB,EAAA+b,WAIA7zB,EAAA4E,kBAAA,SAAAvB,EAAAqI,GACA7T,KAAA4Q,WAAApF,EAAAqI,IAGApJ,EAAA7F,OAAAuD,EAAA4E,kBAAA7L,WAMAkwB,mBAAA,KAMApkB,gBAAA,KAEA4D,WAAA,SAAApF,EAAAqI,GACA7T,KACAwL,QADAxL,KAEAuC,MAAAsR,EAFA7T,KAGAkN,aAHAlN,KAIAi8B,eAGAloB,YAAA,SAAAF,GACA7T,KAAAuC,MAAAsR,GAGA3G,WAAA,WACA,IAAAG,EAAArN,KACAgM,EAAAqB,EAAAE,UACAY,EAAAd,EAAAe,aAEA,OAAApC,EAAAoL,SAAApL,EAAAoL,WAAA/J,EAAA7B,MAAAnE,SACA2E,EAAAoL,QAAAjJ,EAAAiJ,SAAA/J,EAAA7B,MAAAc,QAAAjF,OAAAC,MAAA,GAAAC,IAEA,OAAAyE,EAAAqL,SAAArL,EAAAqL,WAAAhK,EAAA7B,MAAAnE,SACA2E,EAAAqL,QAAAlJ,EAAAkJ,SAAAhK,EAAA7B,MAAAc,QAAAjF,OAAAK,MAAA,GAAAH,KAIA6G,WAAA,WACA,OAAApO,KAAAwL,MAAA7J,KAAA+J,SAAA1L,KAAAuC,QAGAgL,QAAA,WACA,OAAAvN,KAAAwL,MAAAS,eAAAjM,KAAAuC,QAGAivB,cAAA,SAAA0K,GACA,OAAAl8B,KAAAwL,MAAAnE,OAAA60B,IAGA9uB,MAAA,WACApN,KAAA6M,YAMA0K,QAAA,WACAvX,KAAA0U,OACAonB,EAAA97B,KAAA0U,MAAA1U,OAIAm8B,kBAAA,WACA,IACA30B,EADAxH,KACAoxB,mBACA,OAAA5pB,GAAA,IAAAA,GACAvC,OAHAjF,KAGAwL,MACA0D,cAJAlP,KAIAuC,SAIA65B,eAAA,SAAA75B,GACA,IACAiF,EADAxH,KACAgN,gBACA,OAAAxF,GAAA,IAAAA,GACAvC,OAHAjF,KAGAwL,MACA0D,cAJAlP,KAIAuC,MACA4M,OAAA5M,KAIA05B,YAAA,WACA,IAIA71B,EAAAwG,EAHAZ,EADAhM,KACAuN,UACA5L,EAFA3B,KAEAoO,aAAAzM,SACA06B,EAAArwB,EAAArK,KAGA,IAAAyE,EAAA,EAAAwG,EAAAjL,EAAAE,OAAkCuE,EAAAwG,IAAUxG,EAC5Ci2B,EAAAj2B,GAAAi2B,EAAAj2B,IAPApG,KAOAo8B,eAAAh2B,GAGA4F,EAAAmC,QAAAnC,EAAAmC,SAVAnO,KAUAm8B,qBAGAG,mBAAA,SAAA/5B,GACA,IAAAiN,EAAAxP,KAAAo8B,eAAA75B,GACAvC,KAAAuN,UAAA5L,KAAAuoB,OAAA3nB,EAAA,EAAAiN,GACAxP,KAAAkO,cAAAsB,EAAAjN,OAGAoS,sBAAA,WACA,IA7KAsL,EAAAjI,EA6KA3K,EAAArN,KACAmO,EAAAd,EAAAe,aACAzM,EAAAwM,EAAAxM,OAAAwM,EAAAxM,SAKA0L,EAAAqH,QAAA/S,IACA0L,EAAAqH,OAEAonB,EAAAzuB,EAAAqH,MAAArH,GAvLA2K,EA0LA3K,GA1LA4S,EA0LAte,GAzLAq6B,SACA/b,EAAA+b,SAAAlkB,UAAA/V,KAAAiW,IAIA/W,OAAA0P,eAAAsP,EAAA,YACAsc,gBACAC,cACA37B,OACAiX,WAAAE,MAIA6jB,EAAAzb,QAAA,SAAArgB,GACA,IAAAkX,EAAA,SAAAlX,EAAAqf,OAAA,GAAAqd,cAAA18B,EAAAgf,MAAA,GACApb,EAAAsc,EAAAlgB,GAEAkB,OAAA0P,eAAAsP,EAAAlgB,GACAw8B,gBACAC,cACA37B,MAAA,WACA,IAAAsI,EAAAsW,MAAAve,UAAA6d,MAAAxd,KAAAD,WACAo7B,EAAA/4B,EAAAyF,MAAApJ,KAAAmJ,GAQA,OANAsB,EAAAwD,KAAAgS,EAAA+b,SAAAlkB,UAAA,SAAAjP,GACA,mBAAAA,EAAAoO,IACApO,EAAAoO,GAAA7N,MAAAP,EAAAM,KAIAuzB,QA4JArvB,EAAAqH,MAAA/S,GAKA0L,EAAAsvB,kBAGA9vB,OAAApC,EAAA0C,KAEAgJ,WAAA,SAAAF,GAMA,IALA,IAAAjK,EAAAhM,KAAAuN,UACAnJ,EAAA4H,EAAArK,SACAiL,EAAAxI,EAAAvC,OACAuE,EAAA,EAESA,EAAAwG,IAAUxG,EACnBhC,EAAAgC,GAAA+P,WAAAF,GAGAjK,EAAAmC,SACAnC,EAAAmC,QAAAgI,WAAAF,IAIApR,KAAA,WACA,IAAAmH,EAAAhM,KAAAuN,UACAnJ,EAAA4H,EAAArK,SACAiL,EAAAxI,EAAAvC,OACAuE,EAAA,EAMA,IAJA4F,EAAAmC,SACAnC,EAAAmC,QAAAtJ,OAGSuB,EAAAwG,IAAUxG,EACnBhC,EAAAgC,GAAAvB,QAIAyK,iBAAA,SAAAE,EAAAotB,GACA,IAAAzuB,EAAAnO,KAAAwL,MAAA7J,KAAA+J,SAAA8D,EAAAN,eACA3M,EAAAiN,EAAAL,OACAhD,EAAAqD,EAAArD,WACAiH,EAAA3I,EAAA2B,sBACAonB,EAAAhkB,EAAAH,OAEAmkB,EAAAlvB,gBAAA6H,EAAA7H,gBAAA6H,EAAA7H,gBAAA8O,EAAAjF,EAAA7J,gBAAA/B,EAAAq6B,EAAAt4B,iBACAkvB,EAAA/uB,YAAA0H,EAAA1H,YAAA0H,EAAA1H,YAAA2O,EAAAjF,EAAA1J,YAAAlC,EAAAq6B,EAAAn4B,aACA+uB,EAAA7uB,YAAAwH,EAAAxH,YAAAwH,EAAAxH,YAAAyO,EAAAjF,EAAAxJ,YAAApC,EAAAq6B,EAAAj4B,cAGA+vB,cAAA,SAAAllB,GACA,IAAArB,EAAAnO,KAAAwL,MAAA7J,KAAA+J,SAAA8D,EAAAN,eACA3M,EAAAiN,EAAAL,OACAhD,EAAAqD,EAAArD,WACAiH,EAAA3I,EAAA2B,sBACA2oB,EAAAtqB,EAAAsqB,cACAvB,EAAAhkB,EAAAH,OAEAmkB,EAAAlvB,gBAAA6H,EAAA0oB,qBAAA1oB,EAAA0oB,qBAAAzhB,EAAAjF,EAAA0mB,qBAAAtyB,EAAAwyB,EAAAvB,EAAAlvB,kBACAkvB,EAAA/uB,YAAA0H,EAAA6oB,iBAAA7oB,EAAA6oB,iBAAA5hB,EAAAjF,EAAA6mB,iBAAAzyB,EAAAwyB,EAAAvB,EAAA/uB,cACA+uB,EAAA7uB,YAAAwH,EAAA+oB,iBAAA/oB,EAAA+oB,iBAAA9hB,EAAAjF,EAAA+mB,iBAAA3yB,EAAAixB,EAAA7uB,cAMAg4B,eAAA,WACA,IACA3wB,EADAhM,KACAuN,UACA5L,EAFA3B,KAEAoO,aAAAzM,KACAk7B,EAAA7wB,EAAArK,KAAAE,OACAi7B,EAAAn7B,EAAAE,OAEAi7B,EAAAD,EACA7wB,EAAArK,KAAAuoB,OAAA4S,EAAAD,EAAAC,GACIA,EAAAD,GARJ78B,KASA+8B,eAAAF,EAAAC,EAAAD,IAOAE,eAAA,SAAAhb,EAAAhU,GACA,QAAA3H,EAAA,EAAkBA,EAAA2H,IAAW3H,EAC7BpG,KAAAs8B,mBAAAva,EAAA3b,IAOA42B,WAAA,WACAh9B,KAAA+8B,eAAA/8B,KAAAoO,aAAAzM,KAAAE,OAAA,EAAAP,UAAAO,SAMAo7B,UAAA,WACAj9B,KAAAuN,UAAA5L,KAAAu7B,OAMAC,YAAA,WACAn9B,KAAAuN,UAAA5L,KAAAy7B,SAMAC,aAAA,SAAAtb,EAAAhU,GACA/N,KAAAuN,UAAA5L,KAAAuoB,OAAAnI,EAAAhU,GACA/N,KAAA+8B,eAAAhb,EAAAzgB,UAAAO,OAAA,IAMAy7B,cAAA,WACAt9B,KAAA+8B,eAAA,EAAAz7B,UAAAO,WAIAsG,EAAA4E,kBAAAnI,OAAA6F,EAAAmxB,8BC5TA/7B,EAAAC,QALA,WACAE,KAAAC,YACAD,KAAAgC,KAAA,IAAAu7B,KAAA,SAAAp9B,EAAAC,GCRA,IAOA0qB,EAPA7pB,OAAAC,UAOAuH,SAaA5I,EAAAC,QAJA,SAAAe,GACA,OAAAiqB,EAAAvpB,KAAAV,0BClBA,IAAA28B,EAAA59B,EAAA,QAGA69B,EAAA,iBAAAC,iBAAAz8B,iBAAAy8B,KAGAnN,EAAAiN,GAAAC,GAAAj1B,SAAA,cAAAA,GAEA3I,EAAAC,QAAAywB,sBCSA1wB,EAAAC,QARA,SAAAC,GACA,IAAA4B,EAAA3B,KAAAC,SACAsJ,EAAA5H,EAAAuI,OAAAnK,GAGA,OADAC,KAAAgC,KAAAL,EAAAK,KACAuH,uBCUA1J,EAAAC,QAfA,SAAAmgB,EAAA0d,GAMA,IALA,IAAAp7B,GAAA,EACAV,EAAA,MAAAoe,EAAA,EAAAA,EAAApe,OACA+7B,EAAA,EACAr0B,OAEAhH,EAAAV,GAAA,CACA,IAAAhB,EAAAof,EAAA1d,GACAo7B,EAAA98B,EAAA0B,EAAA0d,KACA1W,EAAAq0B,KAAA/8B,GAGA,OAAA0I,uBCqCA,SAAAs0B,EAAApkB,GACA,IAMA6I,EAAAhI,EANAF,EAAAX,EAAA,OACA+f,EAAA/f,EAAA,OACA0K,EAAA1K,EAAA,OACAhW,EAAAD,KAAAC,IAAA2W,EAAAof,EAAArV,GACAvgB,EAAAJ,KAAAI,IAAAwW,EAAAof,EAAArV,GACA2Z,EAAAl6B,EAAAH,EA0BA,OAvBAG,GAAAH,EACA6e,EAAA,EACAlI,GAAAxW,EACA0e,GAAAkX,EAAArV,GAAA2Z,EACAtE,GAAA51B,EACA0e,EAAA,GAAA6B,EAAA/J,GAAA0jB,EACA3Z,GAAAvgB,IACA0e,EAAA,GAAAlI,EAAAof,GAAAsE,IAEAxb,EAAA9e,KAAAC,IAAA,GAAA6e,EAAA,MAEA,IACAA,GAAA,KAEAhI,GAAA7W,EAAAG,GAAA,GASA0e,EAAA,KAPA1e,GAAAH,EACA,EACA6W,GAAA,GACAwjB,GAAAl6B,EAAAH,GAEAq6B,GAAA,EAAAl6B,EAAAH,IAEA,IAAA6W,GAGA,SAAAyjB,EAAAtkB,GACA,IAMA6I,EAAAmX,EANArf,EAAAX,EAAA,GACA+f,EAAA/f,EAAA,GACA0K,EAAA1K,EAAA,GACAhW,EAAAD,KAAAC,IAAA2W,EAAAof,EAAArV,GACAvgB,EAAAJ,KAAAI,IAAAwW,EAAAof,EAAArV,GACA2Z,EAAAl6B,EAAAH,EAwBA,OApBAg2B,EADA,GAAA71B,EACA,EAEAk6B,EAAAl6B,EAAA,OAEAA,GAAAH,EACA6e,EAAA,EACAlI,GAAAxW,EACA0e,GAAAkX,EAAArV,GAAA2Z,EACAtE,GAAA51B,EACA0e,EAAA,GAAA6B,EAAA/J,GAAA0jB,EACA3Z,GAAAvgB,IACA0e,EAAA,GAAAlI,EAAAof,GAAAsE,IAEAxb,EAAA9e,KAAAC,IAAA,GAAA6e,EAAA,MAEA,IACAA,GAAA,MAIAA,EAAAmX,EAFA71B,EAAA,YAKA,SAAAo6B,EAAAvkB,GACA,IAAAW,EAAAX,EAAA,GACA+f,EAAA/f,EAAA,GACA0K,EAAA1K,EAAA,GAKA,OAJAokB,EAAApkB,GAAA,GACA,MAAAjW,KAAAC,IAAA2W,EAAA5W,KAAAC,IAAA+1B,EAAArV,IAGA,SAFAA,EAAA,QAAA3gB,KAAAI,IAAAwW,EAAA5W,KAAAI,IAAA41B,EAAArV,MAKA,SAAA8Z,EAAAxkB,GACA,IAGAykB,EAHA9jB,EAAAX,EAAA,OACA+f,EAAA/f,EAAA,OACA0K,EAAA1K,EAAA,OAOA,aAHA,EAAAW,GADA8jB,EAAA16B,KAAAC,IAAA,EAAA2W,EAAA,EAAAof,EAAA,EAAArV,MACA,EAAA+Z,IAAA,GAGA,MAFA,EAAA1E,EAAA0E,IAAA,EAAAA,IAAA,GAEA,MADA,EAAA/Z,EAAA+Z,IAAA,EAAAA,IAAA,GACA,IAAAA,GAGA,SAAAC,EAAA1kB,GACA,OAAA2kB,EAAAzH,KAAAC,UAAAnd,IAGA,SAAA4kB,EAAA5kB,GACA,IAAAW,EAAAX,EAAA,OACA+f,EAAA/f,EAAA,OACA0K,EAAA1K,EAAA,OAWA,YAJA,OAJAW,IAAA,OAAA5W,KAAAqZ,KAAAzC,EAAA,iBAAAA,EAAA,OAIA,OAHAof,IAAA,OAAAh2B,KAAAqZ,KAAA2c,EAAA,iBAAAA,EAAA,OAGA,OAFArV,IAAA,OAAA3gB,KAAAqZ,KAAAsH,EAAA,iBAAAA,EAAA,QAMA,KAHA,MAAA/J,EAAA,MAAAof,EAAA,MAAArV,GAGA,KAFA,MAAA/J,EAAA,MAAAof,EAAA,MAAArV,IAKA,SAAAma,EAAA7kB,GACA,IAAA8kB,EAAAF,EAAA5kB,GACAlW,EAAAg7B,EAAA,GACA76B,EAAA66B,EAAA,GACAC,EAAAD,EAAA,GAeA,OAXA76B,GAAA,IACA86B,GAAA,QAEAj7B,GAJAA,GAAA,QAIA,QAAAC,KAAAqZ,IAAAtZ,EAAA,WAAAA,EAAA,QAIA,KAHAG,IAAA,QAAAF,KAAAqZ,IAAAnZ,EAAA,WAAAA,EAAA,QAGA,GACA,KAAAH,EAAAG,GACA,KAAAA,GAJA86B,IAAA,QAAAh7B,KAAAqZ,IAAA2hB,EAAA,WAAAA,EAAA,UAaA,SAAAC,EAAA/kB,GACA,IAGAglB,EAAAC,EAAAC,EAAAnlB,EAAA6B,EAHAgH,EAAA5I,EAAA,OACA+f,EAAA/f,EAAA,OACAY,EAAAZ,EAAA,OAGA,MAAA+f,EAEA,OADAne,EAAA,IAAAhB,EACAgB,KAOAojB,EAAA,EAAApkB,GAHAqkB,EADArkB,EAAA,GACAA,GAAA,EAAAmf,GAEAnf,EAAAmf,EAAAnf,EAAAmf,GAGAhgB,GAAA,OACA,QAAArT,EAAA,EAAiBA,EAAA,EAAOA,KACxBw4B,EAAAtc,EAAA,MAAAlc,EAAA,IACA,GAAAw4B,IACAA,EAAA,GAAAA,IAGAtjB,EADA,EAAAsjB,EAAA,EACAF,EAAA,GAAAC,EAAAD,GAAAE,EACA,EAAAA,EAAA,EACAD,EACA,EAAAC,EAAA,EACAF,GAAAC,EAAAD,IAAA,IAAAE,GAAA,EAEAF,EAEAjlB,EAAArT,GAAA,IAAAkV,EAGA,OAAA7B,EAmCA,SAAAolB,EAAAllB,GACA,IAAA2I,EAAA3I,EAAA,MACA8f,EAAA9f,EAAA,OACAa,EAAAb,EAAA,OACAmlB,EAAAt7B,KAAAsO,MAAAwQ,GAAA,EAEAiX,EAAAjX,EAAA9e,KAAAsO,MAAAwQ,GACAhE,EAAA,IAAA9D,GAAA,EAAAif,GACAsF,EAAA,IAAAvkB,GAAA,EAAAif,EAAAF,GACAp5B,EAAA,IAAAqa,GAAA,EAAAif,GAAA,EAAAF,IAGA,OAFA/e,GAAA,IAEAskB,GACA,OACA,OAAAtkB,EAAAra,EAAAme,GACA,OACA,OAAAygB,EAAAvkB,EAAA8D,GACA,OACA,OAAAA,EAAA9D,EAAAra,GACA,OACA,OAAAme,EAAAygB,EAAAvkB,GACA,OACA,OAAAra,EAAAme,EAAA9D,GACA,OACA,OAAAA,EAAA8D,EAAAygB,IA+BA,SAAAC,EAAAplB,GACA,IAIAxT,EAAAoU,EAAA+e,EAAAl5B,EAJAiiB,EAAA1I,EAAA,OACAqlB,EAAArlB,EAAA,OACAslB,EAAAtlB,EAAA,OACA4D,EAAAyhB,EAAAC,EAiBA,OAbA1hB,EAAA,IACAyhB,GAAAzhB,EACA0hB,GAAA1hB,GAIAhD,EAAA,EAAA0kB,EACA3F,EAAA,EAAAjX,GAFAlc,EAAA5C,KAAAsO,MAAA,EAAAwQ,IAGA,MAAAlc,KACAmzB,EAAA,EAAAA,GAEAl5B,EAAA4+B,EAAA1F,GAAA/e,EAAAykB,GAEA74B,GACA,QACA,OACA,OAAAgU,EAAAI,EAAkBgf,EAAAn5B,EAAO8jB,EAAA8a,EAAQ,MACjC,OAAA7kB,EAAA/Z,EAAkBm5B,EAAAhf,EAAO2J,EAAA8a,EAAQ,MACjC,OAAA7kB,EAAA6kB,EAAmBzF,EAAAhf,EAAO2J,EAAA9jB,EAAO,MACjC,OAAA+Z,EAAA6kB,EAAmBzF,EAAAn5B,EAAO8jB,EAAA3J,EAAO,MACjC,OAAAJ,EAAA/Z,EAAkBm5B,EAAAyF,EAAQ9a,EAAA3J,EAAO,MACjC,OAAAJ,EAAAI,EAAkBgf,EAAAyF,EAAQ9a,EAAA9jB,EAG1B,WAAA+Z,EAAA,IAAAof,EAAA,IAAArV,GAmBA,SAAAgb,EAAAtlB,GACA,IAAAc,EAAAd,EAAA,OACAulB,EAAAvlB,EAAA,OACAnW,EAAAmW,EAAA,OACAqkB,EAAArkB,EAAA,OAMA,YAHA,EAAArW,KAAAC,IAAA,EAAAkX,GAAA,EAAAujB,OAGA,KAFA,EAAA16B,KAAAC,IAAA,EAAA27B,GAAA,EAAAlB,OAEA,KADA,EAAA16B,KAAAC,IAAA,EAAAC,GAAA,EAAAw6B,QAqBA,SAAAmB,EAAAd,GACA,IAGAnkB,EAAAof,EAAArV,EAHA5gB,EAAAg7B,EAAA,OACA76B,EAAA66B,EAAA,OACAC,EAAAD,EAAA,OAqBA,OAjBA/E,GAAA,MAAAj2B,EAAA,OAAAG,EAAA,MAAA86B,EACAra,EAAA,MAAA5gB,GAAA,KAAAG,EAAA,MAAA86B,EAGApkB,GALAA,EAAA,OAAA7W,GAAA,OAAAG,GAAA,MAAA86B,GAKA,eAAAh7B,KAAAqZ,IAAAzC,EAAA,YACAA,GAAA,MAEAof,IAAA,eAAAh2B,KAAAqZ,IAAA2c,EAAA,YACAA,GAAA,MAEArV,IAAA,eAAA3gB,KAAAqZ,IAAAsH,EAAA,YACAA,GAAA,OAMA,KAJA/J,EAAA5W,KAAAC,IAAAD,KAAAI,IAAA,EAAAwW,GAAA,IAIA,KAHAof,EAAAh2B,KAAAC,IAAAD,KAAAI,IAAA,EAAA41B,GAAA,IAGA,KAFArV,EAAA3gB,KAAAC,IAAAD,KAAAI,IAAA,EAAAugB,GAAA,KAKA,SAAAmb,EAAAf,GACA,IAAAh7B,EAAAg7B,EAAA,GACA76B,EAAA66B,EAAA,GACAC,EAAAD,EAAA,GAeA,OAXA76B,GAAA,IACA86B,GAAA,QAEAj7B,GAJAA,GAAA,QAIA,QAAAC,KAAAqZ,IAAAtZ,EAAA,WAAAA,EAAA,QAIA,KAHAG,IAAA,QAAAF,KAAAqZ,IAAAnZ,EAAA,WAAAA,EAAA,QAGA,GACA,KAAAH,EAAAG,GACA,KAAAA,GAJA86B,IAAA,QAAAh7B,KAAAqZ,IAAA2hB,EAAA,WAAAA,EAAA,UAaA,SAAAe,EAAAC,GACA,IAGAj8B,EAAAG,EAAA86B,EAAAp7B,EAHAkX,EAAAklB,EAAA,GACAjhB,EAAAihB,EAAA,GACArb,EAAAqb,EAAA,GAeA,OAZAllB,GAAA,EAEAlX,GADAM,EAAA,IAAA4W,EAAA,OACA,kBAEA5W,EAAA,IAAAF,KAAAqZ,KAAAvC,EAAA,WACAlX,EAAAI,KAAAqZ,IAAAnZ,EAAA,WAGAH,IAAA,gBAAAA,EAAA,QAAAgb,EAAA,IAAAnb,EAAA,qBAAAI,KAAAqZ,IAAA0B,EAAA,IAAAnb,EAAA,GAIAM,EAFA86B,IAAA,iBAAAA,EAAA,SAAAp7B,EAAA+gB,EAAA,0BAAA3gB,KAAAqZ,IAAAzZ,EAAA+gB,EAAA,QAKA,SAAAsb,EAAAD,GACA,IAGAld,EAHAhI,EAAAklB,EAAA,GACAjhB,EAAAihB,EAAA,GACArb,EAAAqb,EAAA,GASA,OALAld,EAAA,IADA9e,KAAAk8B,MAAAvb,EAAA5F,GACA,EAAA/a,KAAA8H,IACA,IACAgX,GAAA,MAGAhI,EADA9W,KAAAm8B,KAAAphB,IAAA4F,KACA7B,GAGA,SAAAsd,EAAAz2B,GACA,OAAAk2B,EAAAE,EAAAp2B,IAGA,SAAA02B,EAAAC,GACA,IAGAC,EAHAzlB,EAAAwlB,EAAA,GACAnlB,EAAAmlB,EAAA,GAOA,OAHAC,EAHAD,EAAA,GAGA,MAAAt8B,KAAA8H,IAGAgP,EAFAK,EAAAnX,KAAA6hB,IAAA0a,GACAplB,EAAAnX,KAAA0hB,IAAA6a,IAYA,SAAAC,EAAAxjB,GACA,OAAAyjB,EAAAzjB,GAlgBA3c,EAAAC,SACA+9B,UACAE,UACAC,UACAC,WACAE,cACAE,UACAC,UACA4B,QAuLA,SAAA/2B,GACA,OAAAs2B,EAAAnB,EAAAn1B,KAtLAs1B,UACA0B,QA8NA,SAAAzmB,GACA,IAAA4I,EAAA5I,EAAA,GACA+f,EAAA/f,EAAA,OACAY,EAAAZ,EAAA,OAGA,WAAAY,GAGA,QAOAgI,EADA,GAFAmX,IADAnf,GAAA,IACA,EAAAA,EAAA,EAAAA,IAEAA,EAAAmf,GACA,KAFAnf,EAAAmf,GAAA,EAEA,MA7OA2G,QAgPA,SAAAj3B,GACA,OAAA60B,EAAAS,EAAAt1B,KAhPAk3B,SAmPA,SAAAl3B,GACA,OAAA80B,EAAAQ,EAAAt1B,KAnPAm3B,YAsPA,SAAAn3B,GACA,OAAAg1B,EAAAM,EAAAt1B,KArPA01B,UACA0B,QAoRA,SAAA5mB,GACA,IAGA6mB,EAAAlmB,EAHAgI,EAAA3I,EAAA,GACA8f,EAAA9f,EAAA,OACAa,EAAAb,EAAA,OAQA,OAJA6mB,EAAA/G,EAAAjf,GAIA8H,EAAA,KAFAke,GADAA,IAFAlmB,GAAA,EAAAmf,GAAAjf,IAEA,EAAAF,EAAA,EAAAA,IACA,GAEA,KADAA,GAAA,KA7RAmmB,QAiSA,SAAAt3B,GACA,OAAA60B,EAAAa,EAAA11B,KAjSAu3B,SAoSA,SAAAv3B,GACA,OAAA80B,EAAAY,EAAA11B,KApSAw3B,YAuSA,SAAAx3B,GACA,OAAAg1B,EAAAU,EAAA11B,KAtSA61B,UACA4B,QA4UA,SAAAz3B,GACA,OAAA00B,EAAAmB,EAAA71B,KA5UA03B,QA+UA,SAAA13B,GACA,OAAA40B,EAAAiB,EAAA71B,KA/UA23B,SAkVA,SAAA33B,GACA,OAAA80B,EAAAe,EAAA71B,KAlVA43B,YAqVA,SAAA53B,GACA,OAAAg1B,EAAAa,EAAA71B,KApVAg2B,WACA6B,SAmWA,SAAA73B,GACA,OAAA00B,EAAAsB,EAAAh2B,KAnWA83B,SAsWA,SAAA93B,GACA,OAAA40B,EAAAoB,EAAAh2B,KAtWA+3B,SAyWA,SAAA/3B,GACA,OAAA60B,EAAAmB,EAAAh2B,KAzWAg4B,aA4WA,SAAAh4B,GACA,OAAAg1B,EAAAgB,EAAAh2B,KA3WA62B,cACAoB,YAkeA,SAAAj4B,GACA,OAAA00B,EAAAmC,EAAA72B,KAleAk4B,YAqeA,SAAAl4B,GACA,OAAA40B,EAAAiC,EAAA72B,KAreAm4B,YAweA,SAAAn4B,GACA,OAAA60B,EAAAgC,EAAA72B,KAxeAo4B,aA2eA,SAAAp4B,GACA,OAAA80B,EAAA+B,EAAA72B,KA3eAq4B,YA8eA,SAAAr4B,GACA,OAAAm1B,EAAA0B,EAAA72B,KA9eAs4B,YAifA,SAAAt4B,GACA,OAAAk1B,EAAA2B,EAAA72B,KAhfAk2B,UACAC,UACAoC,QAqZA,SAAAv4B,GACA,OAAAs2B,EAAAH,EAAAn2B,KApZAo2B,UACAK,UACAH,UAEAI,UACA8B,QAscA,SAAAx4B,GACA,OAAAo2B,EAAAM,EAAA12B,KAtcAy4B,QAycA,SAAAz4B,GACA,OAAAy2B,EAAAC,EAAA12B,MA+BA,IAAA82B,GACA4B,WAAA,aACAC,cAAA,aACAC,MAAA,WACAC,YAAA,aACAC,OAAA,aACAC,OAAA,aACAC,QAAA,aACAnmB,OAAA,OACAomB,gBAAA,aACA3mB,MAAA,SACA4mB,YAAA,YACAC,OAAA,WACAC,WAAA,aACAC,WAAA,YACAC,YAAA,WACAC,WAAA,YACAC,OAAA,YACAC,gBAAA,aACAC,UAAA,aACAC,SAAA,WACAloB,MAAA,WACAmoB,UAAA,SACAC,UAAA,WACAC,eAAA,YACAC,UAAA,aACAC,WAAA,SACAC,UAAA,aACAC,WAAA,aACAC,aAAA,WACAC,gBAAA,WACAC,YAAA,WACAC,YAAA,YACAC,SAAA,SACAC,YAAA,aACAC,cAAA,aACAC,eAAA,WACAC,eAAA,UACAC,eAAA,UACAC,eAAA,WACAC,YAAA,WACAC,UAAA,YACAC,aAAA,WACAC,SAAA,aACAC,SAAA,aACAC,YAAA,YACAC,WAAA,WACAC,aAAA,aACAC,aAAA,WACAC,SAAA,WACAC,WAAA,aACAC,YAAA,aACAC,MAAA,WACAC,WAAA,YACAC,MAAA,aACAvpB,OAAA,SACAwpB,aAAA,YACAC,MAAA,aACAC,UAAA,aACAC,SAAA,aACAC,WAAA,WACAC,QAAA,UACAC,OAAA,aACAC,OAAA,aACAC,UAAA,aACAC,eAAA,aACAC,WAAA,WACAC,cAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,sBAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,WAAA,aACAC,aAAA,aACAC,eAAA,YACAC,cAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,aACAC,MAAA,SACAC,WAAA,WACAC,OAAA,aACA/qB,SAAA,WACAgrB,QAAA,SACAC,kBAAA,aACAC,YAAA,SACAC,cAAA,YACAC,cAAA,aACAC,gBAAA,YACAC,iBAAA,aACAC,mBAAA,WACAC,iBAAA,YACAC,iBAAA,YACAC,cAAA,WACAC,WAAA,aACAC,WAAA,aACAC,UAAA,aACAC,aAAA,aACAC,MAAA,SACAC,SAAA,aACAC,OAAA,WACAC,WAAA,YACAC,QAAA,WACAC,WAAA,UACAC,QAAA,aACAC,eAAA,aACAC,WAAA,aACAC,eAAA,aACAC,eAAA,aACAC,YAAA,aACAC,WAAA,aACAC,MAAA,YACAC,MAAA,aACAC,MAAA,aACAC,YAAA,aACAC,QAAA,WACAC,eAAA,YACA1uB,KAAA,SACA2uB,WAAA,aACAC,WAAA,YACAC,aAAA,WACAC,QAAA,aACAC,YAAA,YACAC,UAAA,WACAC,UAAA,aACAC,QAAA,WACAC,QAAA,aACAC,SAAA,aACAC,WAAA,YACAC,WAAA,aACAC,WAAA,aACAC,MAAA,aACAC,aAAA,WACAC,WAAA,YACAC,KAAA,aACAC,MAAA,WACAC,SAAA,aACAC,QAAA,WACAC,WAAA,YACAC,QAAA,aACAC,OAAA,aACAC,OAAA,aACAC,YAAA,aACAzuB,QAAA,WACA0uB,aAAA,aAGArM,KACA,QAAAr+B,KAAAkgC,EACA7B,EAAAzH,KAAAC,UAAAqJ,EAAAlgC,6BCxrBA,IAAA2qC,EAAA9qC,EAAA,QACA0K,EAAA1K,EAAA,QA+BAC,EAAAC,QAJA,SAAAe,GACA,aAAAA,GAAAyJ,EAAAzJ,EAAAgB,UAAA6oC,EAAA7pC,0BC7BA,IAAA8pC,EAAA/qC,EAAA,QACAgrC,EAAAhrC,EAAA,QAMAwB,EAHAH,OAAAC,UAGAE,qBAGAypC,EAAA5pC,OAAA6pC,sBASAC,EAAAF,EAAA,SAAAhiC,GACA,aAAAA,MAGAA,EAAA5H,OAAA4H,GACA8hC,EAAAE,EAAAhiC,GAAA,SAAAmiC,GACA,OAAA5pC,EAAAG,KAAAsH,EAAAmiC,OANAJ,EAUA/qC,EAAAC,QAAAirC,wBC7BA,IAAAL,EAAA9qC,EAAA,QACAqrC,EAAArrC,EAAA,QACAkwB,EAAAlwB,EAAA,QACAsrC,EAAAtrC,EAAA,QASAurC,EAAA,8BAGAC,EAAA5iC,SAAAtH,UACAF,EAAAC,OAAAC,UAGAqH,EAAA6iC,EAAA3iC,SAGAtH,EAAAH,EAAAG,eAGAkqC,EAAAC,OAAA,IACA/iC,EAAAhH,KAAAJ,GAAA40B,QAjBA,sBAiBA,QACAA,QAAA,uEAmBAl2B,EAAAC,QARA,SAAAe,GACA,SAAAivB,EAAAjvB,IAAAoqC,EAAApqC,MAGA6pC,EAAA7pC,GAAAwqC,EAAAF,GACAvhB,KAAAshB,EAAArqC,yBC/BAhB,EAAAC,QAJA,SAAA+I,EAAA9I,GACA,aAAA8I,WAAA9I,0BCTA,IAAA8qB,EAAAjrB,EAAA,QACA2rC,EAAA3rC,EAAA,QACA4rC,EAAA5rC,EAAA,QAOAmrB,EAAAF,IAAAG,mBAkBAnrB,EAAAC,QATA,SAAAe,GACA,aAAAA,WACAA,EAdA,qBADA,gBAiBAkqB,QAAA9pB,OAAAJ,GACA0qC,EAAA1qC,GACA2qC,EAAA3qC,0BCxBA,IAAAy0B,EAAA11B,EAAA,QACAgT,EAAAhT,EAAA,QAsBAC,EAAAC,QAbA,SAAA+I,GAIA,IAHA,IAAAU,EAAAqJ,EAAA/J,GACAhH,EAAA0H,EAAA1H,OAEAA,KAAA,CACA,IAAA9B,EAAAwJ,EAAA1H,GACAhB,EAAAgI,EAAA9I,GAEAwJ,EAAA1H,IAAA9B,EAAAc,EAAAy0B,EAAAz0B,IAEA,OAAA0I,sCClBA1J,EAAAC,QAAA,SAAAqI,GAEAA,EAAA0wB,IAAA,SAAAzoB,EAAAF,GAGA,OAFAA,EAAA1I,KAAA,MAEA,IAAAW,EAAAiI,EAAAF,wCCLA,IAAAxN,EAAA9C,EAAA,QACA+C,EAAA/C,EAAA,QACA6K,EAAA7K,EAAA,QAEA4E,EAAA9B,EAAA6B,OAAAC,aAkBA,SAAAinC,EAAAhlC,GACA,IAAApD,EAAArD,KAAA8C,MACA,QAAAO,GAAAG,KAAA4B,IAAAqB,EAAApD,EAAAE,GAAAF,EAAAsjB,OAAAtjB,EAAAsvB,UAlBAjwB,EAAAyB,KAAA,UACAC,UACA6tB,OACAtL,OAAA,EACAyF,WAAA,SACA9nB,gBAAAE,EACAC,YAAAD,EACAG,YAAA,EAEAguB,UAAA,EACAgC,YAAA,EACAO,iBAAA,MAeAr1B,EAAAC,QAAA6C,EAAAiC,QACA4B,QAAA,SAAAC,EAAAC,GACA,IAAArD,EAAArD,KAAA8C,MACA,QAAAO,GAAAG,KAAAqZ,IAAApW,EAAApD,EAAAE,EAAA,GAAAC,KAAAqZ,IAAAnW,EAAArD,EAAAK,EAAA,GAAAF,KAAAqZ,IAAAxZ,EAAAsvB,UAAAtvB,EAAAsjB,OAAA,IAGA/f,aAAA6kC,EACA5kC,SAAA4kC,EACA3kC,SAbA,SAAAJ,GACA,IAAArD,EAAArD,KAAA8C,MACA,QAAAO,GAAAG,KAAA4B,IAAAsB,EAAArD,EAAAK,GAAAL,EAAAsjB,OAAAtjB,EAAAsvB,WAaA5rB,eAAA,WACA,IAAA1D,EAAArD,KAAA8C,MACA,OACAS,EAAAF,EAAAE,EACAG,EAAAL,EAAAK,IAIAsD,QAAA,WACA,OAAAxD,KAAA8H,GAAA9H,KAAAqZ,IAAA7c,KAAA8C,MAAA6jB,OAAA,IAGA1f,gBAAA,WACA,IAAA5D,EAAArD,KAAA8C,MACA,OACAS,EAAAF,EAAAE,EACAG,EAAAL,EAAAK,EACAioB,QAAAtoB,EAAAsjB,OAAAtjB,EAAAsB,cAIAE,KAAA,SAAAyI,GACA,IAAAjK,EAAArD,KAAA8C,MACA0wB,EAAAxzB,KAAAqP,OACArK,EAAAhF,KAAAiF,OAAAD,IACAonB,EAAA/oB,EAAA+oB,WACAzF,EAAAtjB,EAAAsjB,OACApjB,EAAAF,EAAAE,EACAG,EAAAL,EAAAK,EACA+c,EAAAhW,EAAAgW,MAEAjD,EAAA,EAEAna,EAAA4vB,OAIAjuB,EAAAY,YAAAvC,EAAAoB,aAAAD,EACAQ,EAAAa,UAAA4E,EAAA2I,eAAA/P,EAAAsB,YAAAjC,EAAA6B,OAAAH,SAAA6tB,MAAAttB,aACAK,EAAAW,UAAAtC,EAAAiB,iBAAAE,WAIA8I,IAAAkmB,EAAAjwB,EAAA+J,EAAAvJ,MAbA,KAaAuJ,EAAArJ,MAAAuvB,EAAAjwB,GAAAiwB,EAAA9vB,EAAA4J,EAAAtJ,KAbA,KAaAsJ,EAAApJ,OAAAsvB,EAAA9vB,KAEA8vB,EAAAjwB,EAAA+J,EAAAvJ,KACAyZ,GAAAja,EAAAiwB,EAAAjwB,IAAA+J,EAAAvJ,KAAAyvB,EAAAjwB,GAhBA,KAiBI+J,EAAArJ,MAAAuvB,EAAAjwB,EACJia,GAAAgW,EAAAjwB,MAAAiwB,EAAAjwB,EAAA+J,EAAArJ,OACIuvB,EAAA9vB,EAAA4J,EAAAtJ,IACJwZ,GAAA9Z,EAAA8vB,EAAA9vB,IAAA4J,EAAAtJ,IAAAwvB,EAAA9vB,GApBA,KAqBI4J,EAAApJ,OAAAsvB,EAAA9vB,IACJ8Z,GAAAgW,EAAA9vB,MAAA8vB,EAAA9vB,EAAA4J,EAAApJ,SAEAsZ,EAAAha,KAAA+b,MAAA,IAAA/B,GAAA,IACAxY,EAAAY,YAAA6a,EAAAzb,EAAAY,aAAAkU,MAAA0D,GAAAtB,YACAlX,EAAAW,UAAA8a,EAAAzb,EAAAW,WAAAmU,MAAA0D,GAAAtB,aAGAzR,EAAA6F,OAAAqe,UAAA3pB,EAAAonB,EAAAzF,EAAApjB,EAAAG,+BCvGA,IAIAgoC,EAJA9rC,EAAA,OAAAA,CACAA,EAAA,QAGA,WAEAC,EAAAC,QAAA4rC,wBCNA,IAAAC,EAAA/rC,EAAA,QAEAyZ,EAAA,WACA,WAAAuyB,GAGA,QAAAljC,KAAAijC,EAAA,CAEAtyB,EAAA3Q,EAAA,gBAAAA,GAEA,gBAAAmjC,GAGA,MAFA,iBAAAA,IACAA,EAAApsB,MAAAve,UAAA6d,MAAAxd,KAAAD,YACAqqC,EAAAjjC,GAAAmjC,IALA,CAOGnjC,GAEH,IAAAojC,EAAA,cAAA/a,KAAAroB,GACAqjC,EAAAD,EAAA,GACAE,EAAAF,EAAA,IAGAzyB,EAAA0yB,GAAA1yB,EAAA0yB,QAEAC,GAAA3yB,EAAA3Q,GAAA,SAAAA,GACA,gBAAAmjC,GACA,iBAAAA,IACAA,EAAApsB,MAAAve,UAAA6d,MAAAxd,KAAAD,YAEA,IAAAga,EAAAqwB,EAAAjjC,GAAAmjC,GACA,oBAAAvwB,cACA,OAAAA,EAEA,QAAAlV,EAAA,EAAqBA,EAAAkV,EAAAzZ,OAAgBuE,IACrCkV,EAAAlV,GAAA5C,KAAA+b,MAAAjE,EAAAlV,IACA,OAAAkV,GAXA,CAaG5S,GAKH,IAAAkjC,EAAA,WACA5rC,KAAAisC,UAKAL,EAAA1qC,UAAAgrC,WAAA,SAAA/sB,EAAAhW,GACA,IAAA7G,EAAA6G,EAAA,GACA,gBAAA7G,EAEAtC,KAAAkf,UAAAC,IAGA,iBAAA7c,IACAA,EAAAmd,MAAAve,UAAA6d,MAAAxd,KAAA4H,IAGAnJ,KAAAia,UAAAkF,EAAA7c,KAIAspC,EAAA1qC,UAAA+Y,UAAA,SAAAkF,EAAA7c,GAIA,OAHAtC,KAAAmf,QACAnf,KAAAisC,SACAjsC,KAAAisC,MAAA9sB,GAAA7c,EACAtC,MAMA4rC,EAAA1qC,UAAAge,UAAA,SAAAC,GACA,IAAApF,EAAA/Z,KAAAisC,MAAA9sB,GACA,IAAApF,EAAA,CACA,IAAAoyB,EAAAnsC,KAAAmf,MACA4sB,EAAA/rC,KAAAisC,MAAAE,GACApyB,EAAAV,EAAA8yB,GAAAhtB,GAAA4sB,GAEA/rC,KAAAisC,MAAA9sB,GAAApF,EAEA,OAAAA,IAGA,oCAAAqG,QAAA,SAAAjB,GACAysB,EAAA1qC,UAAAie,GAAA,SAAApF,GACA,OAAA/Z,KAAAksC,WAAA/sB,EAAA7d,cAIAzB,EAAAC,QAAAuZ,qCCzFAxZ,EAAAC,QAAA,SAAAqI,GAEAA,EAAAgxB,OAAA,SAAA/oB,EAAAF,GAEA,OADAA,EAAA1I,KAAA,SACA,IAAAW,EAAAiI,EAAAF,2BCNA,IAAAk8B,EAAAxsC,EAAA,QAiBAC,EAAAC,QAPA,SAAAiM,EAAAhM,GACA,IAAA4B,EAAAoK,EAAA9L,SACA,OAAAmsC,EAAArsC,GACA4B,EAAA,iBAAA5B,EAAA,iBACA4B,EAAAoK,yBCQAlM,EAAAC,QAZA,SAAAmgB,EAAA0d,GAIA,IAHA,IAAAp7B,GAAA,EACAV,EAAA,MAAAoe,EAAA,EAAAA,EAAApe,SAEAU,EAAAV,GACA,GAAA87B,EAAA1d,EAAA1d,KAAA0d,GACA,SAGA,WAAAosB,KAAA,SAAAlsC,EAAAC,EAAAC,GCnBA,IAAAisC,EAAA1sC,EAAA,QACA6B,EAAA7B,EAAA,QACAm7B,EAAAn7B,EAAA,QACA2sC,EAAA3sC,EAAA,QACA8rC,EAAA9rC,EAAA,QACAe,EAAAf,EAAA,QACAsrC,EAAAtrC,EAAA,QAYA4sC,EAAAtB,EAAAoB,GACAG,EAAAvB,EAAAzpC,GACAirC,EAAAxB,EAAAnQ,GACA4R,EAAAzB,EAAAqB,GACAK,EAAA1B,EAAAQ,GASAmB,EAAAlsC,GAGA2rC,GAnBA,qBAmBAO,EAAA,IAAAP,EAAA,IAAAQ,YAAA,MACArrC,GA1BA,gBA0BAorC,EAAA,IAAAprC,IACAs5B,GAzBA,oBAyBA8R,EAAA9R,EAAAhL,YACAwc,GAzBA,gBAyBAM,EAAA,IAAAN,IACAb,GAzBA,oBAyBAmB,EAAA,IAAAnB,MACAmB,EAAA,SAAAhsC,GACA,IAAA0I,EAAA5I,EAAAE,GACAsY,EA/BA,mBA+BA5P,EAAA1I,EAAAuY,mBACA2zB,EAAA5zB,EAAA+xB,EAAA/xB,GAAA,GAEA,GAAA4zB,EACA,OAAAA,GACA,KAAAP,EAAA,MA/BA,oBAgCA,KAAAC,EAAA,MAtCA,eAuCA,KAAAC,EAAA,MArCA,mBAsCA,KAAAC,EAAA,MArCA,eAsCA,KAAAC,EAAA,MArCA,mBAwCA,OAAArjC,IAIA1J,EAAAC,QAAA+sC,qCCtDA,IAAAG,EAAAptC,EAAA,QACAotC,EAAA,mBAAAA,IAAArtB,OAAAqtB,OAEA,IAAAtqC,EAAA9C,EAAA,QACA6K,EAAA7K,EAAA,QAGAqtC,EAAA9pB,OAAA+pB,mBAAA,iBACAC,EAAAhqB,OAAAiqB,kBAAA,iBAEAC,GACAC,aACAC,UACAvrC,KAAA,EACAwrC,OAAA,6BAEAC,QACAF,UACAvrC,KAAA,IACAwrC,OAAA,cAEAE,QACAH,UACAvrC,KAAA,IACAwrC,OAAA,cAEAG,MACAJ,UACAvrC,KAAA,KACAwrC,OAAA,aAEAI,KACAL,UACAvrC,KAAA,MACAwrC,OAAA,QAEAK,MACAN,UACAvrC,KAAA,OACAwrC,OAAA,UAEAM,OACAP,UACAvrC,KAAA,OACAwrC,OAAA,QAEAO,SACAR,UACAvrC,KAAA,OACAwrC,OAAA,UAEAQ,MACAT,UACAvrC,KAAA,SAIAisC,EAAAhtC,OAAA2R,KAAAy6B,GAEA,SAAAa,EAAA3vB,EAAA4F,GACA,OAAA5F,EAAA4F,EAGA,SAAAgqB,EAAAz7B,GACA,IAEAtM,EAAAwG,EAAA5E,EAFAomC,KACAC,KAGA,IAAAjoC,EAAA,EAAAwG,EAAA8F,EAAA7Q,OAAiCuE,EAAAwG,IAAUxG,EAE3CgoC,EADApmC,EAAA0K,EAAAtM,MAEAgoC,EAAApmC,MACAqmC,EAAAtsC,KAAAiG,IAIA,OAAAqmC,EAsFA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAjCA,SAAAJ,EAAAxuC,EAAAc,GAKA,IAJA,IAEA+tC,EAAAC,EAAAC,EAFAC,EAAA,EACAjQ,EAAAyP,EAAA1sC,OAAA,EAGAktC,GAAA,GAAAA,GAAAjQ,GAAA,CAKA,GAHA+P,EAAAN,GADAK,EAAAG,EAAAjQ,GAAA,GACA,SACAgQ,EAAAP,EAAAK,IAEAC,EAEA,OAAWE,GAAA,KAAAjQ,GAAAgQ,GACR,GAAAA,EAAA/uC,GAAAc,EACHkuC,EAAAH,EAAA,MACG,MAAAC,EAAA9uC,GAAAc,GAGH,OAAWkuC,GAAAF,EAAA/P,GAAAgQ,GAFXhQ,EAAA8P,EAAA,GAOA,OAASG,GAAAD,EAAAhQ,GAAA,MAvBT,CAiCAyP,EAAAC,EAAAC,GAGAO,EAAAL,EAAAI,GAAAJ,EAAA7P,GAAA6P,EAAAI,GAAAR,IAAA1sC,OAAA,GAAA0sC,EAAA,GACAla,EAAAsa,EAAAI,GAAAJ,EAAA7P,GAAA6P,EAAA7P,GAAAyP,IAAA1sC,OAAA,GAAA0sC,EAAA,GAEAU,EAAA5a,EAAAma,GAAAQ,EAAAR,GACAhxB,EAAAyxB,GAAAR,EAAAO,EAAAR,IAAAS,EAAA,EACAvmB,GAAA2L,EAAAqa,GAAAM,EAAAN,IAAAlxB,EAEA,OAAAwxB,EAAAN,GAAAhmB,EAOA,SAAAwmB,EAAAruC,EAAAyL,GACA,IAAA6iC,EAAA7iC,EAAA6iC,OACAC,EAAA9iC,EAAA6iC,QAAA7iC,EAAA8iC,OAEA,yBAAAD,EACAA,EAAAtuC,GAGA,iBAAAA,GAAA,iBAAAuuC,EACApC,EAAAnsC,EAAAuuC,IAGAvuC,aAAAmsC,IACAnsC,EAAAmsC,EAAAnsC,IAGAA,EAAAga,UACAha,EAKA,mBAAAuuC,EACAA,EAAAvuC,GAGAA,GAGA,SAAAwuC,EAAAC,EAAA5kC,GACA,GAAAD,EAAAyL,cAAAo5B,GACA,YAGA,IAAAhjC,EAAA5B,EAAA4B,QAAAijC,KACA1uC,EAAAquC,EAAAxkC,EAAA6Y,cAAA+rB,GAAAhjC,GACA,OAAAzL,EAAAga,WAIAvO,EAAAiT,OACA1e,EAAA2uC,QAAAljC,EAAAiT,OAGA1e,EAAAq5B,WAPA,KAwEA,SAAAuV,EAAAC,GACA,QAAAtpC,EAAA6nC,EAAAjoC,QAAA0pC,GAAA,EAAA9iC,EAAAqhC,EAAApsC,OAA2DuE,EAAAwG,IAAUxG,EACrE,GAAAinC,EAAAY,EAAA7nC,IAAAmnC,OACA,OAAAU,EAAA7nC,GAWA,SAAAupC,EAAAlsC,EAAAG,EAAAgsC,EAAAtjC,GACA,IAUAijC,EAVAM,EAAAvjC,EAAAijC,KACAO,EAAAD,EAAAH,MAlDA,SAAAK,EAAAtsC,EAAAG,EAAAgsC,GACA,IACAxpC,EAAA4pC,EAAAC,EADArjC,EAAAqhC,EAAApsC,OAGA,IAAAuE,EAAA6nC,EAAAjoC,QAAA+pC,GAAiC3pC,EAAAwG,EAAA,IAAcxG,EAI/C,GAFA6pC,GADAD,EAAA3C,EAAAY,EAAA7nC,KACAonC,MAAAwC,EAAAxC,MAAAwC,EAAAxC,MAAA3rC,OAAA,GAAAsrC,EAEA6C,EAAAzC,QAAA/pC,KAAAmgB,MAAA/f,EAAAH,IAAAwsC,EAAAD,EAAAhuC,QAAA4tC,EACA,OAAA3B,EAAA7nC,GAIA,OAAA6nC,EAAArhC,EAAA,GAbA,CAkDAijC,EAAAE,QAAAtsC,EAAAG,EAAAgsC,GACAM,EAAAT,EAAAK,GACAK,EAAA1lC,EAAA2I,eAAAy8B,EAAAM,SAAAN,EAAAO,cACAC,EAAA,SAAAP,GAAAD,EAAAS,WACAC,EAAAjkC,EAAAtB,MAAAklC,MAAA53B,QACA03B,EAAA3C,EAAAyC,GACAU,EAAAxD,EAAAvpC,GACAgtC,EAAAzD,EAAAppC,GACAoH,KAgCA,IA7BAmlC,IACAA,EAtFA,SAAA1sC,EAAAG,EAAA8rC,EAAAE,GACA,IAIAxpC,EAAAwG,EAAAqjC,EAJAtB,EAAA/qC,EAAAH,EACAusC,EAAA3C,EAAAqC,GACAgB,EAAAV,EAAAhuC,KACAwrC,EAAAwC,EAAAxC,MAGA,IAAAA,EACA,OAAAhqC,KAAAmgB,KAAAgrB,GAAAiB,EAAAc,IAGA,IAAAtqC,EAAA,EAAAwG,EAAA4gC,EAAA3rC,OAAiCuE,EAAAwG,IACjCqjC,EAAAzC,EAAApnC,KACA5C,KAAAmgB,KAAAgrB,GAAA+B,EAAAT,KAAAL,MAF2CxpC,GAO3C,OAAA6pC,EAlBA,CAsFAxsC,EAAAG,EAAAksC,EAAAF,IAIAS,IACAG,IAAAF,WAAAD,GACAI,IAAAH,WAAAD,IAIAG,IAAAhB,QAAAa,EAAA,MAAAP,IACAW,IAAAjB,QAAAa,EAAA,MAAAP,IAGAlsC,GACA6sC,EAAAjuC,IAAA,EAAAstC,GAGAP,EAAAvC,EAAAwD,GAEAD,GAAAL,IAAAG,IAAAR,EAAAtwB,QAIAgwB,EAAAC,QAAAU,GACAX,EAAA/sC,QAAAguC,EAAAjB,IAAAS,EAAAhuC,KAAAmuC,MAAAL,IAGOP,EAAAkB,EAAalB,EAAA/sC,IAAA2tC,EAAAL,GACpB9kC,EAAAjJ,MAAAwtC,GAKA,OAFAvkC,EAAAjJ,MAAAwtC,GAEAvkC,EAwEAnL,EAAAC,QAAA,SAAAqI,GAEA,IA8DAwoC,EAAAxoC,EAAA4f,MAAAnjB,QACAgM,WAAA,WACA,IAAAo8B,EACA,UAAA/4B,MAAA,wIAGAjU,KAAAwT,oBAEArL,EAAA4f,MAAA7mB,UAAA0P,WAAArP,KAAAvB,OAGA6M,OAAA,WACA,IACAP,EADAtM,KACAsM,QAOA,OAJAA,EAAAijC,MAAAjjC,EAAAijC,KAAAH,QACAv+B,QAAA+/B,KAAA,0EAGAzoC,EAAA4f,MAAA7mB,UAAA2L,OAAAzD,MARApJ,KAQAsB,YAMAiiB,cAAA,SAAAD,GAIA,OAHAA,cAAAnjB,IACAmjB,IAAAnjB,GAEAgI,EAAA4f,MAAA7mB,UAAAqiB,cAAAhiB,KAAAvB,KAAAsjB,IAGAJ,oBAAA,WACA,IASA9c,EAAAyqC,EAAAjkC,EAAAkkC,EAAAnvC,EAAAovC,EATA1jC,EAAArN,KACAwL,EAAA6B,EAAA7B,MACAqkC,EAAAxiC,EAAAf,QAAAijC,KACAG,EAAAG,EAAAH,MAAA,MACAjsC,EAAA0pC,EACAvpC,EAAAqpC,EACA+D,KACAtlC,KACAC,KAIA,IAAAvF,EAAA,EAAAwG,EAAApB,EAAA7J,KAAAgK,OAAA9J,OAA+CuE,EAAAwG,IAAUxG,EACzDuF,EAAA5J,KAAAstC,EAAA7jC,EAAA7J,KAAAgK,OAAAvF,GAAAiH,IAIA,IAAAjH,EAAA,EAAAwG,GAAApB,EAAA7J,KAAA+J,cAAA7J,OAAyDuE,EAAAwG,IAAUxG,EACnE,GAAAoF,EAAAgL,iBAAApQ,GAIA,GAHAzE,EAAA6J,EAAA7J,KAAA+J,SAAAtF,GAAAzE,KAGA8I,EAAAqlB,SAAAnuB,EAAA,IAGA,IAFA+J,EAAAtF,MAEAyqC,EAAA,EAAAC,EAAAnvC,EAAAE,OAAqCgvC,EAAAC,IAAUD,EAC/CE,EAAA1B,EAAA1tC,EAAAkvC,GAAAxjC,GACA2jC,EAAAjvC,KAAAgvC,GACArlC,EAAAtF,GAAAyqC,GAAAE,OAGAC,EAAAjvC,KAAAqH,MAAA4nC,EAAArlC,GACAD,EAAAtF,GAAAuF,EAAAoT,MAAA,QAGArT,EAAAtF,MAIAuF,EAAA9J,SAEA8J,EAAAwiC,EAAAxiC,GAAAslC,KAAA/C,GACAzqC,EAAAD,KAAAC,MAAAkI,EAAA,IACA/H,EAAAJ,KAAAI,MAAA+H,IAAA9J,OAAA,KAGAmvC,EAAAnvC,SACAmvC,EAAA7C,EAAA6C,GAAAC,KAAA/C,GACAzqC,EAAAD,KAAAC,MAAAutC,EAAA,IACAptC,EAAAJ,KAAAI,MAAAotC,IAAAnvC,OAAA,KAGA4B,EAAA4rC,EAAAQ,EAAApsC,IAAA4J,IAAA5J,EACAG,EAAAyrC,EAAAQ,EAAAjsC,IAAAyJ,IAAAzJ,EAGAH,MAAA0pC,GAAAH,IAAAwC,QAAAE,GAAAjsC,EACAG,MAAAqpC,GAAAD,IAAAkE,MAAAxB,GAAA,EAAA9rC,EAGAyJ,EAAA5J,IAAAD,KAAAC,MAAAG,GACAyJ,EAAAzJ,IAAAJ,KAAAI,IAAAH,EAAA,EAAAG,GAGAyJ,EAAA8jC,YAAA9jC,EAAA4a,eACA5a,EAAA+jC,UACA/jC,EAAAgkC,aACA1vC,KAAAqvC,EACAtlC,WACAC,WAIA4c,WAAA,WACA,IAOAniB,EAAAwG,EAAAmkC,EAPA1jC,EAAArN,KACAyD,EAAA4J,EAAA5J,IACAG,EAAAyJ,EAAAzJ,IACA0I,EAAAe,EAAAf,QACAujC,EAAAvjC,EAAAijC,KACAyB,KACAhmC,KAGA,OAAAsB,EAAAtB,MAAA4T,QACA,WACAoyB,EAAA3jC,EAAAgkC,YAAA1vC,KACA,MACA,aACAqvC,EAAA3jC,EAAAgkC,YAAA1lC,OACA,MACA,WACA,QACAqlC,EAAArB,EAAAlsC,EAAAG,EAAAyJ,EAAAikC,iBAAA7tC,GAAA6I,GAaA,IAVA,UAAAA,EAAA3F,QAAAqqC,EAAAnvC,SACA4B,EAAAutC,EAAA,GACAptC,EAAAotC,IAAAnvC,OAAA,IAIA4B,EAAA4rC,EAAAQ,EAAApsC,IAAA4J,IAAA5J,EACAG,EAAAyrC,EAAAQ,EAAAjsC,IAAAyJ,IAAAzJ,EAGAwC,EAAA,EAAAwG,EAAAokC,EAAAnvC,OAAwCuE,EAAAwG,IAAUxG,GAClD2qC,EAAAC,EAAA5qC,KACA3C,GAAAstC,GAAAntC,GACAoH,EAAAjJ,KAAAgvC,GAcA,OAVA1jC,EAAA5J,MACA4J,EAAAzJ,MAGAyJ,EAAAkkC,MAAA1B,EAAAH,MA3WA,SAAA1kC,EAAA+kC,EAAAtsC,EAAAG,GACA,IAEAwC,EAAAspC,EAFAr7B,EAAA24B,EAAA34B,SAAA24B,EAAAppC,GAAA4tC,KAAAxE,EAAAvpC,KAIA,IAAA2C,EAHA6nC,EAAApsC,OAGA,EAAmBuE,GAAA6nC,EAAAjoC,QAAA+pC,GAA6B3pC,IAEhD,GADAspC,EAAAzB,EAAA7nC,GACAinC,EAAAqC,GAAAnC,QAAAl5B,EAAAo9B,GAAA/B,IAAA1kC,EAAAnJ,OACA,OAAA6tC,EAIA,OAAAzB,EAAA8B,EAAA9B,EAAAjoC,QAAA+pC,GAAA,GAZA,CA2WA/kC,EAAA6kC,EAAAE,QAAA1iC,EAAA5J,IAAA4J,EAAAzJ,KACAyJ,EAAAqkC,WAAAjC,EAAApiC,EAAAkkC,OACAlkC,EAAA+jC,OAjiBA,SAAAJ,EAAAvtC,EAAAG,EAAA+tC,GACA,cAAAA,IAAAX,EAAAnvC,OACA,QACI0tC,KAAA9rC,EAAAqe,IAAA,IACAytB,KAAA3rC,EAAAke,IAAA,IAIJ,IAEA1b,EAAAwG,EAAAoiC,EAAA4C,EAAAvd,EAFAka,KACA77B,GAAAjP,GAGA,IAAA2C,EAAA,EAAAwG,EAAAokC,EAAAnvC,OAAsCuE,EAAAwG,IAAUxG,GAChDwrC,EAAAZ,EAAA5qC,IACA3C,GAAAmuC,EAAAhuC,GACA8O,EAAA3Q,KAAA6vC,GAMA,IAFAl/B,EAAA3Q,KAAA6B,GAEAwC,EAAA,EAAAwG,EAAA8F,EAAA7Q,OAAiCuE,EAAAwG,IAAUxG,EAC3CiuB,EAAA3hB,EAAAtM,EAAA,GACA4oC,EAAAt8B,EAAAtM,EAAA,GACAwrC,EAAAl/B,EAAAtM,YAGA4oC,YAAA3a,GAAA7wB,KAAA+b,OAAA8U,EAAA2a,GAAA,KAAA4C,GACArD,EAAAxsC,MAAewtC,KAAAqC,EAAA9vB,IAAA1b,GAAAwG,EAAA,KAIf,OAAA2hC,EAhCA,CAiiBAlhC,EAAAgkC,YAAA1vC,KAAA8B,EAAAG,EAAA0I,EAAAqlC,cACAtkC,EAAAwkC,SA1RA,SAAAtD,EAAAvjC,EAAAvH,EAAAG,EAAA0I,GACA,IAEAwlC,EAAAC,EAFAhuC,EAAA,EACAE,EAAA,EAsBA,OAnBAqI,EAAAoc,QAAA1d,EAAAnJ,SACAyK,EAAAijC,KAAA9rC,MACAquC,EAAA9mC,EAAAnJ,OAAA,EAAAmJ,EAAA,GAAApH,EACAmuC,EAAA/mC,EAAA,GACAjH,GACAuqC,EAAAC,EAAA,OAAAuD,EAAA,OACAxD,EAAAC,EAAA,OAAAwD,EAAA,QACA,GAEAzlC,EAAAijC,KAAA3rC,MACAkuC,EAAA9mC,IAAAnJ,OAAA,GACAkwC,EAAA/mC,EAAAnJ,OAAA,EAAAmJ,IAAAnJ,OAAA,GAAA4B,EACAQ,GACAqqC,EAAAC,EAAA,OAAAuD,EAAA,OACAxD,EAAAC,EAAA,OAAAwD,EAAA,QACA,KAIShuC,OAAAE,SAxBT,CA0RAoJ,EAAA+jC,OAAApmC,EAAAvH,EAAAG,EAAA0I,GACAe,EAAA2kC,aA/OA,SAAArwC,EAAAkuC,GACA,IAAAzpC,EAAA6rC,EAAAC,EACAtlC,EAAAjL,EAAAE,OAIA,IAAAuE,EAAA,EAAYA,EAAAwG,EAAUxG,IAAA,CAEtB,QADA6rC,EAAA/C,EAAAvtC,EAAAyE,GAAAypC,IACAvC,cACA,kCAEA,IAAA2E,EAAAxE,UAAA,IAAAwE,EAAAvE,UAAA,IAAAuE,EAAAtE,SACAuE,MAGA,OAAAA,EACA,wBAEA,cAlBA,CA+OA7kC,EAAAgkC,YAAA1vC,KAAAkuC,GAhQA,SAAAvtC,EAAA6vC,GACA,IACA/rC,EAAAwG,EAAA/L,EAAAqvC,EADAllC,KAGA,IAAA5E,EAAA,EAAAwG,EAAAtK,EAAAT,OAAkCuE,EAAAwG,IAAUxG,EAC5CvF,EAAAyB,EAAA8D,GACA8pC,IAAAiC,GAAAtxC,KAAAmsC,EAAAnsC,GAAA2uC,QAAA2C,GAEAnnC,EAAAjJ,MACAlB,QACAqvC,UAIA,OAAAllC,EAdA,CAkQAA,EAAAqC,EAAAqkC,aAGA7tB,iBAAA,SAAAthB,EAAAsR,GACA,IACAlS,EADA3B,KACAwL,MAAA7J,KACAkuC,EAFA7vC,KAEAsM,QAAAijC,KACAxnC,EAAApG,EAAAgK,QAAApJ,EAAAZ,EAAAgK,OAAA9J,OAAAF,EAAAgK,OAAApJ,GAAA,GACA1B,EAAAc,EAAA+J,SAAAmI,GAAAlS,KAAAY,GAKA,OAHAkI,EAAAqlB,SAAAjvB,KACAkH,EAPA/H,KAOAujB,cAAA1iB,IAEAgvC,EAAAuC,cACAlD,EAAAnnC,EAAA8nC,GAAAT,OAAAS,EAAAuC,eAEA,iBAAArqC,EACAA,EAGAmnC,EAAAnnC,EAAA8nC,GAAAT,OAhBApvC,KAgBAgyC,eAOAK,mBAAA,SAAAC,EAAA/vC,EAAAyI,EAAAunC,GACA,IACAjmC,EADAtM,KACAsM,QACAijC,EAAA+C,EAAApY,UACAsY,EAAAlmC,EAAAijC,KAAAkD,eACAC,EAAAF,EAJAxyC,KAIAuxC,OACAY,EALAnyC,KAKA0xC,WACAiB,EAAAH,EAAAL,GACAS,EAAAN,EAAA3zB,QAAA6wB,QAAA2C,GAAAjY,UACA2Y,EAAAvmC,EAAAtB,MAAAklC,MACAA,EAAA2C,EAAAv6B,SAAA65B,GAAAQ,GAAApD,IAAAqD,EACA7qC,EAAAuqC,EAAAlD,OAAAmD,IAAArC,EAAAyC,EAAAD,IACA7vB,EAAAqtB,EAAA2C,EAAAvmC,EAAAtB,MAAA8kC,MACAgD,EAAAroC,EAAA2I,eAAAyP,EAAAxN,SAAAwN,EAAAkwB,cAEA,OAAAD,IAAA/qC,EAAAxF,EAAAyI,GAAAjD,GAGA6b,qBAAA,SAAA5Y,GACA,IACA5E,EAAAwG,EADAjB,KAGA,IAAAvF,EAAA,EAAAwG,EAAA5B,EAAAnJ,OAAmCuE,EAAAwG,IAAUxG,EAC7CuF,EAAA5J,KAAA/B,KAAAqyC,mBAAArF,EAAAhiC,EAAA5E,GAAAvF,OAAAuF,EAAA4E,IAGA,OAAAW,GAMAqnC,kBAAA,SAAAzD,GACA,IAAAliC,EAAArN,KACAgC,EAAAqL,EAAA8jC,YAAA9jC,EAAAtK,MAAAsK,EAAAvJ,OACAie,EAAA1U,EAAA8jC,YAAA9jC,EAAAtJ,KAAAsJ,EAAArJ,IACA8d,EAAAwsB,EAAAjhC,EAAA+jC,OAAA,OAAA7B,EAAA,OAEA,OAAAxtB,EAAA/f,GAAAqL,EAAAwkC,SAAA9tC,KAAA+d,IAAAzU,EAAAwkC,SAAA9tC,KAAA,EAAAsJ,EAAAwkC,SAAA5tC,QAGAukB,iBAAA,SAAA3nB,EAAA0B,EAAAsR,GACA,IACA07B,EAAA,KAUA,YARAhtC,YAAAsR,IACA07B,EAJAvvC,KAIAqxC,YAAA3lC,SAAAmI,GAAAtR,IAGA,OAAAgtC,IACAA,EAAAF,EAAAxuC,EARAb,OAWA,OAAAuvC,EACA,OAZAvvC,KAYAgzC,kBAAAzD,IAIAtmB,gBAAA,SAAA1mB,GACA,IAAAyI,EAAAhL,KAAAizC,WACA,OAAA1wC,GAAA,GAAAA,EAAAyI,EAAAnJ,OACA7B,KAAAgzC,kBAAAhoC,EAAAzI,GAAA1B,OACA,MAGAqoB,iBAAA,SAAAC,GACA,IAAA9b,EAAArN,KACAgC,EAAAqL,EAAA8jC,YAAA9jC,EAAAtK,MAAAsK,EAAAvJ,OACAie,EAAA1U,EAAA8jC,YAAA9jC,EAAAtJ,KAAAsJ,EAAArJ,IACA8d,GAAA9f,GAAAmnB,EAAApH,GAAA/f,EAAA,IAAAqL,EAAAwkC,SAAA9tC,KAAA,EAAAsJ,EAAAwkC,SAAA9tC,MAAAsJ,EAAAwkC,SAAA5tC,MACAsrC,EAAAjB,EAAAjhC,EAAA+jC,OAAA,MAAAtvB,EAAA,QAEA,OAAAkrB,EAAAuC,IAOA2D,cAAA,SAAAnrC,GACA,IACAorC,EADAnzC,KACAsM,QAAAtB,MACAooC,EAFApzC,KAEAgF,IAAAyf,YAAA1c,GAAAhF,MACA8e,EAAApX,EAAA4oC,UAAAF,EAAAG,aACAC,EAAA/vC,KAAA6hB,IAAAxD,GACA2xB,EAAAhwC,KAAA0hB,IAAArD,GAGA,OAAAuxB,EAAAG,EAFA9oC,EAAA2I,eAAA+/B,EAAAnyB,SAAAte,EAAA6B,OAAA6c,iBAEAoyB,GAMAlC,iBAAA,SAAAmC,GACA,IAAApmC,EAAArN,KAEAuyC,EAAAllC,EAAAf,QAAAijC,KAAAkD,eAAAnF,YAEAoG,EAAArmC,EAAAglC,mBAAArF,EAAAyG,GAAA,KAAAlB,GACAa,EAAA/lC,EAAA6lC,cAAAQ,GACAC,EAAAtmC,EAAA4a,eAAA5a,EAAAtK,MAAAsK,EAAAvJ,OAEA8rC,EAAApsC,KAAAsO,MAAA6hC,EAAAP,GACA,OAAAxD,EAAA,EAAAA,EAAA,KAIAznC,EAAAmL,aAAAuU,kBAAA,OAAA8oB,GAhWAlpC,SAAA,SASAkqC,aAAA,SASAhrC,OAAA,OAEA4oC,MACAJ,UACAC,UACAM,QACAnwB,SACAq0B,iBACAtD,cACAP,QAAA,cAGA0C,gBACAnF,YAAA,gBACAG,OAAA,YACAC,OAAA,SACAC,KAAA,KACAC,IAAA,QACAC,KAAA,KACAC,MAAA,WACAC,QAAA,cACAC,KAAA,SAGAhjC,OACA6oC,YAUAj1B,OAAA,OAEAsxB,OACA53B,iBAAAw7B,KAAA,SAAA3zC,EAAAC,EAAAC,GAAA,aCneAR,EAAAC,QAAAF,EAAA,QACAC,EAAAC,QAAAkV,OAAApV,EAAA,QACAC,EAAAC,QAAAwQ,OAAA1Q,EAAA,QACAC,EAAAC,QAAAwM,QAAA1M,EAAA,SAAAm0C,OAAA,SAAA5zC,EAAAC,EAAAC,GAAA,aCHAR,EAAAC,QAAA,SAAAqI,GACAA,EAAAixB,QAAA,SAAAhpB,EAAAF,GAEA,OADAA,EAAA1I,KAAA,UACA,IAAAW,EAAAiI,EAAAF,wCCHArQ,EAAAC,QAAA,SAAAqI,GAEAA,EAAA4wB,SAAA,SAAA3oB,EAAAF,GAGA,OAFAA,EAAA1I,KAAA,WAEA,IAAAW,EAAAiI,EAAAF,2BCPA,IAAA+qB,EAAAr7B,EAAA,QAcAC,EAAAC,QALA,WACAE,KAAAC,SAAAg7B,IAAA,SACAj7B,KAAAgC,KAAA,IAAAgyC,KAAA,SAAA7zC,EAAAC,EAAAC,GAAA,aCTA,IAAAoK,EAAA7K,EAAA,QAKAE,EAAAD,EAAAC,SAKAkK,MAAA,SAAAwB,GACAA,EAAAxG,IAAAivC,UAAA,IAAAzoC,EAAAzI,MAAAyI,EAAA1H,SAcAowC,YAAA,SAAAlvC,EAAAzB,EAAAG,EAAAX,EAAAe,EAAA6iB,GACA,GAAAA,EAAA,CACA,IAAAwtB,EAAA3wC,KAAAC,IAAAkjB,EAAA5jB,EAAA,GACAqxC,EAAA5wC,KAAAC,IAAAkjB,EAAA7iB,EAAA,GAEAkB,EAAAmB,OAAA5C,EAAA4wC,EAAAzwC,GACAsB,EAAAqB,OAAA9C,EAAAR,EAAAoxC,EAAAzwC,GACAsB,EAAAqvC,iBAAA9wC,EAAAR,EAAAW,EAAAH,EAAAR,EAAAW,EAAA0wC,GACApvC,EAAAqB,OAAA9C,EAAAR,EAAAW,EAAAI,EAAAswC,GACApvC,EAAAqvC,iBAAA9wC,EAAAR,EAAAW,EAAAI,EAAAP,EAAAR,EAAAoxC,EAAAzwC,EAAAI,GACAkB,EAAAqB,OAAA9C,EAAA4wC,EAAAzwC,EAAAI,GACAkB,EAAAqvC,iBAAA9wC,EAAAG,EAAAI,EAAAP,EAAAG,EAAAI,EAAAswC,GACApvC,EAAAqB,OAAA9C,EAAAG,EAAA0wC,GACApvC,EAAAqvC,iBAAA9wC,EAAAG,EAAAH,EAAA4wC,EAAAzwC,QAEAsB,EAAAsvC,KAAA/wC,EAAAG,EAAAX,EAAAe,IAIA6qB,UAAA,SAAA3pB,EAAAkN,EAAAyU,EAAApjB,EAAAG,GACA,IAAA8D,EAAA+sC,EAAAC,EAAAC,EAAA3wC,EAAA9B,EAEA,IAAAkQ,GAAA,iBAAAA,GAEA,+BADA1K,EAAA0K,EAAAzJ,aACA,+BAAAjB,GAMA,KAAAiF,MAAAka,OAAA,IAIA,OAAAzU,GAEA,QACAlN,EAAAU,YACAV,EAAAuH,IAAAhJ,EAAAG,EAAAijB,EAAA,IAAAnjB,KAAA8H,IACAtG,EAAA4hB,YACA5hB,EAAAsB,OACA,MACA,eACAtB,EAAAU,YAEA5B,GADAywC,EAAA,EAAA5tB,EAAAnjB,KAAAm8B,KAAA,IACAn8B,KAAAm8B,KAAA,KACA36B,EAAAmB,OAAA5C,EAAAgxC,EAAA,EAAA7wC,EAAAI,EAAA,GACAkB,EAAAqB,OAAA9C,EAAAgxC,EAAA,EAAA7wC,EAAAI,EAAA,GACAkB,EAAAqB,OAAA9C,EAAAG,EAAA,EAAAI,EAAA,GACAkB,EAAA4hB,YACA5hB,EAAAsB,OACA,MACA,WACAtE,EAAA,EAAAwB,KAAA+nB,MAAA5E,EACA3hB,EAAAU,YACAV,EAAAmiB,SAAA5jB,EAAAvB,EAAA0B,EAAA1B,EAAA,EAAAA,EAAA,EAAAA,GACAgD,EAAA4pB,WAAArrB,EAAAvB,EAAA0B,EAAA1B,EAAA,EAAAA,EAAA,EAAAA,GACA,MACA,kBACA,IAAA0mB,EAAA/B,EAAAnjB,KAAA+nB,MACAmpB,EAAAnxC,EAAAmlB,EACAisB,EAAAjxC,EAAAglB,EACAksB,EAAApxC,KAAA+nB,MAAA5E,EACA3hB,EAAAU,YACA1F,KAAAk0C,YAAAlvC,EAAA0vC,EAAAC,EAAAC,IAAAjuB,EAAA,GACA3hB,EAAA4hB,YACA5hB,EAAAsB,OACA,MACA,cACAtE,EAAA,EAAAwB,KAAA+nB,MAAA5E,EACA3hB,EAAAU,YACAV,EAAAmB,OAAA5C,EAAAvB,EAAA0B,GACAsB,EAAAqB,OAAA9C,EAAAG,EAAA1B,GACAgD,EAAAqB,OAAA9C,EAAAvB,EAAA0B,GACAsB,EAAAqB,OAAA9C,EAAAG,EAAA1B,GACAgD,EAAA4hB,YACA5hB,EAAAsB,OACA,MACA,YACAtB,EAAAU,YACAV,EAAAmB,OAAA5C,EAAAG,EAAAijB,GACA3hB,EAAAqB,OAAA9C,EAAAG,EAAAijB,GACA3hB,EAAAmB,OAAA5C,EAAAojB,EAAAjjB,GACAsB,EAAAqB,OAAA9C,EAAAojB,EAAAjjB,GACAsB,EAAA4hB,YACA,MACA,eACA5hB,EAAAU,YACA8uC,EAAAhxC,KAAA6hB,IAAA7hB,KAAA8H,GAAA,GAAAqb,EACA8tB,EAAAjxC,KAAA0hB,IAAA1hB,KAAA8H,GAAA,GAAAqb,EACA3hB,EAAAmB,OAAA5C,EAAAixC,EAAA9wC,EAAA+wC,GACAzvC,EAAAqB,OAAA9C,EAAAixC,EAAA9wC,EAAA+wC,GACAzvC,EAAAmB,OAAA5C,EAAAixC,EAAA9wC,EAAA+wC,GACAzvC,EAAAqB,OAAA9C,EAAAixC,EAAA9wC,EAAA+wC,GACAzvC,EAAA4hB,YACA,MACA,WACA5hB,EAAAU,YACAV,EAAAmB,OAAA5C,EAAAG,EAAAijB,GACA3hB,EAAAqB,OAAA9C,EAAAG,EAAAijB,GACA3hB,EAAAmB,OAAA5C,EAAAojB,EAAAjjB,GACAsB,EAAAqB,OAAA9C,EAAAojB,EAAAjjB,GACA8wC,EAAAhxC,KAAA6hB,IAAA7hB,KAAA8H,GAAA,GAAAqb,EACA8tB,EAAAjxC,KAAA0hB,IAAA1hB,KAAA8H,GAAA,GAAAqb,EACA3hB,EAAAmB,OAAA5C,EAAAixC,EAAA9wC,EAAA+wC,GACAzvC,EAAAqB,OAAA9C,EAAAixC,EAAA9wC,EAAA+wC,GACAzvC,EAAAmB,OAAA5C,EAAAixC,EAAA9wC,EAAA+wC,GACAzvC,EAAAqB,OAAA9C,EAAAixC,EAAA9wC,EAAA+wC,GACAzvC,EAAA4hB,YACA,MACA,WACA5hB,EAAAU,YACAV,EAAAmB,OAAA5C,EAAAojB,EAAAjjB,GACAsB,EAAAqB,OAAA9C,EAAAojB,EAAAjjB,GACAsB,EAAA4hB,YACA,MACA,WACA5hB,EAAAU,YACAV,EAAAmB,OAAA5C,EAAAG,GACAsB,EAAAqB,OAAA9C,EAAAojB,EAAAjjB,GACAsB,EAAA4hB,YAIA5hB,EAAAuB,eAnGAvB,EAAA6vC,UAAA3iC,EAAA3O,EAAA2O,EAAAnP,MAAA,EAAAW,EAAAwO,EAAApO,OAAA,EAAAoO,EAAAnP,MAAAmP,EAAApO,SAsGA0wB,SAAA,SAAAxvB,EAAA0uB,GACA1uB,EAAAgiB,OACAhiB,EAAAU,YACAV,EAAAsvC,KAAA5gB,EAAA3vB,KAAA2vB,EAAA1vB,IAAA0vB,EAAAzvB,MAAAyvB,EAAA3vB,KAAA2vB,EAAAxvB,OAAAwvB,EAAA1vB,KACAgB,EAAA8vC,QAGArgB,WAAA,SAAAzvB,GACAA,EAAAsiB,WAGAjhB,OAAA,SAAArB,EAAAkvB,EAAArV,EAAAk2B,GACA,GAAAl2B,EAAA+S,YAOA,MANA,UAAA/S,EAAA+S,cAAAmjB,GAAA,UAAAl2B,EAAA+S,aAAAmjB,EACA/vC,EAAAqB,OAAA6tB,EAAA3wB,EAAAsb,EAAAnb,GAEAsB,EAAAqB,OAAAwY,EAAAtb,EAAA2wB,EAAAxwB,QAEAsB,EAAAqB,OAAAwY,EAAAtb,EAAAsb,EAAAnb,GAIAmb,EAAA4S,QAKAzsB,EAAAgwC,cACAD,EAAA7gB,EAAAD,sBAAAC,EAAAE,kBACA2gB,EAAA7gB,EAAAC,sBAAAD,EAAAI,kBACAygB,EAAAl2B,EAAAuV,kBAAAvV,EAAAoV,sBACA8gB,EAAAl2B,EAAAyV,kBAAAzV,EAAAsV,sBACAtV,EAAAtb,EACAsb,EAAAnb,GAVAsB,EAAAqB,OAAAwY,EAAAtb,EAAAsb,EAAAnb,KAuBA+G,EAAAT,MAAAlK,EAAAkK,MASAS,EAAAwqC,qBAAA,SAAAjwC,GACAA,EAAAU,YACA5F,EAAAo0C,YAAA9qC,MAAAtJ,EAAAwB,WACA0D,EAAA4hB,gDClNA/mB,EAAAC,SACA+hC,WAAA,aACAC,cAAA,aACAC,MAAA,WACAC,YAAA,aACAC,OAAA,aACAC,OAAA,aACAC,QAAA,aACAnmB,OAAA,OACAomB,gBAAA,aACA3mB,MAAA,SACA4mB,YAAA,YACAC,OAAA,WACAC,WAAA,aACAC,WAAA,YACAC,YAAA,WACAC,WAAA,YACAC,OAAA,YACAC,gBAAA,aACAC,UAAA,aACAC,SAAA,WACAloB,MAAA,WACAmoB,UAAA,SACAC,UAAA,WACAC,eAAA,YACAC,UAAA,aACAC,WAAA,SACAC,UAAA,aACAC,WAAA,aACAC,aAAA,WACAC,gBAAA,WACAC,YAAA,WACAC,YAAA,YACAC,SAAA,SACAC,YAAA,aACAC,cAAA,aACAC,eAAA,WACAC,eAAA,UACAC,eAAA,UACAC,eAAA,WACAC,YAAA,WACAC,UAAA,YACAC,aAAA,WACAC,SAAA,aACAC,SAAA,aACAC,YAAA,YACAC,WAAA,WACAC,aAAA,aACAC,aAAA,WACAC,SAAA,WACAC,WAAA,aACAC,YAAA,aACAC,MAAA,WACAC,WAAA,YACAC,MAAA,aACAvpB,OAAA,SACAwpB,aAAA,YACAC,MAAA,aACAC,UAAA,aACAC,SAAA,aACAC,WAAA,WACAC,QAAA,UACAC,OAAA,aACAC,OAAA,aACAC,UAAA,aACAC,eAAA,aACAC,WAAA,WACAC,cAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,sBAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,WAAA,aACAC,aAAA,aACAC,eAAA,YACAC,cAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,aACAC,MAAA,SACAC,WAAA,WACAC,OAAA,aACA/qB,SAAA,WACAgrB,QAAA,SACAC,kBAAA,aACAC,YAAA,SACAC,cAAA,YACAC,cAAA,aACAC,gBAAA,YACAC,iBAAA,aACAC,mBAAA,WACAC,iBAAA,YACAC,iBAAA,YACAC,cAAA,WACAC,WAAA,aACAC,WAAA,aACAC,UAAA,aACAC,aAAA,aACAC,MAAA,SACAC,SAAA,aACAC,OAAA,WACAC,WAAA,YACAC,QAAA,WACAC,WAAA,UACAC,QAAA,aACAC,eAAA,aACAC,WAAA,aACAC,eAAA,aACAC,eAAA,aACAC,YAAA,aACAC,WAAA,aACAC,MAAA,YACAC,MAAA,aACAC,MAAA,aACAC,YAAA,aACAC,QAAA,WACAC,eAAA,YACA1uB,KAAA,SACA2uB,WAAA,aACAC,WAAA,YACAC,aAAA,WACAC,QAAA,aACAC,YAAA,YACAC,UAAA,WACAC,UAAA,aACAC,QAAA,WACAC,QAAA,aACAC,SAAA,aACAC,WAAA,YACAC,WAAA,aACAC,WAAA,aACAC,MAAA,aACAC,aAAA,WACAC,WAAA,YACAC,KAAA,aACAC,MAAA,WACAC,SAAA,aACAC,QAAA,WACAC,WAAA,YACAC,QAAA,aACAC,OAAA,aACAC,OAAA,aACAC,YAAA,aACAzuB,QAAA,WACA0uB,aAAA,cAAAyK,KAAA,SAAA/0C,EAAAC,EAAAC,GAAA,aCjJA,IAYAkH,EAZAkD,GAIA0C,KAAA,aAOAoD,KACAhJ,EAAA,EACA,WACA,OAAAA,MAUA2O,cAAA,SAAArV,GACA,cAAAA,eASAuJ,QAAAqV,MAAArV,QAAAqV,MAAArV,QAAA,SAAAvJ,GACA,yBAAAI,OAAAC,UAAAuH,SAAAlH,KAAAV,IASAivB,SAAA,SAAAjvB,GACA,cAAAA,GAAA,oBAAAI,OAAAC,UAAAuH,SAAAlH,KAAAV,IASAuS,eAAA,SAAAvS,EAAAs0C,GACA,gBAAAt0C,EAAAs0C,EAAAt0C,GAUAuL,sBAAA,SAAAvL,EAAA0B,EAAA4yC,GACA,OAAA1qC,EAAA2I,eAAA3I,EAAAL,QAAAvJ,KAAA0B,GAAA1B,EAAAs0C,IAWA9/B,SAAA,SAAA+/B,EAAAjsC,EAAAksC,GACA,GAAAD,GAAA,mBAAAA,EAAA7zC,KACA,OAAA6zC,EAAAhsC,MAAAisC,EAAAlsC,IAaA8E,KAAA,SAAAqnC,EAAAF,EAAAC,EAAArvB,GACA,IAAA5f,EAAAmvC,EAAA3iC,EACA,GAAAnI,EAAAL,QAAAkrC,GAEA,GADAC,EAAAD,EAAAzzC,OACAmkB,EACA,IAAA5f,EAAAmvC,EAAA,EAAqBnvC,GAAA,EAAQA,IAC7BgvC,EAAA7zC,KAAA8zC,EAAAC,EAAAlvC,WAGA,IAAAA,EAAA,EAAeA,EAAAmvC,EAASnvC,IACxBgvC,EAAA7zC,KAAA8zC,EAAAC,EAAAlvC,WAGG,GAAAqE,EAAAqlB,SAAAwlB,GAGH,IADAC,GADA3iC,EAAA3R,OAAA2R,KAAA0iC,IACAzzC,OACAuE,EAAA,EAAcA,EAAAmvC,EAASnvC,IACvBgvC,EAAA7zC,KAAA8zC,EAAAC,EAAA1iC,EAAAxM,IAAAwM,EAAAxM,KAYA6S,YAAA,SAAAu8B,EAAAC,GACA,IAAArvC,EAAAwG,EAAA8oC,EAAAC,EAEA,IAAAH,IAAAC,GAAAD,EAAA3zC,SAAA4zC,EAAA5zC,OACA,SAGA,IAAAuE,EAAA,EAAAwG,EAAA4oC,EAAA3zC,OAA+BuE,EAAAwG,IAAUxG,EAIzC,GAHAsvC,EAAAF,EAAApvC,GACAuvC,EAAAF,EAAArvC,GAEAsvC,aAAAj2B,OAAAk2B,aAAAl2B,OACA,IAAAhV,EAAAwO,YAAAy8B,EAAAC,GACA,cAEI,GAAAD,IAAAC,EAEJ,SAIA,UAQAh3B,MAAA,SAAAC,GACA,GAAAnU,EAAAL,QAAAwU,GACA,OAAAA,EAAA7S,IAAAtB,EAAAkU,OAGA,GAAAlU,EAAAqlB,SAAAlR,GAAA,CAMA,IALA,IAAAC,KACAjM,EAAA3R,OAAA2R,KAAAgM,GACAg3B,EAAAhjC,EAAA/Q,OACAq8B,EAAA,EAESA,EAAA0X,IAAU1X,EACnBrf,EAAAjM,EAAAsrB,IAAAzzB,EAAAkU,MAAAC,EAAAhM,EAAAsrB,KAGA,OAAArf,EAGA,OAAAD,GAQAi3B,QAAA,SAAA91C,EAAA8e,EAAAD,EAAAtS,GACA,IAAAwpC,EAAAj3B,EAAA9e,GACA0uC,EAAA7vB,EAAA7e,GAEA0K,EAAAqlB,SAAAgmB,IAAArrC,EAAAqlB,SAAA2e,GACAhkC,EAAA0lB,MAAA2lB,EAAArH,EAAAniC,GAEAuS,EAAA9e,GAAA0K,EAAAkU,MAAA8vB,IAQAsH,UAAA,SAAAh2C,EAAA8e,EAAAD,GACA,IAAAk3B,EAAAj3B,EAAA9e,GACA0uC,EAAA7vB,EAAA7e,GAEA0K,EAAAqlB,SAAAgmB,IAAArrC,EAAAqlB,SAAA2e,GACAhkC,EAAA+kB,QAAAsmB,EAAArH,GACG5vB,EAAA1d,eAAApB,KACH8e,EAAA9e,GAAA0K,EAAAkU,MAAA8vB,KAaAte,MAAA,SAAAtR,EAAAD,EAAAtS,GACA,IAEA6jB,EAAA/pB,EAAAwM,EAAAgjC,EAAA1X,EAFA8X,EAAAvrC,EAAAL,QAAAwU,SACAhS,EAAAopC,EAAAn0C,OAGA,IAAA4I,EAAAqlB,SAAAjR,GACA,OAAAA,EAMA,IAFAsR,GADA7jB,SACA2pC,QAAAxrC,EAAAorC,QAEAzvC,EAAA,EAAaA,EAAAwG,IAAUxG,EAEvB,GADAwY,EAAAo3B,EAAA5vC,GACAqE,EAAAqlB,SAAAlR,GAKA,IAAAsf,EAAA,EAAA0X,GADAhjC,EAAA3R,OAAA2R,KAAAgM,IACA/c,OAAkCq8B,EAAA0X,IAAU1X,EAC5C/N,EAAAvd,EAAAsrB,GAAArf,EAAAD,EAAAtS,GAIA,OAAAuS,GAUA2Q,QAAA,SAAA3Q,EAAAD,GACA,OAAAnU,EAAA0lB,MAAAtR,EAAAD,GAAwCq3B,OAAAxrC,EAAAsrC,aAUxCnxC,OAAA,SAAAia,GAIA,IAHA,IAAAq3B,EAAA,SAAAr1C,EAAAd,GACA8e,EAAA9e,GAAAc,GAEAuF,EAAA,EAAAwG,EAAAtL,UAAAO,OAA0CuE,EAAAwG,IAAUxG,EACpDqE,EAAAwD,KAAA3M,UAAA8E,GAAA8vC,GAEA,OAAAr3B,GAMA+c,SAAA,SAAAua,GACA,IAAA9oC,EAAArN,KACAo2C,EAAAD,KAAAh1C,eAAA,eAAAg1C,EAAA/8B,YAAA,WACA,OAAA/L,EAAAjE,MAAApJ,KAAAsB,YAGA+0C,EAAA,WACAr2C,KAAAoZ,YAAAg9B,GAYA,OATAC,EAAAn1C,UAAAmM,EAAAnM,UACAk1C,EAAAl1C,UAAA,IAAAm1C,EACAD,EAAAxxC,OAAA6F,EAAAmxB,SAEAua,GACA1rC,EAAA7F,OAAAwxC,EAAAl1C,UAAAi1C,GAGAC,EAAAE,UAAAjpC,EAAAnM,UACAk1C,IAIAv2C,EAAAC,QAAA2K,EAWAA,EAAA8rC,aAAA9rC,EAAA4K,SAUA5K,EAAAzE,QAAA,SAAAia,EAAAjY,EAAAwuC,GACA,OAAA/2B,MAAAve,UAAA8E,QAAAzE,KAAA0e,EAAAjY,EAAAwuC,IAUA/rC,EAAAgsC,kBAAAhsC,EAAA2I,eASA3I,EAAAisC,yBAAAjsC,EAAA2B,4CC/TAvM,EAAAC,QAVA,SAAAO,EAAA6f,GAIA,IAHA,IAAA3d,GAAA,EACAgH,EAAAkW,MAAApf,KAEAkC,EAAAlC,GACAkJ,EAAAhH,GAAA2d,EAAA3d,GAEA,OAAAgH,sCCdA,IAAA7G,EAAA9C,EAAA,QACA+C,EAAA/C,EAAA,QACA6K,EAAA7K,EAAA,QAEA0gB,EAAA5d,EAAA6B,OAEA7B,EAAAyB,KAAA,UACAC,UACAkE,MACAmpB,QAAA,GACAntB,gBAAAgc,EAAA9b,aACAG,YAAA,EACAF,YAAA6b,EAAA9b,aACAqnB,eAAA,OACAE,cACAE,iBAAA,EACAE,gBAAA,QACAoI,mBACAjuB,YAKAzG,EAAAC,QAAA6C,EAAAiC,QACAC,KAAA,WACA,IAOAtC,EAAA4d,EAAA+T,EAAAyiB,EANAtzC,EADArD,KACA8C,MACAkC,EAFAhF,KAEAiF,OAAAD,IACAisB,EAAA5tB,EAAA4tB,SACAK,EAJAtxB,KAIA2xB,UAAA5S,QACA63B,EAAAt2B,EAAAlc,SAAAkE,KACAuuC,GAAA,EA2BA,IAjCA72C,KAUA82C,OAAAxlB,EAAAzvB,QACAyvB,EAAAvvB,KAAAuvB,EAAA,IAGAtsB,EAAAgiB,OAGAhiB,EAAA4mB,QAAAvoB,EAAAwoB,gBAAA+qB,EAAA/qB,eAGA7mB,EAAAypB,aACAzpB,EAAAypB,YAAAprB,EAAA0oB,YAAA6qB,EAAA7qB,YAGA/mB,EAAAgnB,eAAA3oB,EAAA4oB,kBAAA2qB,EAAA3qB,iBACAjnB,EAAAknB,SAAA7oB,EAAA8oB,iBAAAyqB,EAAAzqB,gBACAnnB,EAAAa,UAAAxC,EAAAsB,aAAAiyC,EAAAjyC,YACAK,EAAAY,YAAAvC,EAAAoB,aAAA6b,EAAA9b,aAGAQ,EAAAU,YACAmxC,GAAA,EAEAt0C,EAAA,EAAiBA,EAAA+uB,EAAAzvB,SAAuBU,EACxC4d,EAAAmR,EAAA/uB,GACA2xB,EAAAzpB,EAAAspB,aAAAzC,EAAA/uB,GACAo0C,EAAAx2B,EAAArd,MAGA,IAAAP,EACAo0C,EAAA1jB,OACAjuB,EAAAmB,OAAAwwC,EAAApzC,EAAAozC,EAAAjzC,GACAmzC,EAAAt0C,IAGA2xB,GAAA,IAAA2iB,EAAA3iB,EAAA5C,EAAAulB,GAEAF,EAAA1jB,OACA4jB,IAAAt0C,EAAA,IAAA0uB,IAAA,IAAA4lB,EAEA7xC,EAAAmB,OAAAwwC,EAAApzC,EAAAozC,EAAAjzC,GAGA+G,EAAA6F,OAAAjK,OAAArB,EAAAkvB,EAAApxB,MAAAqd,EAAArd,OAEA+zC,EAAAt0C,IAKAyC,EAAAuB,SACAvB,EAAAsiB,mCCxFA,IAGAsD,EAHAhrB,EAAA,OAAAA,CAGAqB,OAAA2R,KAAA3R,QAEApB,EAAAC,QAAA8qB,sBCQA/qB,EAAAC,QAJA,SAAAC,GACA,OAAAC,KAAAC,SAAAwC,IAAA1C,uCCRA,IAAA2C,EAAA9C,EAAA,QACA6K,EAAA7K,EAAA,QAEA8C,EAAAyB,KAAA,UACA0L,aAQAhQ,EAAAC,SAKAu4B,YAQA0e,SAAA,EAMAC,SAAA,SAAAnnC,GACA,IAAAyO,EAAAte,KAAAq4B,YACAtlB,OAAAlD,GAAAuQ,QAAA,SAAAoY,IACA,IAAAla,EAAAtY,QAAAwyB,IACAla,EAAAvc,KAAAy2B,KAIAx4B,KAAA+2C,YAOAE,WAAA,SAAApnC,GACA,IAAAyO,EAAAte,KAAAq4B,YACAtlB,OAAAlD,GAAAuQ,QAAA,SAAAoY,GACA,IAAA5P,EAAAtK,EAAAtY,QAAAwyB,IACA,IAAA5P,GACAtK,EAAA4L,OAAAtB,EAAA,KAIA5oB,KAAA+2C,YAOA/sC,MAAA,WACAhK,KAAAq4B,YACAr4B,KAAA+2C,YAQAhpC,MAAA,WACA,OAAA/N,KAAAq4B,SAAAx2B,QAQAq1C,OAAA,WACA,OAAAl3C,KAAAq4B,UAYAtnB,OAAA,SAAAvF,EAAA2rC,EAAAhuC,GACA,IAEA/C,EAAAgxC,EAAA5e,EAAA6e,EAAApgC,EAFAqgC,EAAAt3C,KAAAs3C,YAAA9rC,GACAoB,EAAA0qC,EAAAz1C,OAGA,IAAAuE,EAAA,EAAaA,EAAAwG,IAAUxG,EAIvB,sBADA6Q,GADAuhB,GADA4e,EAAAE,EAAAlxC,IACAoyB,QACA2e,OAEAE,GAAA7rC,GAAAuH,OAAA5J,QACApH,KAAAq1C,EAAA9qC,cACA2K,EAAA7N,MAAAovB,EAAA6e,IACA,SAKA,UAQAC,YAAA,SAAA9rC,GACA,IAAAnC,EAAAmC,EAAA+rC,WAAA/rC,EAAA+rC,aACA,GAAAluC,EAAA9B,KAAAvH,KAAA+2C,SACA,OAAA1tC,EAAAiuC,YAGA,IAAAznC,KACAynC,KACApnC,EAAA1E,KAAA0E,WACA5D,EAAA4D,EAAA5D,SAAA4D,EAAA5D,QAAAuD,YA2BA,OAzBA7P,KAAAq4B,SAAAtlB,OAAA7C,EAAAL,aAAAuQ,QAAA,SAAAoY,GAEA,QADA3oB,EAAA7J,QAAAwyB,GACA,CAIA,IAAAjxB,EAAAixB,EAAAjxB,GACAiG,EAAAlB,EAAA/E,QACAiG,SAIAA,IACAA,EAAA/C,EAAAkU,MAAAjc,EAAA6B,OAAAsL,QAAAtI,KAGAsI,EAAA9N,KAAAy2B,GACA8e,EAAAv1C,MACAy2B,SACAlsB,QAAAkB,YAIAnE,EAAAiuC,cACAjuC,EAAA9B,GAAAvH,KAAA+2C,SACAO,GASA7iC,YAAA,SAAAjJ,UACAA,EAAA+rC,2CCxKAhzC,GACA,IAAAi5B,EAAA,iBAAAj5B,QAAAtD,iBAAAsD,EAEA1E,EAAAC,QAAA09B,+CCAA,IAAAr1B,EAAAvI,EAAA,OAAAA,GAEAuI,EAAAsC,QAAA7K,EAAA,QAGAA,EAAA,OAAAA,CAAAuI,GAEAA,EAAAzF,SAAA9C,EAAA,QACAuI,EAAAxF,QAAA/C,EAAA,QACAuI,EAAA/D,SAAAxE,EAAA,QACAuI,EAAAuH,YAAA9P,EAAA,QACAuI,EAAAwH,QAAA/P,EAAA,QACAuI,EAAAyH,SAAAhQ,EAAA,QACAuI,EAAA0H,QAAAjQ,EAAA,QACAuI,EAAAkY,MAAAzgB,EAAA,QAEAA,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GAEAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GAIAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GAEAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GACAvI,EAAA,OAAAA,CAAAuI,GAGA,IAAA0H,EAAAjQ,EAAA,QACA,QAAAs+B,KAAAruB,EACAA,EAAA1O,eAAA+8B,IACA/1B,EAAA0H,QAAAmnC,SAAAnnC,EAAAquB,IAIA/1B,EAAAyH,SAAAgB,aAEA/Q,EAAAC,QAAAqI,EACA,oBAAAwX,SACAA,OAAAxX,SAYAA,EAAAkkB,OAAAxc,EAAAhE,OAAAyjB,SASAnnB,EAAAqvC,MAAA3nC,EAAA/H,MAAAwnB,SASAnnB,EAAAsvC,cAAAtvC,EAAA0H,QAUA1H,EAAAuvC,WAAAvvC,EAAAxF,QAAAiC,WASAuD,EAAAwvC,cAAAxvC,EAAAsC,QAAA6F,OASAnI,EAAAyvC,cAAAzvC,EAAAwH,2CCvHA,IAAAjN,EAAA9C,EAAA,QACA+C,EAAA/C,EAAA,QACA6K,EAAA7K,EAAA,QAEA8C,EAAAyB,KAAA,UACAC,UACAmI,KACAjI,gBAAA5B,EAAA6B,OAAAC,aACAC,YAAA,OACAE,YAAA,MAKA9E,EAAAC,QAAA6C,EAAAiC,QACAgC,aAAA,SAAAH,GACA,IAAApD,EAAArD,KAAA8C,MAEA,QAAAO,GACAG,KAAAqZ,IAAApW,EAAApD,EAAAE,EAAA,GAAAC,KAAAqZ,IAAAxZ,EAAAsjB,OAAAtjB,EAAAsxB,YAAA,IAKAnuB,QAAA,SAAAqxC,EAAAC,GACA,IAAAz0C,EAAArD,KAAA8C,MAEA,GAAAO,EAAA,CAQA,IAPA,IAAA00C,EAAAttC,EAAAutC,kBAAA30C,GAA8DE,EAAAs0C,EAAAn0C,EAAAo0C,IAC9Dj2B,EAAAk2B,EAAAl2B,MACA/S,EAAAipC,EAAAjpC,SAGAzD,EAAAhI,EAAAgI,WACA2D,EAAA3L,EAAA2L,SACAA,EAAA3D,GACA2D,GAAA,EAAAxL,KAAA8H,GAEA,KAAAuW,EAAA7S,GACA6S,GAAA,EAAAre,KAAA8H,GAEA,KAAAuW,EAAAxW,GACAwW,GAAA,EAAAre,KAAA8H,GAIA,IAAA2sC,EAAAp2B,GAAAxW,GAAAwW,GAAA7S,EACAkpC,EAAAppC,GAAAzL,EAAAsK,aAAAmB,GAAAzL,EAAAqK,YAEA,OAAAuqC,GAAAC,EAEA,UAGAnxC,eAAA,WACA,IAAA1D,EAAArD,KAAA8C,MACAq1C,GAAA90C,EAAAgI,WAAAhI,EAAA2L,UAAA,EACAopC,GAAA/0C,EAAAsK,YAAAtK,EAAAqK,aAAA,EACA,OACAnK,EAAAF,EAAAE,EAAAC,KAAA6hB,IAAA8yB,GAAAC,EACA10C,EAAAL,EAAAK,EAAAF,KAAA0hB,IAAAizB,GAAAC,IAIApxC,QAAA,WACA,IAAA3D,EAAArD,KAAA8C,MACA,OAAAU,KAAA8H,KAAAjI,EAAA2L,SAAA3L,EAAAgI,aAAA,EAAA7H,KAAA8H,MAAA9H,KAAAqZ,IAAAxZ,EAAAqK,YAAA,GAAAlK,KAAAqZ,IAAAxZ,EAAAsK,YAAA,KAGA1G,gBAAA,WACA,IAAA5D,EAAArD,KAAA8C,MACAu1C,EAAAh1C,EAAAgI,YAAAhI,EAAA2L,SAAA3L,EAAAgI,YAAA,EACAitC,GAAAj1C,EAAAqK,YAAArK,EAAAsK,aAAA,EAAAtK,EAAAsK,YAEA,OACApK,EAAAF,EAAAE,EAAAC,KAAA6hB,IAAAgzB,GAAAC,EACA50C,EAAAL,EAAAK,EAAAF,KAAA0hB,IAAAmzB,GAAAC,IAIAzzC,KAAA,WACA,IAAAG,EAAAhF,KAAAiF,OAAAD,IACA3B,EAAArD,KAAA8C,MACAy1C,EAAAl1C,EAAAgI,WACAmtC,EAAAn1C,EAAA2L,SAEAhK,EAAAU,YAEAV,EAAAuH,IAAAlJ,EAAAE,EAAAF,EAAAK,EAAAL,EAAAqK,YAAA6qC,EAAAC,GACAxzC,EAAAuH,IAAAlJ,EAAAE,EAAAF,EAAAK,EAAAL,EAAAsK,YAAA6qC,EAAAD,MAEAvzC,EAAA4hB,YACA5hB,EAAAY,YAAAvC,EAAAoB,YACAO,EAAAa,UAAAxC,EAAAsB,YAEAK,EAAAW,UAAAtC,EAAAiB,gBAEAU,EAAAsB,OACAtB,EAAAknB,SAAA,QAEA7oB,EAAAsB,aACAK,EAAAuB,iDCrGA,IAAA7D,EAAA9C,EAAA,QACAwE,EAAAxE,EAAA,QACA6K,EAAA7K,EAAA,QAEA8C,EAAAyB,KAAA,YACA+G,WAEAC,iBAEAC,iBAEAjE,OACAC,KAAA,UAEAmE,eAAA,SAAAC,GACA,IAAAC,KACAA,EAAA1J,KAAA,cAAAyJ,EAAAjE,GAAA,aAEA,IAAA5F,EAAA6J,EAAA7J,KACA+J,EAAA/J,EAAA+J,SACAC,EAAAhK,EAAAgK,OAEA,GAAAD,EAAA7J,OACA,QAAAuE,EAAA,EAAkBA,EAAAsF,EAAA,GAAA/J,KAAAE,SAA6BuE,EAC/CqF,EAAA1J,KAAA,qCAAA2J,EAAA,GAAApH,gBAAA8B,GAAA,aACAuF,EAAAvF,IACAqF,EAAA1J,KAAA4J,EAAAvF,IAEAqF,EAAA1J,KAAA,SAKA,OADA0J,EAAA1J,KAAA,SACA0J,EAAAG,KAAA,KAEAC,QACAF,QACAG,eAAA,SAAAN,GACA,IAAA7J,EAAA6J,EAAA7J,KACA,OAAAA,EAAAgK,OAAA9J,QAAAF,EAAA+J,SAAA7J,OACAF,EAAAgK,OAAAI,IAAA,SAAAhE,EAAA3B,GACA,IAAA4F,EAAAR,EAAAS,eAAA,GACAC,EAAAvK,EAAA+J,SAAA,GACAa,EAAAP,EAAArK,KAAAyE,GACA+F,EAAAI,KAAAJ,WACAC,EAAA3B,EAAA2B,sBACAC,EAAAb,EAAAc,QAAAlI,SAAAmI,IAKA,OACAd,KAAA1D,EACApC,UANAwG,EAAA7H,gBAAA6H,EAAA7H,gBAAA8H,EAAAF,EAAA5H,gBAAA8B,EAAAiG,EAAA/H,iBAOAsB,YANAuG,EAAA1H,YAAA0H,EAAA1H,YAAA2H,EAAAF,EAAAzH,YAAA2B,EAAAiG,EAAA5H,aAOAoB,UANAsG,EAAAxH,YAAAwH,EAAAxH,YAAAyH,EAAAF,EAAAvH,YAAAyB,EAAAiG,EAAA1H,aAOA6H,OAAAC,MAAAP,EAAAvK,KAAAyE,KAAA4F,EAAArK,KAAAyE,GAAAoG,OAGAjK,MAAA6D,UAQAsG,QAAA,SAAAtM,EAAAuM,GACA,IAEAvG,EAAAwG,EAAAZ,EAFAzJ,EAAAoK,EAAApK,MACAiJ,EAAAxL,KAAAwL,MAGA,IAAApF,EAAA,EAAAwG,GAAApB,EAAA7J,KAAA+J,cAAA7J,OAAyDuE,EAAAwG,IAAUxG,GACnE4F,EAAAR,EAAAS,eAAA7F,IAEAzE,KAAAY,KACAyJ,EAAArK,KAAAY,GAAAiK,QAAAR,EAAArK,KAAAY,GAAAiK,QAIAhB,EAAAqB,WAKAe,iBAAA,GAGA6qC,UAAA,GAAAj1C,KAAA8H,GAGAgD,cAAA,EAAA9K,KAAA8H,GAGA1D,UACAC,WACAC,MAAA,WACA,UAEAC,MAAA,SAAA2wC,EAAA/2C,GACA,IAAAg3C,EAAAh3C,EAAAgK,OAAA+sC,EAAAn2C,OACA1B,EAAA,KAAAc,EAAA+J,SAAAgtC,EAAA7kC,cAAAlS,KAAA+2C,EAAAn2C,OAWA,OATAkI,EAAAL,QAAAuuC,IAGAA,IAAA55B,SACA,IAAAle,EAEA83C,GAAA93C,EAGA83C,OAMAj2C,EAAAyB,KAAA,MAAAsG,EAAAkU,MAAAjc,EAAAk2C,WACAl2C,EAAAyB,KAAA,OACAyJ,iBAAA,IAGA/N,EAAAC,QAAA,SAAAqI,GAEAA,EAAAC,YAAAwwC,SAAAzwC,EAAAC,YAAAywC,IAAA1wC,EAAA4E,kBAAAnI,QAEAoI,gBAAA5I,EAAA6I,IAEAC,WAAAzC,EAAA0C,KAGA2rC,aAAA,SAAAjlC,GAGA,IAFA,IAAAklC,EAAA,EAEAlI,EAAA,EAAkBA,EAAAh9B,IAAkBg9B,EACpC7wC,KAAAwL,MAAAgL,iBAAAq6B,MACAkI,EAIA,OAAAA,GAGAlsC,OAAA,SAAAO,GACA,IAAAC,EAAArN,KACAwL,EAAA6B,EAAA7B,MACA8B,EAAA9B,EAAA8B,UACAE,EAAAhC,EAAAc,QACAD,EAAAmB,EAAApJ,SAAAmI,IACAysC,EAAA1rC,EAAArJ,MAAAqJ,EAAAvJ,KAAAsI,EAAA1H,YACAs0C,EAAA3rC,EAAApJ,OAAAoJ,EAAAtJ,IAAAqI,EAAA1H,YACA8I,EAAAjK,KAAAC,IAAAu1C,EAAAC,GACAvwB,GAAiBnlB,EAAA,EAAAG,EAAA,GACjBsI,EAAAqB,EAAAE,UACAK,EAAAJ,EAAAI,iBACAU,EAAAd,EAAAc,cAGA,GAAAA,EAAA,EAAA9K,KAAA8H,GAAA,CACA,IAAAD,EAAAmC,EAAAirC,UAAA,EAAAj1C,KAAA8H,IAEA0D,GADA3D,GAAA,EAAA7H,KAAA8H,IAAAD,GAAA7H,KAAA8H,IAAA,EAAAD,GAAA7H,KAAA8H,GAAA,MACAgD,EACAyT,GAAiBxe,EAAAC,KAAA6hB,IAAAha,GAAA3H,EAAAF,KAAA0hB,IAAA7Z,IACjB2W,GAAeze,EAAAC,KAAA6hB,IAAArW,GAAAtL,EAAAF,KAAA0hB,IAAAlW,IACfkqC,EAAA7tC,GAAA,GAAA2D,GAAA,GAAA3D,GAAA,EAAA7H,KAAA8H,IAAA,EAAA9H,KAAA8H,IAAA0D,EACAmqC,EAAA9tC,GAAA,GAAA7H,KAAA8H,IAAA,GAAA9H,KAAA8H,IAAA0D,GAAA3D,GAAA,IAAA7H,KAAA8H,IAAA,IAAA9H,KAAA8H,IAAA0D,EACAoqC,EAAA/tC,IAAA7H,KAAA8H,KAAA9H,KAAA8H,IAAA0D,GAAA3D,GAAA7H,KAAA8H,IAAA9H,KAAA8H,IAAA0D,EACAqqC,EAAAhuC,GAAA,IAAA7H,KAAA8H,IAAA,IAAA9H,KAAA8H,IAAA0D,GAAA3D,GAAA,IAAA7H,KAAA8H,IAAA,IAAA9H,KAAA8H,IAAA0D,EACAsqC,EAAA1rC,EAAA,IACAnK,GAAeF,EAAA61C,GAAA,EAAA51C,KAAAC,IAAAse,EAAAxe,GAAAwe,EAAAxe,EAAA,IAAA+1C,GAAAt3B,EAAAze,GAAAye,EAAAze,EAAA,IAAA+1C,IAAA51C,EAAA21C,GAAA,EAAA71C,KAAAC,IAAAse,EAAAre,GAAAqe,EAAAre,EAAA,IAAA41C,GAAAt3B,EAAAte,GAAAse,EAAAte,EAAA,IAAA41C,KACf11C,GAAeL,EAAA21C,EAAA,EAAA11C,KAAAI,IAAAme,EAAAxe,GAAAwe,EAAAxe,EAAA,IAAA+1C,GAAAt3B,EAAAze,GAAAye,EAAAze,EAAA,IAAA+1C,IAAA51C,EAAAy1C,EAAA,EAAA31C,KAAAI,IAAAme,EAAAre,GAAAqe,EAAAre,EAAA,IAAA41C,GAAAt3B,EAAAte,GAAAse,EAAAte,EAAA,IAAA41C,KACft3C,GAAgBe,MAAA,IAAAa,EAAAL,EAAAE,EAAAF,GAAAO,OAAA,IAAAF,EAAAF,EAAAD,EAAAC,IAChB+J,EAAAjK,KAAAC,IAAAu1C,EAAAh3C,EAAAe,MAAAk2C,EAAAj3C,EAAA8B,QACA4kB,GAAcnlB,GAAA,IAAAK,EAAAL,EAAAE,EAAAF,GAAAG,GAAA,IAAAE,EAAAF,EAAAD,EAAAC,IAGd8H,EAAA7G,YAAA0I,EAAAksC,kBAAAvtC,EAAArK,MACA6J,EAAAkC,YAAAlK,KAAAI,KAAA6J,EAAAjC,EAAA7G,aAAA,KACA6G,EAAAmC,YAAAnK,KAAAI,IAAAgK,EAAApC,EAAAkC,YAAA,IAAA4U,EAAA,KACA9W,EAAAqC,cAAArC,EAAAkC,YAAAlC,EAAAmC,aAAAnC,EAAAsC,yBACAtC,EAAAguC,QAAA9wB,EAAAnlB,EAAAiI,EAAAkC,YACAlC,EAAAiuC,QAAA/wB,EAAAhlB,EAAA8H,EAAAkC,YAEA1B,EAAA0tC,MAAArsC,EAAAssC,iBAEAtsC,EAAAK,YAAAlC,EAAAkC,YAAAlC,EAAAqC,aAAAR,EAAAyrC,aAAAzrC,EAAA9K,OACA8K,EAAAM,YAAAnK,KAAAI,IAAAyJ,EAAAK,YAAAlC,EAAAqC,aAAA,GAEApD,EAAAwD,KAAAjC,EAAArK,KAAA,SAAA4K,EAAAhK,GACA8K,EAAAa,cAAA3B,EAAAhK,EAAA6K,MAIAc,cAAA,SAAA3B,EAAAhK,EAAA6K,GACA,IAAAC,EAAArN,KACAwL,EAAA6B,EAAA7B,MACA8B,EAAA9B,EAAA8B,UACAE,EAAAhC,EAAAc,QACA+B,EAAAb,EAAAtC,UACAsD,GAAAlB,EAAAvJ,KAAAuJ,EAAArJ,OAAA,EACAyK,GAAApB,EAAAtJ,IAAAsJ,EAAApJ,QAAA,EACAmH,EAAAmC,EAAAirC,SACAzpC,EAAAxB,EAAAirC,SACAtqC,EAAAd,EAAAe,aACAE,EAAAlB,GAAAiB,EAAAlD,cAAA,EAAAoB,EAAAC,OAAA,EAAAa,EAAAkB,uBAAAJ,EAAAxM,KAAAY,KAAAiL,EAAAc,eAAA,EAAA9K,KAAA8H,KACAqC,EAAAP,GAAAiB,EAAAjD,aAAA,EAAAiC,EAAAM,YACAD,EAAAN,GAAAiB,EAAAjD,aAAA,EAAAiC,EAAAK,YACAtB,EAAA3B,EAAA2B,sBAEA3B,EAAA7F,OAAA2H,GAEA2C,cAAA7B,EAAA9K,MACA4M,OAAA5M,EAGA8M,QACA9L,EAAAiL,EAAAhD,EAAAguC,QACA91C,EAAAgL,EAAAlD,EAAAiuC,QACApuC,aACA2D,WACAV,gBACAZ,cACAC,cACA5F,MAAAqE,EAAA+B,EAAApG,MAAAxF,EAAAiJ,EAAA7J,KAAAgK,OAAApJ,OAIA,IAAAixB,EAAAjnB,EAAA8C,OAEArP,KAAAsP,iBAAA/C,GAGAa,GAAAiB,EAAAlD,gBAEAqoB,EAAAnoB,WADA,IAAA9I,EACAiL,EAAAirC,SAEAprC,EAAAE,UAAA5L,KAAAY,EAAA,GAAA8M,OAAAL,SAGAwkB,EAAAxkB,SAAAwkB,EAAAnoB,WAAAmoB,EAAAllB,eAGA/B,EAAAgD,SAGAD,iBAAA,SAAA/C,GACApE,EAAA4E,kBAAA7L,UAAAoO,iBAAA/N,KAAAvB,KAAAuM,EAAAvM,KAAAwL,MAAAc,QAAAlI,SAAAmI,MAGAotC,eAAA,WACA,IAGA94C,EAHAsN,EAAAnO,KAAAoO,aACApC,EAAAhM,KAAAuN,UACAmsC,EAAA,EAcA,OAXAjvC,EAAAwD,KAAAjC,EAAArK,KAAA,SAAA6N,EAAAjN,GACA1B,EAAAsN,EAAAxM,KAAAY,GACAkK,MAAA5L,IAAA2O,EAAAhD,SACAktC,GAAAl2C,KAAA4B,IAAAvE,MAQA64C,GAGAnrC,uBAAA,SAAA1N,GACA,IAAA64C,EAAA15C,KAAAuN,UAAAmsC,MACA,OAAAA,EAAA,IAAAjtC,MAAA5L,GACA,EAAA2C,KAAA8H,IAAA9H,KAAA4B,IAAAvE,GAAA64C,GAEA,GAIAH,kBAAA,SAAAK,GAOA,IANA,IAGAj1C,EACAk1C,EAJAj2C,EAAA,EACArB,EAAAvC,KAAAuC,MACAV,EAAA+3C,EAAA/3C,OAIAuE,EAAA,EAAkBA,EAAAvE,EAAYuE,IAC9BzB,EAAAi1C,EAAAxzC,GAAAiJ,OAAAuqC,EAAAxzC,GAAAiJ,OAAA1K,YAAA,EAIAf,GAHAi2C,EAAAD,EAAAxzC,GAAAnB,OAAA20C,EAAAxzC,GAAAnB,OAAAiL,OAAAvO,KAAA+J,SAAAnJ,GAAA2yB,iBAAA,IAEAtxB,EAAAe,EAAAf,EAAAe,EAAAf,GACAi2C,EAAAj2C,EAEA,OAAAA,4BCvSA,IAAAk2C,EAAAl6C,EAAA,QACAm6C,EAAAn6C,EAAA,QACAo6C,EAAAp6C,EAAA,QACAq6C,EAAAr6C,EAAA,QACAs6C,EAAAt6C,EAAA,QASA,SAAA4B,EAAAuI,GACA,IAAAxH,GAAA,EACAV,EAAA,MAAAkI,EAAA,EAAAA,EAAAlI,OAGA,IADA7B,KAAAgK,UACAzH,EAAAV,GAAA,CACA,IAAAoI,EAAAF,EAAAxH,GACAvC,KAAAiC,IAAAgI,EAAA,GAAAA,EAAA,KAKAzI,EAAAN,UAAA8I,MAAA8vC,EACAt4C,EAAAN,UAAAgJ,OAAA6vC,EACAv4C,EAAAN,UAAAoI,IAAA0wC,EACAx4C,EAAAN,UAAAuB,IAAAw3C,EACAz4C,EAAAN,UAAAe,IAAAi4C,EAEAr6C,EAAAC,QAAA0B,qCC7BA,IAAAiJ,EAAA7K,EAAA,QACAygB,EAAAzgB,EAAA,QAsDAC,EAAAC,QAAA,SAAAqI,GAEA,IAAAoY,GACA9Y,SAAA,OAGAuD,OACAqK,SAAAgL,EAAAS,WAAAq5B,cAIAC,EAAAjyC,EAAA4f,MAAAnjB,QACAse,oBAAA,WACA,IAAA7V,EAAArN,KACAwN,EAAAH,EAAAf,QACAd,EAAA6B,EAAA7B,MAEAE,EADAF,EAAA7J,KACA+J,SACAuc,EAAA5a,EAAA4a,eACA,SAAAoyB,EAAAruC,GACA,OAAAic,EAAAjc,EAAAoL,UAAA/J,EAAA9F,GAAAyE,EAAAqL,UAAAhK,EAAA9F,GAIA8F,EAAA5J,IAAA,KACA4J,EAAAzJ,IAAA,KACAyJ,EAAAitC,WAAA,KAEA,IAAAC,EAAA/sC,EAAA6lB,QAeA,YAdAknB,GACA9vC,EAAAwD,KAAAvC,EAAA,SAAAyC,EAAA0F,GACA,IAAA0mC,EAAA,CAIA,IAAAvuC,EAAAR,EAAAS,eAAA4H,GACArI,EAAAgL,iBAAA3C,IAAAwmC,EAAAruC,aACAA,EAAAuuB,QACAggB,SAKA/sC,EAAA6lB,SAAAknB,EAAA,CACA,IAAAC,KAEA/vC,EAAAwD,KAAAvC,EAAA,SAAAyC,EAAA0F,GACA,IAAA7H,EAAAR,EAAAS,eAAA4H,GACA9T,GACAiM,EAAAxE,cAEAgG,EAAA6lB,kBAAArnB,EAAAuuB,MAAA1mB,EAAA,GACA7H,EAAAuuB,OACA3uB,KAAA,KAEAJ,EAAAgL,iBAAA3C,IAAAwmC,EAAAruC,cACAwuC,EAAAz6C,KACAy6C,EAAAz6C,OAGA0K,EAAAwD,KAAAE,EAAAxM,KAAA,SAAA2hB,EAAA/gB,GACA,IAAAD,EAAAk4C,EAAAz6C,GACAc,GAAAwM,EAAAkW,cAAAD,GAEA7W,MAAA5L,IAAAmL,EAAArK,KAAAY,GAAAiK,QAAA3L,EAAA,IAGAyB,EAAAC,GAAAD,EAAAC,IAAA,EACAD,EAAAC,IAAA1B,QAKA4J,EAAAwD,KAAAusC,EAAA,SAAAC,GACA,GAAAA,EAAA54C,OAAA,GACA,IAAA64C,EAAAjwC,EAAAhH,IAAAg3C,GACAE,EAAAlwC,EAAA7G,IAAA62C,GACAptC,EAAA5J,IAAA,OAAA4J,EAAA5J,IAAAi3C,EAAAl3C,KAAAC,IAAA4J,EAAA5J,IAAAi3C,GACArtC,EAAAzJ,IAAA,OAAAyJ,EAAAzJ,IAAA+2C,EAAAn3C,KAAAI,IAAAyJ,EAAAzJ,IAAA+2C,WAKAlwC,EAAAwD,KAAAvC,EAAA,SAAAyC,EAAA0F,GACA,IAAA7H,EAAAR,EAAAS,eAAA4H,GACArI,EAAAgL,iBAAA3C,IAAAwmC,EAAAruC,IACAvB,EAAAwD,KAAAE,EAAAxM,KAAA,SAAA2hB,EAAA/gB,GACA,IAAA1B,GAAAwM,EAAAkW,cAAAD,GAEA7W,MAAA5L,IAAAmL,EAAArK,KAAAY,GAAAiK,QAAA3L,EAAA,IAIA,OAAAwM,EAAA5J,IACA4J,EAAA5J,IAAA5C,EACQA,EAAAwM,EAAA5J,MACR4J,EAAA5J,IAAA5C,GAGA,OAAAwM,EAAAzJ,IACAyJ,EAAAzJ,IAAA/C,EACQA,EAAAwM,EAAAzJ,MACRyJ,EAAAzJ,IAAA/C,GAGA,IAAAA,IAAA,OAAAwM,EAAAitC,YAAAz5C,EAAAwM,EAAAitC,cACAjtC,EAAAitC,WAAAz5C,QAQAb,KAAAwjB,0BAEAA,uBAAA,WACA,IAAAnW,EAAArN,KAEA6iB,EADAxV,EAAAf,QACAtB,MACAoI,EAAA3I,EAAA2I,eAIA/F,EAAA5J,IAAA2P,EAAAyP,EAAApf,IAAA4J,EAAA5J,KACA4J,EAAAzJ,IAAAwP,EAAAyP,EAAAjf,IAAAyJ,EAAAzJ,KAEAyJ,EAAA5J,MAAA4J,EAAAzJ,MACA,IAAAyJ,EAAA5J,KAAA,OAAA4J,EAAA5J,KACA4J,EAAA5J,IAAAD,KAAAqZ,IAAA,GAAArZ,KAAAsO,MAAArH,EAAAmwC,MAAAvtC,EAAA5J,MAAA,GACA4J,EAAAzJ,IAAAJ,KAAAqZ,IAAA,GAAArZ,KAAAsO,MAAArH,EAAAmwC,MAAAvtC,EAAAzJ,MAAA,KAEAyJ,EAAA5J,IAXA,EAYA4J,EAAAzJ,IAXA,KAcA,OAAAyJ,EAAA5J,MACA4J,EAAA5J,IAAAD,KAAAqZ,IAAA,GAAArZ,KAAAsO,MAAArH,EAAAmwC,MAAAvtC,EAAAzJ,MAAA,IAEA,OAAAyJ,EAAAzJ,MACAyJ,EAAAzJ,IAAA,IAAAyJ,EAAA5J,IACAD,KAAAqZ,IAAA,GAAArZ,KAAAsO,MAAArH,EAAAmwC,MAAAvtC,EAAA5J,MAAA,GAnBA,IAsBA,OAAA4J,EAAAitC,aACAjtC,EAAA5J,IAAA,EACA4J,EAAAitC,WAAAjtC,EAAA5J,IACK4J,EAAAzJ,IAAA,EACLyJ,EAAAitC,WAAA92C,KAAAqZ,IAAA,GAAArZ,KAAAsO,MAAArH,EAAAmwC,MAAAvtC,EAAAzJ,OAEAyJ,EAAAitC,WA7BA,IAiCA/xB,WAAA,WACA,IAAAlb,EAAArN,KAEA6iB,EADAxV,EAAAf,QACAtB,MACAgb,GAAA3Y,EAAA4a,eAEA4yB,GACAp3C,IAAAof,EAAApf,IACAG,IAAAif,EAAAjf,KAEAoH,EAAAqC,EAAArC,MAlNA,SAAA6vC,EAAAC,GACA,IAWAC,EAAAC,EAXAhwC,KACAoI,EAAA3I,EAAA2I,eAMA6nC,EAAA7nC,EAAAynC,EAAAp3C,IAAAD,KAAAqZ,IAAA,GAAArZ,KAAAsO,MAAArH,EAAAmwC,MAAAE,EAAAr3C,QAEAy3C,EAAA13C,KAAAsO,MAAArH,EAAAmwC,MAAAE,EAAAl3C,MACAu3C,EAAA33C,KAAAmgB,KAAAm3B,EAAAl3C,IAAAJ,KAAAqZ,IAAA,GAAAq+B,IAGA,IAAAD,GACAF,EAAAv3C,KAAAsO,MAAArH,EAAAmwC,MAAAE,EAAAR,aACAU,EAAAx3C,KAAAsO,MAAAgpC,EAAAR,WAAA92C,KAAAqZ,IAAA,GAAAk+B,IAEA/vC,EAAAjJ,KAAAk5C,GACAA,EAAAD,EAAAx3C,KAAAqZ,IAAA,GAAAk+B,KAEAA,EAAAv3C,KAAAsO,MAAArH,EAAAmwC,MAAAK,IACAD,EAAAx3C,KAAAsO,MAAAmpC,EAAAz3C,KAAAqZ,IAAA,GAAAk+B,KAEA,IAAAK,EAAAL,EAAA,EAAAv3C,KAAAqZ,IAAA,GAAArZ,KAAA4B,IAAA21C,IAAA,EAEA,GACA/vC,EAAAjJ,KAAAk5C,GAGA,MADAD,IAEAA,EAAA,EAEAI,IADAL,GACA,IAAAK,GAGAH,EAAAz3C,KAAA+b,MAAAy7B,EAAAx3C,KAAAqZ,IAAA,GAAAk+B,GAAAK,WACEL,EAAAG,GAAAH,IAAAG,GAAAF,EAAAG,GAEF,IAAAE,EAAAjoC,EAAAynC,EAAAj3C,IAAAq3C,GAGA,OAFAjwC,EAAAjJ,KAAAs5C,GAEArwC,EA1CA,CAkNA6vC,EAAAxtC,GAIAA,EAAAzJ,IAAA6G,EAAA7G,IAAAoH,GACAqC,EAAA5J,IAAAgH,EAAAhH,IAAAuH,GAEA6X,EAAAmD,SACAA,KACA3Y,EAAA0U,MAAA1U,EAAAzJ,IACAyJ,EAAA2U,IAAA3U,EAAA5J,MAEA4J,EAAA0U,MAAA1U,EAAA5J,IACA4J,EAAA2U,IAAA3U,EAAAzJ,KAEAoiB,GACAhb,EAAAgb,WAGApC,qBAAA,WACA5jB,KAAAs7C,WAAAt7C,KAAAgL,MAAA+T,QAEA5W,EAAA4f,MAAA7mB,UAAA0iB,qBAAAriB,KAAAvB,OAGA6jB,iBAAA,SAAAthB,EAAAsR,GACA,OAAA7T,KAAAujB,cAAAvjB,KAAAwL,MAAA7J,KAAA+J,SAAAmI,GAAAlS,KAAAY,KAEA0mB,gBAAA,SAAA1mB,GACA,OAAAvC,KAAAwoB,iBAAAxoB,KAAAs7C,WAAA/4C,KAQAg5C,mBAAA,SAAA16C,GACA,IAAAk6C,EAAAv3C,KAAAsO,MAAArH,EAAAmwC,MAAA/5C,IAGA,OAFA2C,KAAAsO,MAAAjR,EAAA2C,KAAAqZ,IAAA,GAAAk+B,IAEAv3C,KAAAqZ,IAAA,GAAAk+B,IAEAvyB,iBAAA,SAAA3nB,GACA,IAKA26C,EAAAryB,EAAApH,EAAAC,EAAAy5B,EALApuC,EAAArN,KACAgmB,EAAA3Y,EAAAf,QAAAtB,MAAAgb,QACA40B,EAAAnwC,EAAAmwC,MACAc,EAAAruC,EAAAkuC,mBAAAluC,EAAAitC,YACA5xB,EAAA,EAmCA,OAhCA7nB,GAAAwM,EAAAkW,cAAA1iB,GACAmlB,GACAjE,EAAA1U,EAAA2U,IACAA,EAAA3U,EAAA0U,MACA05B,GAAA,IAEA15B,EAAA1U,EAAA0U,MACAC,EAAA3U,EAAA2U,IACAy5B,EAAA,GAEApuC,EAAA4a,gBACAuzB,EAAAnuC,EAAAtK,MACAomB,EAAAnD,EAAA3Y,EAAApJ,MAAAoJ,EAAAtJ,OAEAy3C,EAAAnuC,EAAAvJ,OACA23C,IAAA,EACAtyB,EAAAnD,EAAA3Y,EAAArJ,IAAAqJ,EAAAnJ,QAEArD,IAAAkhB,IACA,IAAAA,IAKAy5B,GAJA9yB,EAAAje,EAAAgsC,kBACAppC,EAAAf,QAAAtB,MAAAgW,SACA7Y,EAAAzF,SAAA6B,OAAA6c,iBAGAW,EAAA25B,GAEA,IAAA76C,IACA6nB,GAAA8yB,GAAAZ,EAAA54B,GAAA44B,EAAA74B,KAAA64B,EAAA/5C,GAAA+5C,EAAA74B,KAEAoH,GAAAsyB,EAAA/yB,GAEAS,GAEAD,iBAAA,SAAAC,GACA,IAIAqyB,EAAAz5B,EAAAC,EAAAnhB,EAJAwM,EAAArN,KACAgmB,EAAA3Y,EAAAf,QAAAtB,MAAAgb,QACA40B,EAAAnwC,EAAAmwC,MACAc,EAAAruC,EAAAkuC,mBAAAluC,EAAAitC,YAiBA,GAdAt0B,GACAjE,EAAA1U,EAAA2U,IACAA,EAAA3U,EAAA0U,QAEAA,EAAA1U,EAAA0U,MACAC,EAAA3U,EAAA2U,KAEA3U,EAAA4a,gBACAuzB,EAAAnuC,EAAAtK,MACAlC,EAAAmlB,EAAA3Y,EAAApJ,MAAAklB,IAAA9b,EAAAtJ,OAEAy3C,EAAAnuC,EAAAvJ,OACAjD,EAAAmlB,EAAAmD,EAAA9b,EAAArJ,IAAAqJ,EAAAnJ,OAAAilB,GAEAtoB,IAAAkhB,EAAA,CACA,OAAAA,EAAA,CACA,IAAA2G,EAAAje,EAAAgsC,kBACAppC,EAAAf,QAAAtB,MAAAgW,SACA7Y,EAAAzF,SAAA6B,OAAA6c,iBAEAvgB,GAAA6nB,EACA8yB,GAAA9yB,EACA3G,EAAA25B,EAEA76C,GAAA+5C,EAAA54B,GAAA44B,EAAA74B,GACAlhB,GAAA26C,EACA36C,EAAA2C,KAAAqZ,IAAA,GAAA+9B,EAAA74B,GAAAlhB,GAEA,OAAAA,KAGAsH,EAAAmL,aAAAuU,kBAAA,cAAAuyB,EAAA75B,0BCxVA,IAGA0a,EAHAr7B,EAAA,OAAAA,CAGAqB,OAAA,UAEApB,EAAAC,QAAAm7B,qCCHA,IAAAv4B,EAAA9C,EAAA,QACA6K,EAAA7K,EAAA,QACAygB,EAAAzgB,EAAA,QAEAC,EAAAC,QAAA,SAAAqI,GAEA,IAAAoY,GACA9Y,SAAA,OACAuD,OACAqK,SAAAgL,EAAAS,WAAAC,SAIA46B,EAAAxzC,EAAAwa,gBAAA/d,QAEAse,oBAAA,WACA,IAAA7V,EAAArN,KACAwN,EAAAH,EAAAf,QACAd,EAAA6B,EAAA7B,MAEAE,EADAF,EAAA7J,KACA+J,SACAuc,EAAA5a,EAAA4a,eAIA,SAAAoyB,EAAAruC,GACA,OAAAic,EAAAjc,EAAAoL,UAAA/J,EAAA9F,GAAAyE,EAAAqL,UAAAhK,EAAA9F,GAIA8F,EAAA5J,IAAA,KACA4J,EAAAzJ,IAAA,KAEA,IAAA22C,EAAA/sC,EAAA6lB,QAeA,YAdAknB,GACA9vC,EAAAwD,KAAAvC,EAAA,SAAAyC,EAAA0F,GACA,IAAA0mC,EAAA,CAIA,IAAAvuC,EAAAR,EAAAS,eAAA4H,GACArI,EAAAgL,iBAAA3C,IAAAwmC,EAAAruC,aACAA,EAAAuuB,QACAggB,SAKA/sC,EAAA6lB,SAAAknB,EAAA,CACA,IAAAC,KAEA/vC,EAAAwD,KAAAvC,EAAA,SAAAyC,EAAA0F,GACA,IAAA7H,EAAAR,EAAAS,eAAA4H,GACA9T,GACAiM,EAAAxE,cAEAgG,EAAA6lB,kBAAArnB,EAAAuuB,MAAA1mB,EAAA,GACA7H,EAAAuuB,OACA3uB,KAAA,cAEA4uC,EAAAz6C,KACAy6C,EAAAz6C,IACA67C,kBACAC,oBAKA,IAAAD,EAAApB,EAAAz6C,GAAA67C,eACAC,EAAArB,EAAAz6C,GAAA87C,eAEArwC,EAAAgL,iBAAA3C,IAAAwmC,EAAAruC,IACAvB,EAAAwD,KAAAE,EAAAxM,KAAA,SAAA2hB,EAAA/gB,GACA,IAAA1B,GAAAwM,EAAAkW,cAAAD,GACA7W,MAAA5L,IAAAmL,EAAArK,KAAAY,GAAAiK,SAIAovC,EAAAr5C,GAAAq5C,EAAAr5C,IAAA,EACAs5C,EAAAt5C,GAAAs5C,EAAAt5C,IAAA,EAEAiL,EAAAsuC,eACAF,EAAAr5C,GAAA,IACQ1B,EAAA,EACRg7C,EAAAt5C,IAAA1B,EAEA+6C,EAAAr5C,IAAA1B,OAMA4J,EAAAwD,KAAAusC,EAAA,SAAAC,GACA,IAAAn4C,EAAAm4C,EAAAmB,eAAA7oC,OAAA0nC,EAAAoB,gBACAnB,EAAAjwC,EAAAhH,IAAAnB,GACAq4C,EAAAlwC,EAAA7G,IAAAtB,GACA+K,EAAA5J,IAAA,OAAA4J,EAAA5J,IAAAi3C,EAAAl3C,KAAAC,IAAA4J,EAAA5J,IAAAi3C,GACArtC,EAAAzJ,IAAA,OAAAyJ,EAAAzJ,IAAA+2C,EAAAn3C,KAAAI,IAAAyJ,EAAAzJ,IAAA+2C,UAIAlwC,EAAAwD,KAAAvC,EAAA,SAAAyC,EAAA0F,GACA,IAAA7H,EAAAR,EAAAS,eAAA4H,GACArI,EAAAgL,iBAAA3C,IAAAwmC,EAAAruC,IACAvB,EAAAwD,KAAAE,EAAAxM,KAAA,SAAA2hB,EAAA/gB,GACA,IAAA1B,GAAAwM,EAAAkW,cAAAD,GACA7W,MAAA5L,IAAAmL,EAAArK,KAAAY,GAAAiK,SAIA,OAAAa,EAAA5J,IACA4J,EAAA5J,IAAA5C,EACQA,EAAAwM,EAAA5J,MACR4J,EAAA5J,IAAA5C,GAGA,OAAAwM,EAAAzJ,IACAyJ,EAAAzJ,IAAA/C,EACQA,EAAAwM,EAAAzJ,MACRyJ,EAAAzJ,IAAA/C,QAOAwM,EAAA5J,IAAAi4B,SAAAruB,EAAA5J,OAAAgJ,MAAAY,EAAA5J,KAAA4J,EAAA5J,IAxGA,EAyGA4J,EAAAzJ,IAAA83B,SAAAruB,EAAAzJ,OAAA6I,MAAAY,EAAAzJ,KAAAyJ,EAAAzJ,IAxGA,EA2GA5D,KAAAwjB,0BAEAC,aAAA,WACA,IAAAs4B,EAEAl5B,EADA7iB,KACAsM,QAAAtB,MAEA,GAHAhL,KAGAioB,eACA8zB,EAAAv4C,KAAAC,IAAAof,EAAAa,cAAAb,EAAAa,cAAA,GAAAlgB,KAAAmgB,KAJA3jB,KAIA+C,MAAA,SACI,CAEJ,IAAAigB,EAAAvY,EAAA2I,eAAAyP,EAAA7B,SAAAte,EAAA6B,OAAA6c,iBACA26B,EAAAv4C,KAAAC,IAAAof,EAAAa,cAAAb,EAAAa,cAAA,GAAAlgB,KAAAmgB,KARA3jB,KAQA8D,QAAA,EAAAkf,KAGA,OAAA+4B,GAGAC,yBAAA,WACAh8C,KAAAioB,gBAEAjoB,KAAAgL,MAAAgb,WAGAnC,iBAAA,SAAAthB,EAAAsR,GACA,OAAA7T,KAAAujB,cAAAvjB,KAAAwL,MAAA7J,KAAA+J,SAAAmI,GAAAlS,KAAAY,KAGAimB,iBAAA,SAAA3nB,GAGA,IAAAwM,EAAArN,KACA+hB,EAAA1U,EAAA0U,MAEAwR,GAAAlmB,EAAAkW,cAAA1iB,GAEA8tC,EAAAthC,EAAA2U,IAAAD,EAOA,OALA1U,EAAA4a,eACA5a,EAAAtJ,KAAAsJ,EAAAtK,MAAA4rC,GAAApb,EAAAxR,GAEA1U,EAAAnJ,OAAAmJ,EAAAvJ,OAAA6qC,GAAApb,EAAAxR,IAIAmH,iBAAA,SAAAC,GACA,IAAA9b,EAAArN,KACAioB,EAAA5a,EAAA4a,eACAuzB,EAAAvzB,EAAA5a,EAAAtK,MAAAsK,EAAAvJ,OACA4kB,GAAAT,EAAAkB,EAAA9b,EAAAtJ,KAAAsJ,EAAAnJ,OAAAilB,GAAAqyB,EACA,OAAAnuC,EAAA0U,OAAA1U,EAAA2U,IAAA3U,EAAA0U,OAAA2G,GAEAO,gBAAA,SAAA1mB,GACA,OAAAvC,KAAAwoB,iBAAAxoB,KAAA0mB,eAAAnkB,OAGA4F,EAAAmL,aAAAuU,kBAAA,SAAA8zB,EAAAp7B,wBCrKA,IAAAnW,EAAAqV,MAAArV,QAEAvK,EAAAC,QAAAsK,wBCzBA,IAAAzK,EAAAC,EAAA,QAyBAC,EAAAC,QAbA,SAAAC,EAAAc,GACA,IAAAc,EAAA3B,KAAAC,SACAsC,EAAA5C,EAAAgC,EAAA5B,GAQA,OANAwC,EAAA,KACAvC,KAAAgC,KACAL,EAAAI,MAAAhC,EAAAc,KAEAc,EAAAY,GAAA,GAAA1B,EAEAb,yCCpBA,IAAA0C,EAAA9C,EAAA,QACAwE,EAAAxE,EAAA,QACA6K,EAAA7K,EAAA,QAEA8C,EAAAyB,KAAA,OACAgD,OACAC,KAAA,SAGAC,QACAC,QACAE,KAAA,WAGAy0C,mBAAA,GACAC,cAAA,GAGAxzB,UAGA7d,WACAsxC,sBAIAz0C,QACAF,KAAA,cAKA9E,EAAAyB,KAAA,iBACAgD,OACAC,KAAA,QACAg1C,KAAA,KAGA/0C,QACAC,QACAE,KAAA,SACAC,SAAA,WAGAC,QACAD,SAAA,OACAD,KAAA,WAGAy0C,mBAAA,GACAC,cAAA,GAGAxzB,UAGA7d,WACAsxC,uBAKA/3C,UACAC,WACAK,cAAA,SAIAkD,UACAC,WACAC,MAAA,SAAAE,EAAArG,GAEA,IAAAmG,EAAA,GAUA,OARAE,EAAAnG,OAAA,IACAmG,EAAA,GAAAE,OACAJ,EAAAE,EAAA,GAAAE,OACMvG,EAAAgK,OAAA9J,OAAA,GAAAmG,EAAA,GAAAzF,MAAAZ,EAAAgK,OAAA9J,SACNiG,EAAAnG,EAAAgK,OAAA3D,EAAA,GAAAzF,SAIAuF,GAGAC,MAAA,SAAAC,EAAArG,GAEA,OADAA,EAAA+J,SAAA1D,EAAA6L,cAAA9L,OAAA,IACA,KAAAC,EAAAC,SAGAb,KAAA,QACAg1C,KAAA,OA2FAv8C,EAAAC,QAAA,SAAAqI,GAEAA,EAAAC,YAAAvF,IAAAsF,EAAA4E,kBAAAnI,QAEAoI,gBAAA5I,EAAAi4C,UAEAzrC,WAAA,WACA,IACA5E,EAEA7D,EAAA4E,kBAAA7L,UAAA0P,WAAAxH,MAHApJ,KAGAsB,YAEA0K,EALAhM,KAKAuN,WACAgtB,MANAv6B,KAMAoO,aAAAmsB,MACAvuB,EAAAnJ,QAGAgK,OAAA,SAAAO,GACA,IAEAhH,EAAAwG,EADA0vC,EADAt8C,KACAuN,UAAA5L,KAKA,IANA3B,KAIAu8C,OAJAv8C,KAIAw8C,WAEAp2C,EAAA,EAAAwG,EAAA0vC,EAAAz6C,OAAmCuE,EAAAwG,IAAUxG,EAN7CpG,KAOAkO,cAAAouC,EAAAl2C,KAAAgH,IAIAc,cAAA,SAAA7J,EAAA9B,EAAA6K,GACA,IAAAC,EAAArN,KACAwL,EAAA6B,EAAA7B,MACAQ,EAAAqB,EAAAE,UACAY,EAAAd,EAAAe,aACAjC,EAAA9H,EAAA8H,WACAswC,EAAAjxC,EAAAc,QAAAlI,SAAAC,UAEAA,EAAA0uB,QAAA1lB,EAAAmkB,cAAAxlB,EAAAoL,SACA/S,EAAA2uB,QAAA3lB,EAAAmkB,cAAAxlB,EAAAqL,SACAhT,EAAA6K,cAAA7B,EAAA9K,MACA8B,EAAA8K,OAAA5M,EAEA8B,EAAAgL,QACAqtC,aAAAvuC,EAAApG,MACAA,MAAAyD,EAAA7J,KAAAgK,OAAApJ,GACAmC,cAAAyH,EAAAzH,cAAAyH,EAAAzH,cAAA+3C,EAAA/3C,cACAJ,gBAAA6H,EAAA7H,gBAAA6H,EAAA7H,gBAAAmG,EAAA2B,sBAAA+B,EAAA7J,gBAAA/B,EAAAk6C,EAAAn4C,iBACAG,YAAA0H,EAAA1H,YAAA0H,EAAA1H,YAAAgG,EAAA2B,sBAAA+B,EAAA1J,YAAAlC,EAAAk6C,EAAAh4C,aACAE,YAAAwH,EAAAxH,YAAAwH,EAAAxH,YAAA8F,EAAA2B,sBAAA+B,EAAAxJ,YAAApC,EAAAk6C,EAAA93C,cAGA0I,EAAAsvC,sBAAAt4C,EAAA9B,EAAA6K,GAEA/I,EAAAkL,SAMAotC,sBAAA,SAAAt4C,EAAA9B,EAAA6K,GACA,IAAAC,EAAArN,KACAwzB,EAAAnvB,EAAAgL,OACAutC,EAAAvvC,EAAAwvC,gBACAl5C,EAAAi5C,EAAArzB,eACArkB,EAAA03C,EAAA30B,eACA60B,EAAAzvC,EAAAkvC,QAAAlvC,EAAAmvC,WACAO,EAAA1vC,EAAA2vC,wBAAA3vC,EAAA9K,SACA06C,EAAA5vC,EAAA6vC,wBAAA7vC,EAAA9K,QAAAu6C,GAEAtpB,EAAAtuB,aACAsuB,EAAA7vB,KAAAyJ,EAAAzJ,EAAAo5C,EAAAp5C,KACA6vB,EAAAjwB,EAAA2B,EAAAkI,EAAAzJ,EAAAo5C,EAAAI,KAAAF,EAAAG,OACA5pB,EAAA9vB,EAAAwB,EAAA+3C,EAAAG,OAAAhwC,EAAAzJ,EAAAo5C,EAAAI,KACA3pB,EAAA1vB,OAAAoB,EAAA+3C,EAAAj7C,YACAwxB,EAAAzwB,MAAAmC,SAAA+3C,EAAAj7C,MAMAq7C,gBAAA,WACA,OAAAr9C,KAAAuN,UAAA8J,SAMAimC,gBAAA,WACA,OAAAt9C,KAAAuN,UAAA6J,SAMAylC,cAAA,WACA,OAAA78C,KAAAwxB,cAAAxxB,KAAAq9C,oBAMAE,cAAA,WACA,OAAAv9C,KAAAwxB,cAAAxxB,KAAAs9C,oBASAE,WAAA,SAAA/M,GACA,IAMArqC,EAAA4F,EALAR,EADAxL,KACAwL,MAEA6nB,EAHArzB,KAEAu9C,gBACAjxC,QAAA+mB,QACAzmB,WAAA6jC,EAAAjlC,EAAA7J,KAAA+J,SAAA7J,OAAA4uC,EAAA,EACAgN,KAGA,IAAAr3C,EAAA,EAAcA,EAAAwG,IAAUxG,GACxB4F,EAAAR,EAAAS,eAAA7F,IACAvD,KAAA2I,EAAAgL,iBAAApQ,UACAitB,QACAA,IAAA,IAAAoqB,EAAAz3C,QAAAgG,EAAAuuB,iBACAlH,aAAArnB,EAAAuuB,QAAA,IAAAkjB,EAAAz3C,QAAAgG,EAAAuuB,UACAkjB,EAAA17C,KAAAiK,EAAAuuB,OAIA,OAAAkjB,GAOAC,cAAA,WACA,OAAA19C,KAAAw9C,aAAA37C,QAUA87C,cAAA,SAAA9pC,EAAA8mB,GACA,IAAA8iB,EAAAz9C,KAAAw9C,WAAA3pC,GACAtR,WAAAo4B,EACA8iB,EAAAz3C,QAAA20B,IACA,EAEA,WAAAp4B,EACAk7C,EAAA57C,OAAA,EACAU,GAMAi6C,SAAA,WACA,IAQAp2C,EAAAwG,EAPAlC,EADA1K,KACAu9C,gBACAK,EAFA59C,KAEA09C,gBACA7pC,EAHA7T,KAGAuC,MACA0lB,EAAAvd,EAAAud,eACAlG,EAAAkG,EAAAvd,EAAA3G,KAAA2G,EAAA1G,IACAge,EAAAD,GAAAkG,EAAAvd,EAAA3H,MAAA2H,EAAA5G,QACA+5C,KAGA,IAAAz3C,EAAA,EAAAwG,EAVA5M,KAUAuN,UAAA5L,KAAAE,OAA+CuE,EAAAwG,IAAUxG,EACzDy3C,EAAA97C,KAAA2I,EAAA8d,iBAAA,KAAApiB,EAAAyN,IAOA,OACApQ,IALAgH,EAAAyL,cAAAxL,EAAA4B,QAAAwxC,cApQA,SAAApzC,EAAAmzC,GACA,IAEA7O,EAAA4C,EAAAxrC,EAAAwG,EAFAnJ,EAAAiH,EAAAud,eAAAvd,EAAA3H,MAAA2H,EAAA5G,OACAkH,EAAAN,EAAAuoC,WAGA,IAAA7sC,EAAA,EAAAwG,EAAAixC,EAAAh8C,OAAkCuE,EAAAwG,IAAUxG,EAC5C3C,EAAAD,KAAAC,MAAAo6C,EAAAz3C,GAAAy3C,EAAAz3C,EAAA,IAGA,IAAAA,EAAA,EAAAwG,EAAA5B,EAAAnJ,OAAiCuE,EAAAwG,IAAUxG,EAC3CwrC,EAAAlnC,EAAAue,gBAAA7iB,GACA3C,EAAA2C,EAAA,EAAA5C,KAAAC,MAAAmuC,EAAA5C,GAAAvrC,EACAurC,EAAA4C,EAGA,OAAAnuC,EAfA,CAqQAiH,EAAAmzC,IACA,EAIAA,SACA97B,QACAC,MACA47B,aACAlzC,UAQAsyC,wBAAA,SAAAnpC,EAAAtR,GACA,IASA6D,EAAA23C,EAAAC,EAAAr6C,EAAAw5C,EAAAn7C,EARAwJ,EADAxL,KACAwL,MACAQ,EAFAhM,KAEAuN,UACA7C,EAHA1K,KAGA68C,gBACAnxC,EAAAF,EAAA7J,KAAA+J,SACA7K,EAAA6J,EAAA6Y,cAAA7X,EAAAmI,GAAAlS,KAAAY,IACA8wB,EAAA3oB,EAAA4B,QAAA+mB,QACAkH,EAAAvuB,EAAAuuB,MACAxY,EAAA,EAGA,GAAAsR,wBAAAkH,EACA,IAAAn0B,EAAA,EAAeA,EAAAyN,IAAkBzN,GACjC23C,EAAAvyC,EAAAS,eAAA7F,IAEAvD,KACAk7C,EAAAxjB,WACAwjB,EAAArtC,WAAA2sC,oBAAA3yC,EAAAnD,IACAiE,EAAAgL,iBAAApQ,KAEA43C,EAAAtzC,EAAA6Y,cAAA7X,EAAAtF,GAAAzE,KAAAY,KACA1B,EAAA,GAAAm9C,EAAA,GAAAn9C,GAAA,GAAAm9C,EAAA,KACAj8B,GAAAi8B,IAUA,OAJAr6C,EAAA+G,EAAA8d,iBAAAzG,IAKA/f,KAHAA,IADAm7C,EAAAzyC,EAAA8d,iBAAAzG,EAAAlhB,IACA8C,GAAA,EAIAA,OACAw5C,OACAC,OAAAD,EAAAn7C,EAAA,IAOAk7C,wBAAA,SAAArpC,EAAAtR,EAAAu6C,GACA,IACAxwC,EAAAwwC,EAAApyC,MAAA4B,QACAqiC,EAAA,SAAAriC,EAAAwxC,aA/QA,SAAAv7C,EAAAu6C,EAAAxwC,GACA,IAKAyV,EALA87B,EAAAf,EAAAe,OACAjM,EAAAiM,EAAAt7C,GACAysC,EAAAzsC,EAAA,EAAAs7C,EAAAt7C,EAAA,QACA8xB,EAAA9xB,EAAAs7C,EAAAh8C,OAAA,EAAAg8C,EAAAt7C,EAAA,QACA07C,EAAA3xC,EAAA2vC,mBAiBA,OAdA,OAAAjN,IAGAA,EAAA4C,GAAA,OAAAvd,EAAAyoB,EAAA96B,IAAA4vB,EAAAvd,EAAAud,IAGA,OAAAvd,IAEAA,EAAAud,IAAA5C,GAGAjtB,EAAA6vB,KAAA5C,GAAA,EAAAiP,GAIAC,OAHA7pB,EAAA2a,GAAA,EAAAiP,EAGAnB,EAAAc,WACApgC,MAAAlR,EAAA4vC,cACAn6B,SAzBA,CAgRAxf,EAAAu6C,EAAAxwC,GA9SA,SAAA/J,EAAAu6C,EAAAxwC,GACA,IAGAtK,EAAAwb,EAHA2gC,EAAA7xC,EAAAwxC,aACA/vC,EAAA+uC,EAAAc,WACAhM,EAAAkL,EAAAe,OAAAt7C,GAcA,OAXAkI,EAAAyL,cAAAioC,IACAn8C,EAAA86C,EAAAr5C,IAAA6I,EAAA2vC,mBACAz+B,EAAAlR,EAAA4vC,gBAKAl6C,EAAAm8C,EAAApwC,EACAyP,EAAA,IAIA0gC,MAAAl8C,EAAA+L,EACAyP,QACAuE,MAAA6vB,EAAA5vC,EAAA,GApBA,CA+SAO,EAAAu6C,EAAAxwC,GAEA8xC,EANAp+C,KAMA29C,cAAA9pC,EANA7T,KAMAuN,UAAAgtB,OACA6iB,EAAAzO,EAAA5sB,MAAA4sB,EAAAuP,MAAAE,EAAAzP,EAAAuP,MAAA,EACAl8C,EAAAwB,KAAAC,IACAgH,EAAA2I,eAAA9G,EAAA+xC,gBAAAC,KACA3P,EAAAuP,MAAAvP,EAAAnxB,OAEA,OACA7Z,KAAAy5C,EAAAp7C,EAAA,EACAm7C,KAAAC,EAAAp7C,EAAA,EACAo7C,SACAp7C,SAIA6C,KAAA,WACA,IACA2G,EADAxL,KACAwL,MACAd,EAFA1K,KAEA68C,gBACAP,EAHAt8C,KAGAuN,UAAA5L,KACAwM,EAJAnO,KAIAoO,aACAxB,EAAA0vC,EAAAz6C,OACAuE,EAAA,EAIA,IAFAqE,EAAA6F,OAAAkkB,SAAAhpB,EAAAxG,IAAAwG,EAAA8B,WAESlH,EAAAwG,IAAUxG,EACnBqG,MAAA/B,EAAA6Y,cAAApV,EAAAxM,KAAAyE,MACAk2C,EAAAl2C,GAAAvB,OAIA4F,EAAA6F,OAAAmkB,WAAAjpB,EAAAxG,MAGA0vB,cAAA,SAAArwB,GACA,IAAA8J,EAAAnO,KAAAwL,MAAA7J,KAAA+J,SAAArH,EAAA6K,eACA3M,EAAA8B,EAAA8K,OACAhD,EAAA9H,EAAA8H,WACAqnB,EAAAnvB,EAAAgL,OAEAmkB,EAAAlvB,gBAAA6H,EAAA0oB,qBAAA1oB,EAAA0oB,qBAAApqB,EAAA2B,sBAAA+B,EAAA0mB,qBAAAtyB,EAAAkI,EAAAsqB,cAAAvB,EAAAlvB,kBACAkvB,EAAA/uB,YAAA0H,EAAA6oB,iBAAA7oB,EAAA6oB,iBAAAvqB,EAAA2B,sBAAA+B,EAAA6mB,iBAAAzyB,EAAAkI,EAAAsqB,cAAAvB,EAAA/uB,cACA+uB,EAAA7uB,YAAAwH,EAAA+oB,iBAAA/oB,EAAA+oB,iBAAAzqB,EAAA2B,sBAAA+B,EAAA+mB,iBAAA3yB,EAAAixB,EAAA7uB,cAGA2K,iBAAA,SAAAjL,GACA,IAAA8J,EAAAnO,KAAAwL,MAAA7J,KAAA+J,SAAArH,EAAA6K,eACA3M,EAAA8B,EAAA8K,OACAhD,EAAA9H,EAAA8H,WACAqnB,EAAAnvB,EAAAgL,OACAkvC,EAAAv+C,KAAAwL,MAAAc,QAAAlI,SAAAC,UAEAmvB,EAAAlvB,gBAAA6H,EAAA7H,gBAAA6H,EAAA7H,gBAAAmG,EAAA2B,sBAAA+B,EAAA7J,gBAAA/B,EAAAg8C,EAAAj6C,iBACAkvB,EAAA/uB,YAAA0H,EAAA1H,YAAA0H,EAAA1H,YAAAgG,EAAA2B,sBAAA+B,EAAA1J,YAAAlC,EAAAg8C,EAAA95C,aACA+uB,EAAA7uB,YAAAwH,EAAAxH,YAAAwH,EAAAxH,YAAA8F,EAAA2B,sBAAA+B,EAAAxJ,YAAApC,EAAAg8C,EAAA55C,gBAIAwD,EAAAC,YAAAo2C,cAAAr2C,EAAAC,YAAAvF,IAAA+B,QAIAy4C,gBAAA,WACA,OAAAr9C,KAAAuN,UAAA6J,SAMAkmC,gBAAA,WACA,OAAAt9C,KAAAuN,UAAA8J,kCCpfA,IAAAonC,EAAA7+C,EAAA,QACA8+C,EAAA9+C,EAAA,QACA21B,EAAA31B,EAAA,QAmBAC,EAAAC,QAVA,SAAA8e,GACA,IAAA+/B,EAAAD,EAAA9/B,GACA,UAAA+/B,EAAA98C,QAAA88C,EAAA,MACAppB,EAAAopB,EAAA,MAAAA,EAAA,OAEA,SAAA91C,GACA,OAAAA,IAAA+V,GAAA6/B,EAAA51C,EAAA+V,EAAA+/B,2BCjBA,IAAAx0C,EAAAvK,EAAA,QACAa,EAAAb,EAAA,QAsBAC,EAAAC,QAZA,SAAA+I,EAAAnI,GAMA,IAHA,IAAA6B,EAAA,EACAV,GAHAnB,EAAAyJ,EAAAzJ,EAAAmI,IAGAhH,OAEA,MAAAgH,GAAAtG,EAAAV,GACAgH,IAAApI,EAAAC,EAAA6B,OAEA,OAAAA,MAAAV,EAAAgH,WAAAynB,qBCpBA,IAAAsuB,EAAAh/C,EAAA,QACAi/C,EAAAj/C,EAAA,QA+BAC,EAAAC,QANA,SAAAmgB,EAAAC,GACA,OAAAD,KAAApe,OACAg9C,EAAA5+B,EAAA2+B,EAAA1+B,EAAA,IACA,IAAA4+B,KAAA,SAAA3+C,EAAAC,EAAAC,GAAA,aC3BA,IAAAqC,EAAA9C,EAAA,QACAwE,EAAAxE,EAAA,QACA6K,EAAA7K,EAAA,QAEA8C,EAAAyB,KAAA,SACAuG,OACAlD,KAAA,gBAEApD,UACAkE,MACAmpB,QAAA,MAKA5xB,EAAAC,QAAA,SAAAqI,GAEAA,EAAAC,YAAA22C,MAAA52C,EAAA4E,kBAAAnI,QAEAwsB,mBAAAhtB,EAAA4b,KAEAhT,gBAAA5I,EAAAitB,MAEAnkB,WAAAzC,EAAA0C,KAEAN,OAAA,SAAAO,GACA,IAAAC,EAAArN,KACAgM,EAAAqB,EAAAE,UACAjF,EAAA0D,EAAAmC,QACAmjB,EAAAtlB,EAAArK,KACAwK,EAAA7D,EAAA6D,WACAgC,EAAAd,EAAAe,aACAmjB,EAAAlkB,EAAA7B,MAAAc,QAAAlI,SAAAkE,KACAoC,EAAA2C,EAAA7B,MAAAd,eAGAyD,EAAAsjB,kBAAAtjB,EAAAujB,cACAvjB,EAAAujB,YAAAvjB,EAAAsjB,SAGAhnB,EAAA7F,OAAAoH,EAAAmC,SAEAe,cAAA7B,EAAA9K,MACA6M,OAAA1E,EAEAinB,UAAAL,EACAwlB,SAEAznC,QAEAoiB,QAAAtlB,EAAAslB,QAAAtlB,EAAAslB,QAAAhnB,EAAA2I,eAAAjF,EAAAujB,YAAAH,EAAAE,SACAntB,gBAAA6H,EAAA7H,gBAAA6H,EAAA7H,gBAAA6J,EAAA7J,iBAAAitB,EAAAjtB,gBACAK,YAAAwH,EAAAxH,YAAAwH,EAAAxH,YAAAwJ,EAAAxJ,aAAA4sB,EAAA5sB,YACAF,YAAA0H,EAAA1H,YAAA0H,EAAA1H,YAAA0J,EAAA1J,aAAA8sB,EAAA9sB,YACA6B,KAAA6F,EAAA7F,KAAA6F,EAAA7F,cAAA6H,EAAA7H,KAAA6H,EAAA7H,KAAAirB,EAAAjrB,KACAulB,eAAA1f,EAAA0f,eAAA1f,EAAA0f,eAAA1d,EAAA0d,gBAAA0F,EAAA1F,eACAE,WAAA5f,EAAA4f,WAAA5f,EAAA4f,WAAA5d,EAAA4d,YAAAwF,EAAAxF,WACAE,iBAAA9f,EAAA8f,iBAAA9f,EAAA8f,iBAAA9d,EAAA8d,kBAAAsF,EAAAtF,iBACAE,gBAAAhgB,EAAAggB,gBAAAhgB,EAAAggB,gBAAAhe,EAAAge,iBAAAoF,EAAApF,mBAIAngB,EAAAmC,QAAAoB,QAGA9E,EAAAwD,KAAAqjB,EAAA,SAAAW,EAAA1vB,GACA8K,EAAAa,cAAA+jB,EAAA1vB,EAAA6K,IACIC,GAGJA,EAAA0kB,6BAEA7jB,cAAA,SAAA+jB,EAAA1vB,EAAA6K,GACA,IAAAC,EAAArN,KACAmM,EAAA8lB,EAAA9lB,WACAgC,EAAAd,EAAAe,aACA1D,EAAA2C,EAAA7B,MAAAd,MACAs0C,EAAA3xC,EAAA7B,MAAAc,QAAAlI,SAAA6tB,MACAjO,EAAAtZ,EAAAyb,yBAAA5jB,EAAA4L,EAAAxM,KAAAY,aAGA4L,EAAAwY,iBAAAxY,EAAAukB,cACAvkB,EAAAukB,YAAAvkB,EAAAwY,iBAEAxY,EAAAwkB,oBAAAxkB,EAAAykB,iBACAzkB,EAAAykB,eAAAzkB,EAAAwkB,WAGAloB,EAAA7F,OAAAqtB,GAEA/iB,cAAA7B,EAAA9K,MACA4M,OAAA5M,EACA6M,OAAA1E,EAGA2E,QACA9L,EAAA6J,EAAA1C,EAAA+D,QAAAuV,EAAAzgB,EACAG,EAAA0J,EAAA1C,EAAAiE,QAAAqV,EAAAtgB,EAGA+tB,QAAAtlB,EAAAslB,QAAAtlB,EAAAslB,QAAAhnB,EAAA2I,eAAAjF,EAAAujB,YAAArkB,EAAA7B,MAAAc,QAAAlI,SAAAkE,KAAAmpB,SACA9K,OAAAxa,EAAAwa,OAAAxa,EAAAwa,OAAAlc,EAAA2B,sBAAA+B,EAAAukB,YAAAnwB,EAAAy8C,EAAAr4B,QACAriB,gBAAA6H,EAAA7H,gBAAA6H,EAAA7H,gBAAAmG,EAAA2B,sBAAA+B,EAAA+jB,qBAAA3vB,EAAAy8C,EAAA16C,iBACAG,YAAA0H,EAAA1H,YAAA0H,EAAA1H,YAAAgG,EAAA2B,sBAAA+B,EAAAikB,iBAAA7vB,EAAAy8C,EAAAv6C,aACAE,YAAAwH,EAAAxH,YAAAwH,EAAAxH,YAAA8F,EAAA2B,sBAAA+B,EAAAmkB,iBAAA/vB,EAAAy8C,EAAAr6C,aACAynB,WAAAjgB,EAAAigB,WAAAjgB,EAAAigB,WAAA3hB,EAAA2B,sBAAA+B,EAAAie,WAAA7pB,EAAAy8C,EAAA5yB,YAGAuG,UAAAxmB,EAAAwmB,UAAAxmB,EAAAwmB,UAAAloB,EAAA2B,sBAAA+B,EAAAykB,eAAArwB,EAAAy8C,EAAArsB,cAIAV,EAAA5iB,OAAA4jB,KAAA9mB,EAAA8mB,KAAA9mB,EAAA8mB,KAAAxmB,MAAAwlB,EAAA5iB,OAAA9L,IAAAkJ,MAAAwlB,EAAA5iB,OAAA3L,IAEAquB,0BAAA,WACA,IAAAzkB,EAAAtN,KAAAwL,MAAA8B,UACAtB,EAAAhM,KAAAuN,UAEA9C,EAAAwD,KAAAjC,EAAArK,KAAA,SAAAswB,EAAA1vB,GACA,IAAAixB,EAAAvB,EAAA5iB,OACAokB,EAAAhpB,EAAAqpB,YACArpB,EAAAspB,aAAA/nB,EAAArK,KAAAY,MAAA8M,OACAmkB,EACA/oB,EAAAupB,SAAAhoB,EAAArK,KAAAY,MAAA8M,OACAmkB,EAAA/B,SAIA+B,EAAAS,sBAAAzwB,KAAAI,IAAAJ,KAAAC,IAAAgwB,EAAAS,SAAA3wB,EAAA+J,EAAArJ,OAAAqJ,EAAAvJ,MACAyvB,EAAAW,sBAAA3wB,KAAAI,IAAAJ,KAAAC,IAAAgwB,EAAAS,SAAAxwB,EAAA4J,EAAApJ,QAAAoJ,EAAAtJ,KAEAwvB,EAAAY,kBAAA5wB,KAAAI,IAAAJ,KAAAC,IAAAgwB,EAAAY,KAAA9wB,EAAA+J,EAAArJ,OAAAqJ,EAAAvJ,MACAyvB,EAAAc,kBAAA9wB,KAAAI,IAAAJ,KAAAC,IAAAgwB,EAAAY,KAAA3wB,EAAA4J,EAAApJ,QAAAoJ,EAAAtJ,KAGAiuB,EAAA1iB,WAIAmlB,cAAA,SAAAzC,GAEA,IAAA9jB,EAAAnO,KAAAwL,MAAA7J,KAAA+J,SAAAumB,EAAA/iB,eACA/C,EAAA8lB,EAAA9lB,WACA5J,EAAA0vB,EAAA9iB,OACAqkB,EAAAvB,EAAA5iB,OAEAmkB,EAAA7M,OAAAxa,EAAAwoB,YAAAxoB,EAAAwoB,YAAAlqB,EAAA2B,sBAAA+B,EAAAymB,iBAAAryB,EAAAvC,KAAAwL,MAAAc,QAAAlI,SAAA6tB,MAAA0C,aACAnB,EAAAlvB,gBAAA6H,EAAA0oB,qBAAA1oB,EAAA0oB,qBAAApqB,EAAA2B,sBAAA+B,EAAA2mB,0BAAAvyB,EAAAkI,EAAAsqB,cAAAvB,EAAAlvB,kBACAkvB,EAAA/uB,YAAA0H,EAAA6oB,iBAAA7oB,EAAA6oB,iBAAAvqB,EAAA2B,sBAAA+B,EAAA8mB,sBAAA1yB,EAAAkI,EAAAsqB,cAAAvB,EAAA/uB,cACA+uB,EAAA7uB,YAAAwH,EAAA+oB,iBAAA/oB,EAAA+oB,iBAAAzqB,EAAA2B,sBAAA+B,EAAAgnB,sBAAA5yB,EAAAixB,EAAA7uB,cAGA2K,iBAAA,SAAA2iB,GACA,IAAA9jB,EAAAnO,KAAAwL,MAAA7J,KAAA+J,SAAAumB,EAAA/iB,eACA/C,EAAA8lB,EAAA9lB,WACA5J,EAAA0vB,EAAA9iB,OACAqkB,EAAAvB,EAAA5iB,OACA2vC,EAAAh/C,KAAAwL,MAAAc,QAAAlI,SAAA6tB,MAEAuB,EAAA7M,OAAAxa,EAAAwa,OAAAxa,EAAAwa,OAAAlc,EAAA2B,sBAAA+B,EAAAukB,YAAAnwB,EAAAy8C,EAAAr4B,QACA6M,EAAAlvB,gBAAA6H,EAAA7H,gBAAA6H,EAAA7H,gBAAAmG,EAAA2B,sBAAA+B,EAAA+jB,qBAAA3vB,EAAAy8C,EAAA16C,iBACAkvB,EAAA/uB,YAAA0H,EAAA1H,YAAA0H,EAAA1H,YAAAgG,EAAA2B,sBAAA+B,EAAAikB,iBAAA7vB,EAAAy8C,EAAAv6C,aACA+uB,EAAA7uB,YAAAwH,EAAAxH,YAAAwH,EAAAxH,YAAA8F,EAAA2B,sBAAA+B,EAAAmkB,iBAAA/vB,EAAAy8C,EAAAr6C,uCCpKA,IAAAhF,EAAAC,EAAA,QAMAsqB,EAHAzK,MAAAve,UAGAgpB,OA4BArqB,EAAAC,QAjBA,SAAAC,GACA,IAAA4B,EAAA3B,KAAAC,SACAsC,EAAA5C,EAAAgC,EAAA5B,GAEA,QAAAwC,EAAA,IAIAA,GADAZ,EAAAE,OAAA,EAEAF,EAAAu7B,MAEAhT,EAAA3oB,KAAAI,EAAAY,EAAA,KAEAvC,KAAAgC,KACA,MAAAi9C,KAAA,SAAA9+C,EAAAC,EAAAC,GC/BA,IAAA6+C,EAAAt/C,EAAA,QACAyB,EAAAzB,EAAA,QACAwK,EAAAxK,EAAA,QACAixB,EAAAjxB,EAAA,QACAyK,EAAAzK,EAAA,QACAu/C,EAAAv/C,EAAA,QAMAuB,EAHAF,OAAAC,UAGAC,eAqCAtB,EAAAC,QA3BA,SAAAe,EAAAu+C,GACA,IAAAC,EAAAj1C,EAAAvJ,GACAy+C,GAAAD,GAAAh+C,EAAAR,GACA0+C,GAAAF,IAAAC,GAAAzuB,EAAAhwB,GACA2+C,GAAAH,IAAAC,IAAAC,GAAAJ,EAAAt+C,GACA4+C,EAAAJ,GAAAC,GAAAC,GAAAC,EACAj2C,EAAAk2C,EAAAP,EAAAr+C,EAAAgB,OAAAu2B,WACAv2B,EAAA0H,EAAA1H,OAEA,QAAA9B,KAAAc,GACAu+C,IAAAj+C,EAAAI,KAAAV,EAAAd,IACA0/C,IAEA,UAAA1/C,GAEAw/C,IAAA,UAAAx/C,GAAA,UAAAA,IAEAy/C,IAAA,UAAAz/C,GAAA,cAAAA,GAAA,cAAAA,IAEAsK,EAAAtK,EAAA8B,KAEA0H,EAAAxH,KAAAhC,GAGA,OAAAwJ,sCC3CA,IAAA7G,EAAA9C,EAAA,QACAwE,EAAAxE,EAAA,QACA6K,EAAA7K,EAAA,QAEA8C,EAAAyB,KAAA,UACAgD,OACAC,KAAA,UAGAC,QACAC,QACAE,KAAA,SACAC,SAAA,SACAF,GAAA,aAEAG,QACAF,KAAA,SACAC,SAAA,OACAF,GAAA,cAIAK,UACAC,WACAC,MAAA,WAEA,UAEAC,MAAA,SAAAC,EAAArG,GACA,IAAA+6C,EAAA/6C,EAAA+J,SAAA1D,EAAA6L,cAAA9L,OAAA,GACA23C,EAAA/9C,EAAA+J,SAAA1D,EAAA6L,cAAAlS,KAAAqG,EAAAzF,OACA,OAAAm6C,EAAA,MAAA10C,EAAAC,OAAA,KAAAD,EAAAE,OAAA,KAAAw3C,EAAAtlC,EAAA,SAOAva,EAAAC,QAAA,SAAAqI,GAEAA,EAAAC,YAAAu3C,OAAAx3C,EAAA4E,kBAAAnI,QAIAoI,gBAAA5I,EAAAitB,MAKAxkB,OAAA,SAAAO,GACA,IAAAC,EAAArN,KAEAsxB,EADAjkB,EAAAE,UACA5L,KAGA8I,EAAAwD,KAAAqjB,EAAA,SAAAW,EAAA1vB,GACA8K,EAAAa,cAAA+jB,EAAA1vB,EAAA6K,MAOAc,cAAA,SAAA+jB,EAAA1vB,EAAA6K,GACA,IAAAC,EAAArN,KACAgM,EAAAqB,EAAAE,UACApB,EAAA8lB,EAAA9lB,WACAqmB,EAAAnlB,EAAAmkB,cAAAxlB,EAAAoL,SACAmb,EAAAllB,EAAAmkB,cAAAxlB,EAAAqL,SACA/K,EAAAe,EAAAuyC,uBAAA3tB,EAAA1vB,GACAZ,EAAA0L,EAAAe,aAAAzM,KAAAY,GACAs9C,EAAAxyC,EAAA9K,MAEAgB,EAAA6J,EAAAolB,EAAAstB,mBAAA,IAAAttB,EAAAhK,iBAAA,iBAAA7mB,IAAAkxB,IAAAtwB,EAAAs9C,GACAn8C,EAAA0J,EAAAmlB,EAAAhJ,eAAAgJ,EAAA/J,iBAAA7mB,EAAAY,EAAAs9C,GAEA5tB,EAAAc,QAAAP,EACAP,EAAAe,QAAAT,EACAN,EAAAzd,SAAAlI,EACA2lB,EAAA/iB,cAAA2wC,EACA5tB,EAAA9iB,OAAA5M,EACA0vB,EAAA5iB,QACA/K,gBAAAgI,EAAAhI,gBACAG,YAAA6H,EAAA7H,YACAE,YAAA2H,EAAA3H,YACAguB,UAAArmB,EAAAqmB,UACAvG,WAAA9f,EAAA8f,WACAzF,OAAAvZ,EAAA,EAAAd,EAAAqa,OACAsM,KAAA9mB,EAAA8mB,MAAAxmB,MAAAlJ,IAAAkJ,MAAA/I,GACAH,IACAG,KAGAuuB,EAAA1iB,SAMAmlB,cAAA,SAAAzC,GACA,IAAAuB,EAAAvB,EAAA5iB,OACA/C,EAAA2lB,EAAAzd,SAEAgf,EAAAlvB,gBAAAmG,EAAA2I,eAAA9G,EAAAuoB,qBAAApqB,EAAAsqB,cAAAzoB,EAAAhI,kBACAkvB,EAAA/uB,YAAAgG,EAAA2I,eAAA9G,EAAA0oB,iBAAAvqB,EAAAsqB,cAAAzoB,EAAA7H,cACA+uB,EAAA7uB,YAAA8F,EAAA2I,eAAA9G,EAAA4oB,iBAAA5oB,EAAA3H,aACA6uB,EAAA7M,OAAAra,EAAAqa,OAAAra,EAAAqoB,aAMArlB,iBAAA,SAAA2iB,GACA,IAAAuB,EAAAvB,EAAA5iB,OACA/C,EAAA2lB,EAAAzd,SAEAgf,EAAAlvB,gBAAAgI,EAAAhI,gBACAkvB,EAAA/uB,YAAA6H,EAAA7H,YACA+uB,EAAA7uB,YAAA2H,EAAA3H,YACA6uB,EAAA7M,OAAAra,EAAAqa,QAMAi5B,uBAAA,SAAA3tB,EAAA1vB,GACA,IASA6D,EAAAwG,EAAA7M,EARAyL,EADAxL,KACAwL,MAEA2C,EADA3C,EAAA7J,KAAA+J,SAFA1L,KAGAuC,OACA4J,EAAA8lB,EAAA9lB,WACAG,EAAAd,EAAAc,QAAAlI,SAAA6tB,MACAlC,EAAAtlB,EAAA6B,QAAAyjB,QACApuB,EAAAwM,EAAAxM,KAAAY,GACAD,KAIA8N,GACA5E,QACAu0C,UAAAx9C,EACA4L,UACA0F,aAhBA7T,KAgBAuC,OAGAqQ,GACA,kBACA,cACA,cACA,uBACA,mBACA,mBACA,cACA,YACA,cAGA,IAAAxM,EAAA,EAAAwG,EAAAgG,EAAA/Q,OAAkCuE,EAAAwG,IAAUxG,EAE5C9D,EADAvC,EAAA6S,EAAAxM,IACA2pB,GACA5jB,EAAApM,GACAoO,EAAApO,GACAuM,EAAAvM,IACAqQ,EAAA7N,GAWA,OAPAD,EAAAqkB,OAAAoJ,GACA5jB,EAAAwa,OACAhlB,IAAAyY,SACAjM,EAAAwY,OACAra,EAAAqa,QACAvW,EAAA7N,GAEAD,4BChLA,IAAA09C,EAAApgD,EAAA,QACAqgD,EAAArgD,EAAA,QACAsgD,EAAAtgD,EAAA,QAGAugD,EAAAD,KAAAf,aAmBAA,EAAAgB,EAAAF,EAAAE,GAAAH,EAEAngD,EAAAC,QAAAq/C,qCCxBA,IAAAz8C,EAAA9C,EAAA,QACA+C,EAAA/C,EAAA,QACA6K,EAAA7K,EAAA,QACAygB,EAAAzgB,EAAA,QA8DA,SAAAwgD,EAAAp1C,GACA,IACA5E,EAAAwG,EADAjB,KAGA,IAAAvF,EAAA,EAAAwG,EAAA5B,EAAAnJ,OAAiCuE,EAAAwG,IAAUxG,EAC3CuF,EAAA5J,KAAAiJ,EAAA5E,GAAA2B,OAGA,OAAA4D,EAGA,SAAA00C,EAAA31C,EAAAnI,EAAA45C,GACA,IAAAmE,EAAA51C,EAAAue,gBAAA1mB,GASA,OAPA45C,IAEAmE,GADA,IAAA/9C,GACAmI,EAAAue,gBAAA,GAAAq3B,GAAA,GAEAA,EAAA51C,EAAAue,gBAAA1mB,EAAA,OAGA+9C,EAjFA59C,EAAAyB,KAAA,SACAyG,WACAnD,SAAA,OACAihB,UAGA7d,WACAD,WACA6V,MAAA,qBACA5a,UAAA,EACA06C,cACAC,mBACAC,aACAC,eAAA,GACAC,cAAA,EACAC,cAAA,mBACAC,sBACAC,yBAAA,EACA3E,mBACApwB,cACAE,iBAAA,GAIA80B,YAEAn2C,WAGAo2C,YAAA,GAGAC,WAAA,IAGAt1B,SACA3nB,IAAA,EACAE,OAAA,IAKA8G,OACAC,eACAi2C,YAAA,EACA5N,YAAA,GACA6N,UACAx1B,QAAA,EACA3F,WACApb,WACAipC,YACAuN,gBAAA,EACAC,YAAA,EAEAhsC,SAAAgL,EAAAS,WAAAxe,OACAwtC,SACAI,YA4BArwC,EAAAC,QAAA,SAAAqI,GAEA,SAAAm5C,EAAAlxC,EAAAkiC,EAAA5wB,GACA,OAAAjX,EAAAL,QAAAkoC,GACA7nC,EAAA+Z,YAAApU,EAAAsR,EAAA4wB,GACAliC,EAAAqU,YAAA6tB,GAAAvvC,MAGA,SAAAw+C,EAAAj1C,GACA,IAAA8G,EAAA3I,EAAA2I,eACAkN,EAAA5d,EAAA6B,OACAvC,EAAAoR,EAAA9G,EAAA0U,SAAAV,EAAAc,iBACAlP,EAAAkB,EAAA9G,EAAA+U,UAAAf,EAAAgB,kBACAG,EAAArO,EAAA9G,EAAAiV,WAAAjB,EAAAkB,mBAEA,OACAxf,OACAkQ,QACAuP,SACAC,KAAAjX,EAAAkX,WAAA3f,EAAAkQ,EAAAuP,IAIA,SAAA+/B,EAAAl1C,GACA,OAAA7B,EAAA6B,QAAAojB,aACAjlB,EAAA2I,eAAA9G,EAAA20C,WAAA,KACAx2C,EAAA2I,eAAA9G,EAAA0U,SAAAte,EAAA6B,OAAA6c,kBAGAjZ,EAAA4f,MAAAplB,EAAAiC,QAOA68C,WAAA,WAEA,OACA19C,KAFA/D,KAEAktB,aAAA,EACAlpB,IAHAhE,KAGAmtB,YAAA,EACAlpB,MAJAjE,KAIAotB,cAAA,EACAlpB,OALAlE,KAKAqtB,eAAA,IAQA4lB,SAAA,WACA,OAAAjzC,KAAAopB,QAOA5V,kBAAA,WACA,IAAAxI,EAAAhL,KAAAsM,QAAAtB,MAWA,QAAAjL,SAVAiL,EAAA8kC,QACA9kC,EAAA8kC,OACAllC,cAAA,IAGAI,EAAAklC,QACAllC,EAAAklC,OACAtlC,aAGAI,EACA,UAAAjL,GAAA,UAAAA,aACAiL,EAAA8kC,MAAA/vC,KACAiL,EAAA8kC,MAAA/vC,GAAAiL,EAAAjL,aAEAiL,EAAAklC,MAAAnwC,KACAiL,EAAAklC,MAAAnwC,GAAAiL,EAAAjL,MAKAysB,aAAA,WACA/hB,EAAA4K,SAAArV,KAAAsM,QAAAkgB,cAAAxsB,QAEA6M,OAAA,SAAAiW,EAAAC,EAAA0J,GACA,IACArmB,EAAAwG,EAAAjB,EAAA5D,EAAAiD,EAAAsnC,EADAjlC,EAAArN,KAwDA,IApDAqN,EAAAmf,eAGAnf,EAAAyV,WACAzV,EAAA0V,YACA1V,EAAAof,QAAAhiB,EAAA7F,QACAb,KAAA,EACAE,MAAA,EACAD,IAAA,EACAE,OAAA,GACIuoB,GACJpf,EAAAq0C,iBAAAr0C,EAAAq0C,qBAGAr0C,EAAAqf,sBACArf,EAAAuV,gBACAvV,EAAAsf,qBAGAtf,EAAAs0C,mBACAt0C,EAAA6V,sBACA7V,EAAAu0C,kBASAv0C,EAAAw0C,mBAIA72C,EAAAqC,EAAAkb,iBAEAlb,EAAAy0C,kBAEAz0C,EAAA00C,8BAKAp2C,EAAA0B,EAAAuW,qBAAA5Y,IAAAqC,EAAArC,MAEAqC,EAAA20C,6BAEA30C,EAAArC,MAAAW,EAKAvF,EAAA,EAAAwG,EAAAjB,EAAA9J,OAAoCuE,EAAAwG,IAAUxG,EAC9C2B,EAAA4D,EAAAvF,IACAksC,EAAAtnC,EAAA5E,IAOAksC,EAAAvqC,QALAiD,EAAAjJ,KAAAuwC,GACAvqC,QACAmoC,WAoBA,OAbA7iC,EAAA+b,OAAApe,EAGAqC,EAAA40C,8BACA50C,EAAA60C,wBACA70C,EAAA80C,6BAEA90C,EAAA0f,YACA1f,EAAAyW,MACAzW,EAAA2f,WAEA3f,EAAA4f,cAEA5f,EAAAI,SAGAwf,YAAA,WACAxiB,EAAA4K,SAAArV,KAAAsM,QAAA2gB,aAAAjtB,QAKA0sB,oBAAA,WACAjiB,EAAA4K,SAAArV,KAAAsM,QAAAogB,qBAAA1sB,QAEA4iB,cAAA,WACA,IAAAvV,EAAArN,KAEAqN,EAAA4a,gBAEA5a,EAAAtK,MAAAsK,EAAAyV,SACAzV,EAAAtJ,KAAA,EACAsJ,EAAApJ,MAAAoJ,EAAAtK,QAEAsK,EAAAvJ,OAAAuJ,EAAA0V,UAGA1V,EAAArJ,IAAA,EACAqJ,EAAAnJ,OAAAmJ,EAAAvJ,QAIAuJ,EAAA6f,YAAA,EACA7f,EAAA8f,WAAA,EACA9f,EAAA+f,aAAA,EACA/f,EAAAggB,cAAA,GAEAV,mBAAA,WACAliB,EAAA4K,SAAArV,KAAAsM,QAAAqgB,oBAAA3sB,QAIA2hD,iBAAA,WACAl3C,EAAA4K,SAAArV,KAAAsM,QAAAq1C,kBAAA3hD,QAEAkjB,oBAAAzY,EAAA0C,KACAy0C,gBAAA,WACAn3C,EAAA4K,SAAArV,KAAAsM,QAAAs1C,iBAAA5hD,QAIA6hD,iBAAA,WACAp3C,EAAA4K,SAAArV,KAAAsM,QAAAu1C,kBAAA7hD,QAEAuoB,WAAA9d,EAAA0C,KACA20C,gBAAA,WACAr3C,EAAA4K,SAAArV,KAAAsM,QAAAw1C,iBAAA9hD,QAGA+hD,4BAAA,WACAt3C,EAAA4K,SAAArV,KAAAsM,QAAAy1C,6BAAA/hD,QAEA4jB,qBAAA,WACA,IAEAf,EAFA7iB,KAEAsM,QAAAtB,MAFAhL,KAGAgL,MAHAhL,KAGAgL,MAAAe,IAAA8W,EAAAkwB,cAAAlwB,EAAAxN,SAAArV,OAEAgiD,2BAAA,WACAv3C,EAAA4K,SAAArV,KAAAsM,QAAA01C,4BAAAhiD,QAKAiiD,4BAAA,WACAx3C,EAAA4K,SAAArV,KAAAsM,QAAA21C,6BAAAjiD,QAEAkiD,sBAAA,WACA,IAAA70C,EAAArN,KACAoQ,EAAA/C,EAAArI,IACA6d,EAAAxV,EAAAf,QAAAtB,MACAW,EAAAy0C,EAAA/yC,EAAA+b,QAIAg5B,EAAAb,EAAA1+B,GACAzS,EAAAsR,KAAA0gC,EAAA1gC,KAEA,IAAA2gC,EAAAx/B,EAAAq+B,aAAA,EAEA,GAAAv1C,EAAA9J,QAAAwL,EAAAf,QAAA1B,SAAAyC,EAAA4a,eASA,IARA,IAEAsrB,EAFA+O,EAAA73C,EAAA+Z,YAAApU,EAAAgyC,EAAA1gC,KAAA/V,EAAA0B,EAAAq0C,kBACAx6B,EAAAo7B,EAIAC,EAAAl1C,EAAA4b,gBAAA,GAAA5b,EAAA4b,gBAAA,KAGA/B,EAAAq7B,GAAAF,EAAAx/B,EAAAywB,aAAA,CACA,IAAA5uB,EAAAja,EAAA4oC,UAAAgP,GAIA,GAHA9O,EAAA/vC,KAAA6hB,IAAAX,GACAlhB,KAAA0hB,IAAAR,GAEA49B,EAAAj1C,EAAA0V,UAAA,CAEAs/B,IACA,MAGAA,IACAn7B,EAAAqsB,EAAA+O,EAIAj1C,EAAAg1C,iBAEAF,2BAAA,WACA13C,EAAA4K,SAAArV,KAAAsM,QAAA61C,4BAAAniD,QAKA+sB,UAAA,WACAtiB,EAAA4K,SAAArV,KAAAsM,QAAAygB,WAAA/sB,QAEA8jB,IAAA,WACA,IAAAzW,EAAArN,KAEAyN,EAAAJ,EAAAI,SACA1K,MAAA,EACAe,OAAA,GAGA6H,EAAAy0C,EAAA/yC,EAAA+b,QAEA5b,EAAAH,EAAAf,QACAuW,EAAArV,EAAAxC,MACAw3C,EAAAh1C,EAAAuzC,WACA16B,EAAA7Y,EAAA3C,UACAD,EAAA4C,EAAA5C,QACAqd,EAAA5a,EAAA4a,eAEAm6B,EAAAb,EAAA1+B,GACA69B,EAAAlzC,EAAA3C,UAAA61C,eAkBA,GAbAjzC,EAAA1K,MAFAklB,EAEA5a,EAAAo1C,cAAAp1C,EAAAyV,SAAAzV,EAAAof,QAAA1oB,KAAAsJ,EAAAof,QAAAxoB,MAAAoJ,EAAAyV,SAEAlY,GAAAyb,EAAAo6B,UAAAC,EAAA,EAKAjzC,EAAA3J,OADAmkB,EACArd,GAAAyb,EAAAo6B,UAAAC,EAAA,EAEArzC,EAAA0V,UAIAy/B,EAAA53C,WAAA,CACA,IAEA83C,EAFAlB,EAAAgB,GACA/3C,EAAA6B,QAAAujB,UAAA2yB,EAAA72B,SACA7nB,OAEAmkB,EACAxa,EAAA3J,QAAA4+C,EAEAj1C,EAAA1K,OAAA2/C,EAKA,GAAA7/B,EAAAjY,WAAA,CACA,IAAA+3C,EAAAl4C,EAAA+Z,YAAAnX,EAAArI,IAAAo9C,EAAA1gC,KAAA/V,EAAA0B,EAAAq0C,kBACAkB,EAAAn4C,EAAAo4C,mBAAAl3C,GACAm3C,EAAA,GAAAV,EAAApgD,KACA+gD,EAAA11C,EAAAf,QAAAtB,MAAA2gB,QAEA,GAAA1D,EAAA,CAEA5a,EAAA21C,kBAAAL,EAEA,IAAAj+B,EAAAja,EAAA4oC,UAAAhmC,EAAAg1C,eACA9O,EAAA/vC,KAAA6hB,IAAAX,GAIAu+B,EAHAz/C,KAAA0hB,IAAAR,GAGAi+B,EACAP,EAAApgD,KAAA4gD,EACAE,GAAAF,EAAA,GACAE,EAEAr1C,EAAA3J,OAAAN,KAAAC,IAAA4J,EAAA0V,UAAAtV,EAAA3J,OAAAm/C,EAAAF,GAEA11C,EAAArI,IAAA0c,KAAA0gC,EAAA1gC,KACA,IAAAwhC,EAAA5B,EAAAj0C,EAAArI,IAAA2G,EAAA,GAAAy2C,EAAA1gC,MACAyhC,EAAA7B,EAAAj0C,EAAArI,IAAA2G,IAAA9J,OAAA,GAAAugD,EAAA1gC,MAIA,IAAArU,EAAAg1C,eACAh1C,EAAA6f,YAAA,WAAA1f,EAAA/F,SAAA8rC,EAAA2P,EAAA,EAAA3P,EAAAuP,EAAA,EACAz1C,EAAA+f,aAAA,WAAA5f,EAAA/F,SAAA8rC,EAAAuP,EAAA,EAAAvP,EAAA4P,EAAA,IAEA91C,EAAA6f,YAAAg2B,EAAA,IACA71C,EAAA+f,aAAA+1B,EAAA,UAKAtgC,EAAAs+B,OACAwB,EAAA,EAIAA,GAAAI,EAAAD,EAGAr1C,EAAA1K,MAAAS,KAAAC,IAAA4J,EAAAyV,SAAArV,EAAA1K,MAAA4/C,GAEAt1C,EAAA8f,WAAAi1B,EAAApgD,KAAA,EACAqL,EAAAggB,cAAA+0B,EAAApgD,KAAA,EAIAqL,EAAA+1C,gBAEA/1C,EAAAtK,MAAA0K,EAAA1K,MACAsK,EAAAvJ,OAAA2J,EAAA3J,QAOAs/C,cAAA,WACA,IAAA/1C,EAAArN,KACAqN,EAAAof,UACApf,EAAA6f,YAAA1pB,KAAAI,IAAAyJ,EAAA6f,YAAA7f,EAAAof,QAAA1oB,KAAA,GACAsJ,EAAA8f,WAAA3pB,KAAAI,IAAAyJ,EAAA8f,WAAA9f,EAAAof,QAAAzoB,IAAA,GACAqJ,EAAA+f,aAAA5pB,KAAAI,IAAAyJ,EAAA+f,aAAA/f,EAAAof,QAAAxoB,MAAA,GACAoJ,EAAAggB,cAAA7pB,KAAAI,IAAAyJ,EAAAggB,cAAAhgB,EAAAof,QAAAvoB,OAAA,KAIA8oB,SAAA,WACAviB,EAAA4K,SAAArV,KAAAsM,QAAA0gB,UAAAhtB,QAIAioB,aAAA,WACA,cAAAjoB,KAAAsM,QAAA7E,UAAA,WAAAzH,KAAAsM,QAAA7E,UAEAg7C,YAAA,WACA,OAAAziD,KAAAsM,QAAAmf,WAIAlI,cAAA,SAAAD,GAEA,GAAA7Y,EAAAyL,cAAAoN,GACA,OAAAuP,IAGA,oBAAAvP,IAAAoY,SAAApY,GACA,OAAAuP,IAGA,GAAAvP,EACA,GAAAtjB,KAAAioB,gBACA,YAAA3E,EAAA/f,EACA,OAAAvD,KAAAujB,cAAAD,EAAA/f,QAEK,YAAA+f,EAAA5f,EACL,OAAA1D,KAAAujB,cAAAD,EAAA5f,GAKA,OAAA4f,GAQAO,iBAAApZ,EAAA0C,KASAqb,iBAAA/d,EAAA0C,KAOA+b,iBAAAze,EAAA0C,KAMA8b,gBAAA,SAAA1mB,GACA,IAAA8K,EAAArN,KACA0oB,EAAArb,EAAAf,QAAAoc,OACA,GAAArb,EAAA4a,eAAA,CACA,IACAs6B,GADAl1C,EAAAtK,OAAAsK,EAAA6f,YAAA7f,EAAA+f,eACA5pB,KAAAI,IAAAyJ,EAAA+b,OAAAvnB,QAAA6mB,EAAA,QACAS,EAAAo5B,EAAAhgD,EAAA8K,EAAA6f,YAQA,OANAxE,IACAS,GAAAo5B,EAAA,GAGAl1C,EAAAtJ,KAAAP,KAAA+b,MAAA4J,IACA9b,EAAAo1C,cAAAp1C,EAAAof,QAAA1oB,KAAA,GAGA,IAAAs/C,EAAAh2C,EAAAvJ,QAAAuJ,EAAA8f,WAAA9f,EAAAggB,eACA,OAAAhgB,EAAArJ,IAAAzB,GAAA8gD,GAAAh2C,EAAA+b,OAAAvnB,OAAA,KAOAi+C,mBAAA,SAAAwD,GACA,IAAAj2C,EAAArN,KACA,GAAAqN,EAAA4a,eAAA,CACA,IACAs7B,GADAl2C,EAAAtK,OAAAsK,EAAA6f,YAAA7f,EAAA+f,eACAk2B,EAAAj2C,EAAA6f,YAIA,OAFA7f,EAAAtJ,KAAAP,KAAA+b,MAAAgkC,IACAl2C,EAAAo1C,cAAAp1C,EAAAof,QAAA1oB,KAAA,GAGA,OAAAsJ,EAAArJ,IAAAs/C,EAAAj2C,EAAAvJ,QAOAylB,aAAA,WACA,OAAAvpB,KAAAwoB,iBAAAxoB,KAAAwjD,iBAGAA,aAAA,WACA,IACA//C,EADAzD,KACAyD,IACAG,EAFA5D,KAEA4D,IAEA,OAJA5D,KAIAiL,YAAA,EACAxH,EAAA,GAAAG,EAAA,EAAAA,EACAH,EAAA,GAAAG,EAAA,EAAAH,EACA,GAOAggD,UAAA,SAAAz4C,GACA,IAAA04C,EASAt9C,EAAAksC,EAGAyJ,EAXA1uC,EAAArN,KACAioB,EAAA5a,EAAA4a,eACA07B,EAAAt2C,EAAAf,QAAAtB,MAAA8kC,MACA8T,EAAA54C,EAAAnJ,OACAgiD,EAAAp5C,EAAA4oC,UAAAhmC,EAAAg1C,eACA9O,EAAA/vC,KAAA6hB,IAAAw+B,GACAC,EAAAz2C,EAAA21C,kBAAAzP,EACAhqC,KAuBA,IAlBAo6C,EAAAjgC,gBACAq4B,EAAA4H,EAAAjgC,eAGAuE,IACAy7B,MAEAI,EAAAH,EAAAvC,iBAAAwC,EAAAv2C,EAAAtK,OAAAsK,EAAA6f,YAAA7f,EAAA+f,gBACAs2B,EAAA,EAAAlgD,KAAAsO,OAAAgyC,EAAAH,EAAAvC,iBAAAwC,GAAAv2C,EAAAtK,OAAAsK,EAAA6f,YAAA7f,EAAA+f,iBAKA2uB,GAAA6H,EAAA7H,IACA2H,EAAAlgD,KAAAI,IAAA8/C,EAAAlgD,KAAAsO,MAAA8xC,EAAA7H,MAIA31C,EAAA,EAAcA,EAAAw9C,EAAex9C,IAC7BksC,EAAAtnC,EAAA5E,IAGAs9C,EAAA,GAAAt9C,EAAAs9C,EAAA,GAAAt9C,EAAAs9C,GAAA,GAAAt9C,EAAAs9C,GAAAE,IACAx9C,IAAAw9C,EAAA,UAEAtR,EAAAvqC,MAEAwB,EAAAxH,KAAAuwC,GAEA,OAAA/oC,GAKA1E,KAAA,SAAAyI,GACA,IAAAD,EAAArN,KACAsM,EAAAe,EAAAf,QACA,GAAAA,EAAA1B,QAAA,CAIA,IAAAwF,EAAA/C,EAAArI,IACAsb,EAAA5d,EAAA6B,OACAo/C,EAAAr3C,EAAAtB,MAAA8kC,MACAiU,EAAAz3C,EAAAtB,MAAAklC,OAAAyT,EACA94C,EAAAyB,EAAAzB,UACAk2C,EAAAz0C,EAAAy0C,WAEAiD,EAAA,IAAA32C,EAAAg1C,cACAp6B,EAAA5a,EAAA4a,eAEAjd,EAAA24C,EAAA9P,SAAAxmC,EAAAo2C,UAAAp2C,EAAA4lC,YAAA5lC,EAAA4lC,WACApsB,EAAApc,EAAA2I,eAAAuwC,EAAA78B,UAAAxG,EAAAyG,kBACAq7B,EAAAb,EAAAoC,GACAM,EAAAx5C,EAAA2I,eAAA2wC,EAAAj9B,UAAAxG,EAAAyG,kBACAm9B,EAAA3C,EAAAwC,GAEAI,EAAAt5C,EAAA41C,UAAA51C,EAAA61C,eAAA,EAEA0D,EAAA35C,EAAA2I,eAAA2tC,EAAAj6B,UAAAxG,EAAAyG,kBACAs9B,EAAA9C,EAAAR,GACAuD,EAAA75C,EAAA6B,QAAAujB,UAAAkxB,EAAAp1B,SACAk4B,EAAAp5C,EAAA4oC,UAAAhmC,EAAAg1C,eAEAkC,KAEAC,EAAAn3C,EAAAf,QAAAzB,UAAAhF,UACA4+C,EAAA,UAAAn4C,EAAA7E,SAAA4F,EAAApJ,MAAAoJ,EAAApJ,MAAAugD,EAAAL,EACAO,EAAA,UAAAp4C,EAAA7E,SAAA4F,EAAApJ,MAAAkgD,EAAA92C,EAAApJ,MACA0gD,EAAA,WAAAr4C,EAAA7E,SAAA4F,EAAArJ,IAAAwgD,EAAAn3C,EAAAnJ,OAAAigD,EAAAK,EACAI,EAAA,WAAAt4C,EAAA7E,SAAA4F,EAAArJ,IAAAwgD,EAAAL,EAAA92C,EAAAnJ,OAAAsgD,EAqKA,GAnKA/5C,EAAAwD,KAAAjD,EAAA,SAAAsnC,EAAA/vC,GAEA,IAAAkI,EAAAyL,cAAAo8B,EAAAvqC,OAAA,CAIA,IACAlC,EAAAg/C,EAAA94B,EAAAE,EAeA64B,EAAAC,EAAAC,EAAAC,EAAAhiD,EAAAE,EAAAD,EAAAE,EAAA8hD,EAAAC,EAhBAp9C,EAAAuqC,EAAAvqC,MAEAxF,IAAA8K,EAAA+3C,eAAA94C,EAAAoc,SAAA7d,EAAAsxC,iBAEAt2C,EAAAgF,EAAA81C,cACAkE,EAAAh6C,EAAA+1C,cACA70B,EAAAlhB,EAAAg2C,mBACA50B,EAAAphB,EAAAi2C,2BAEAj7C,EAAA4E,EAAA2B,sBAAAvB,EAAAhF,UAAAtD,GACAsiD,EAAAp6C,EAAA2B,sBAAAvB,EAAA4V,MAAAle,GACAwpB,EAAAthB,EAAA2I,eAAAvI,EAAAkhB,WAAAzL,EAAAyL,YACAE,EAAAxhB,EAAA2I,eAAAvI,EAAAohB,iBAAA3L,EAAA2L,mBAKA,IAAA7E,EAAA,SACAC,EAAA,SACA07B,EAAAY,EAAAh4B,QAEA,GAAA1D,EAAA,CACA,IAAAo9B,EAAAlB,EAAApB,EAEA,WAAAz2C,EAAA7E,UAEA4f,EAAA28B,EAAA,eACA58B,EAAA48B,EAAA,iBACAmB,EAAA93C,EAAArJ,IAAAqhD,IAGAh+B,EAAA28B,EAAA,kBACA58B,EAAA48B,EAAA,gBACAmB,EAAA93C,EAAAnJ,OAAAmhD,GAGA,IAAAC,EAAAjF,EAAAhzC,EAAA9K,EAAAsI,EAAAsxC,iBAAAnxC,EAAAnJ,OAAA,GACAyjD,EAAAj4C,EAAAtJ,OACA8gD,EAAA,iBAEAS,GAAA76C,EAAA86C,WAAA1/C,GAEAq/C,EAAA73C,EAAA4b,gBAAA1mB,GAAAohD,EAAAtC,YAEAyD,EAAAE,EAAA/hD,EAAAC,EAAAoiD,EACAP,EAAAJ,EACAM,EAAAL,EACAzhD,EAAAmK,EAAAtJ,IACAZ,EAAAkK,EAAApJ,OAAAsgD,MACK,CACL,IACAgB,EADAC,EAAA,SAAAn5C,EAAA7E,SAGAk8C,EAAAxC,QACA/5B,EAAAq+B,EAAA,eACAD,EAAAzC,IAEA37B,EAAAq+B,EAAA,eACAD,EAAArB,EAAApB,GAGAmC,EAAAO,EAAAp4C,EAAApJ,MAAAuhD,EAAAn4C,EAAAtJ,KAAAyhD,EAEA,IAAAE,EAAArF,EAAAhzC,EAAA9K,EAAAsI,EAAAsxC,iBAAAnxC,EAAAnJ,OAAA,GACA6jD,EAAAr4C,EAAArJ,MACA6gD,EAAA,iBAEAa,GAAAj7C,EAAA86C,WAAA1/C,GAEAs/C,EAAA93C,EAAA4b,gBAAA1mB,GAAAohD,EAAAtC,YAEAyD,EAAAL,EACAO,EAAAN,EACAzhD,EAAAqK,EAAAvJ,KACAb,EAAAoK,EAAArJ,MAAAugD,EACAO,EAAAE,EAAA9hD,EAAAC,EAAAsiD,EAGAnB,EAAAxiD,MACA+iD,MACAC,MACAC,MACAC,MACAhiD,KACAE,KACAD,KACAE,KACA8hD,SACAC,SACAQ,QAAA9/C,EACA+/C,QAAAf,EACAgB,aAAA95B,EACA+5B,mBAAA75B,EACAwsB,UAAA,EAAAoL,EACA97C,QACAmoC,MAAAoC,EAAApC,MACA7oB,eACAD,iBAKA3c,EAAAwD,KAAAs2C,EAAA,SAAAwB,GA0BA,GAzBAl7C,EAAAD,UACAwF,EAAA4W,OACA5W,EAAAvK,UAAAkgD,EAAAJ,QACAv1C,EAAAxK,YAAAmgD,EAAAH,QACAx1C,EAAAqe,cACAre,EAAAqe,YAAAs3B,EAAAF,cACAz1C,EAAA4b,eAAA+5B,EAAAD,oBAGA11C,EAAA1K,YAEAmF,EAAA41C,YACArwC,EAAAjK,OAAA4/C,EAAAjB,IAAAiB,EAAAhB,KACA30C,EAAA/J,OAAA0/C,EAAAf,IAAAe,EAAAd,MAGAp6C,EAAA21C,kBACApwC,EAAAjK,OAAA4/C,EAAA9iD,GAAA8iD,EAAA5iD,IACAiN,EAAA/J,OAAA0/C,EAAA7iD,GAAA6iD,EAAA3iD,KAGAgN,EAAA7J,SACA6J,EAAAkX,WAGAq8B,EAAA/4C,QAAA,CAEAwF,EAAA4W,OACA5W,EAAA6W,UAAA8+B,EAAAb,OAAAa,EAAAZ,QACA/0C,EAAA6N,OAAA8nC,EAAAtN,UACAroC,EAAAsR,KAAAqkC,EAAA7V,MAAAgU,EAAAxiC,KAAA0gC,EAAA1gC,KACAtR,EAAAzK,UAAAogD,EAAA7V,MAAA+T,EAAAp9B,EACAzW,EAAAiX,aAAA0+B,EAAA1+B,aACAjX,EAAAgX,UAAA2+B,EAAA3+B,UAEA,IAAArf,EAAAg+C,EAAAh+C,MACA,GAAA0C,EAAAL,QAAArC,GAKA,IAJA,IAAAi+C,EAAAj+C,EAAAlG,OACAo/C,EAAA,IAAAmB,EAAApgD,KACA0B,EAAA2J,EAAA4a,eAAA,GAAAg5B,GAAA+E,EAAA,KAEA5/C,EAAA,EAAqBA,EAAA4/C,IAAe5/C,EAEpCgK,EAAA8R,SAAA,GAAAna,EAAA3B,GAAA,EAAA1C,GAEAA,GAAAu9C,OAGA7wC,EAAA8R,SAAAna,EAAA,KAEAqI,EAAAkX,aAIAy5B,EAAAn2C,QAAA,CAEA,IAAAq7C,EACAC,EACAzN,EAAA,EACA0N,EAAA3E,EAAAT,GAAA,EAEA,GAAA94B,EACAg+B,EAAA54C,EAAAtJ,MAAAsJ,EAAApJ,MAAAoJ,EAAAtJ,MAAA,EACAmiD,EAAA,WAAA55C,EAAA7E,SACA4F,EAAAnJ,OAAAiiD,EAAA7B,EAAApgD,OACAmJ,EAAArJ,IAAAmiD,EAAA7B,EAAAtgD,QACK,CACL,IAAAyhD,EAAA,SAAAn5C,EAAA7E,SACAw+C,EAAAR,EACAp4C,EAAAtJ,KAAAoiD,EAAA7B,EAAAtgD,IACAqJ,EAAApJ,MAAAkiD,EAAA7B,EAAAtgD,IACAkiD,EAAA74C,EAAArJ,KAAAqJ,EAAAnJ,OAAAmJ,EAAArJ,KAAA,EACAy0C,EAAAgN,GAAA,GAAAjiD,KAAA8H,GAAA,GAAA9H,KAAA8H,GAGA8E,EAAA4W,OACA5W,EAAA6W,UAAAg/B,EAAAC,GACA91C,EAAA6N,OAAAw6B,GACAroC,EAAAgX,UAAA,SACAhX,EAAAiX,aAAA,SACAjX,EAAAzK,UAAAy+C,EACAh0C,EAAAsR,KAAA2iC,EAAA3iC,KACAtR,EAAA8R,SAAA6+B,EAAAC,YAAA,KACA5wC,EAAAkX,UAGA,GAAAzc,EAAA01C,WAAA,CAEAnwC,EAAAvK,UAAA4E,EAAA2B,sBAAAvB,EAAAhF,UAAA,GACAuK,EAAAxK,YAAA6E,EAAA2B,sBAAAvB,EAAA4V,MAAA,GACA,IAAAxd,EAAAoK,EAAAtJ,KACAb,EAAAmK,EAAApJ,MAAAugD,EACArhD,EAAAkK,EAAArJ,IACAZ,EAAAiK,EAAAnJ,OAAAsgD,EAEAe,EAAA96C,EAAA86C,WAAAn1C,EAAAvK,WACAoiB,GACA9kB,EAAAC,EAAA,QAAAkJ,EAAA7E,SAAA4F,EAAAnJ,OAAAmJ,EAAArJ,IACAb,GAAAoiD,EACAniD,GAAAmiD,IAEAtiD,EAAAC,EAAA,SAAAoJ,EAAA7E,SAAA4F,EAAApJ,MAAAoJ,EAAAtJ,KACAd,GAAAsiD,EACAriD,GAAAqiD,GAGAn1C,EAAA1K,YACA0K,EAAAjK,OAAAlD,EAAAE,GACAiN,EAAA/J,OAAAnD,EAAAE,GACAgN,EAAA7J,qCCn6BA,IAAA5F,EAAAf,EAAA,QACA0K,EAAA1K,EAAA,QACAgB,EAAAhB,EAAA,QA8BAwmD,KACAA,EAZA,yBAYAA,EAXA,yBAYAA,EAXA,sBAWAA,EAVA,uBAWAA,EAVA,uBAUAA,EATA,uBAUAA,EATA,8BASAA,EARA,wBASAA,EARA,2BASAA,EAjCA,sBAiCAA,EAhCA,kBAiCAA,EApBA,wBAoBAA,EAhCA,oBAiCAA,EApBA,qBAoBAA,EAhCA,iBAiCAA,EAhCA,kBAgCAA,EA/BA,qBAgCAA,EA/BA,gBA+BAA,EA9BA,mBA+BAA,EA9BA,mBA8BAA,EA7BA,mBA8BAA,EA7BA,gBA6BAA,EA5BA,mBA6BAA,EA5BA,uBA0CAvmD,EAAAC,QALA,SAAAe,GACA,OAAAD,EAAAC,IACAyJ,EAAAzJ,EAAAgB,WAAAukD,EAAAzlD,EAAAE,2BCxDA,IAAAwlD,EAAAzmD,EAAA,QA2BAC,EAAAC,QAJA,SAAAe,GACA,aAAAA,EAAA,GAAAwlD,EAAAxlD,0BCxBA,IAAAylD,EAAA1mD,EAAA,QACA2mD,EAAA3mD,EAAA,QACA4mD,EAAA5mD,EAAA,QACA6mD,EAAA7mD,EAAA,QACA8mD,EAAA9mD,EAAA,QASA,SAAA8B,EAAAqI,GACA,IAAAxH,GAAA,EACAV,EAAA,MAAAkI,EAAA,EAAAA,EAAAlI,OAGA,IADA7B,KAAAgK,UACAzH,EAAAV,GAAA,CACA,IAAAoI,EAAAF,EAAAxH,GACAvC,KAAAiC,IAAAgI,EAAA,GAAAA,EAAA,KAKAvI,EAAAR,UAAA8I,MAAAs8C,EACA5kD,EAAAR,UAAAgJ,OAAAq8C,EACA7kD,EAAAR,UAAAoI,IAAAk9C,EACA9kD,EAAAR,UAAAuB,IAAAgkD,EACA/kD,EAAAR,UAAAe,IAAAykD,EAEA7mD,EAAAC,QAAA4B,wBC/BA,IAAAilD,EAAA/mD,EAAA,QACAi6B,EAAAj6B,EAAA,QACAgnD,EAAAhnD,EAAA,QACAinD,EAAAjnD,EAAA,QACAitC,EAAAjtC,EAAA,QACAwK,EAAAxK,EAAA,QACAixB,EAAAjxB,EAAA,QACAu/C,EAAAv/C,EAAA,QAMAs7B,EAAA,qBACA4rB,EAAA,iBACAC,EAAA,kBAMA5lD,EAHAF,OAAAC,UAGAC,eA6DAtB,EAAAC,QA7CA,SAAA+I,EAAAsxB,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAysB,EAAA58C,EAAAvB,GACAo+C,EAAA78C,EAAA+vB,GACA+sB,EAAAF,EAAAF,EAAAja,EAAAhkC,GACAs+C,EAAAF,EAAAH,EAAAja,EAAA1S,GAKAitB,GAHAF,KAAAhsB,EAAA6rB,EAAAG,IAGAH,EACAM,GAHAF,KAAAjsB,EAAA6rB,EAAAI,IAGAJ,EACAO,EAAAJ,GAAAC,EAEA,GAAAG,GAAAz2B,EAAAhoB,GAAA,CACA,IAAAgoB,EAAAsJ,GACA,SAEA6sB,KACAI,KAEA,GAAAE,IAAAF,EAEA,OADA7sB,MAAA,IAAAosB,GACAK,GAAA7H,EAAAt2C,GACAgxB,EAAAhxB,EAAAsxB,EAAAC,EAAAC,EAAAC,EAAAC,GACAqsB,EAAA/9C,EAAAsxB,EAAA+sB,EAAA9sB,EAAAC,EAAAC,EAAAC,GAEA,KArDA,EAqDAH,GAAA,CACA,IAAAmtB,EAAAH,GAAAjmD,EAAAI,KAAAsH,EAAA,eACA2+C,EAAAH,GAAAlmD,EAAAI,KAAA44B,EAAA,eAEA,GAAAotB,GAAAC,EAAA,CACA,IAAAC,EAAAF,EAAA1+C,EAAAhI,QAAAgI,EACA6+C,EAAAF,EAAArtB,EAAAt5B,QAAAs5B,EAGA,OADAI,MAAA,IAAAosB,GACArsB,EAAAmtB,EAAAC,EAAAttB,EAAAC,EAAAE,IAGA,QAAA+sB,IAGA/sB,MAAA,IAAAosB,GACAE,EAAAh+C,EAAAsxB,EAAAC,EAAAC,EAAAC,EAAAC,yBC3DA16B,EAAAC,QAXA,SAAAmgB,EAAAC,GAKA,IAJA,IAAA3d,GAAA,EACAV,EAAA,MAAAoe,EAAA,EAAAA,EAAApe,OACA0H,EAAAkW,MAAA5d,KAEAU,EAAAV,GACA0H,EAAAhH,GAAA2d,EAAAD,EAAA1d,KAAA0d,GAEA,OAAA1W,yBCjBA,IAIA9H,EAJA7B,EAAA,OAAAA,CACAA,EAAA,QAGA,OAEAC,EAAAC,QAAA2B,wBCNA,IAAAw5B,EAAAr7B,EAAA,QAMAuB,EAHAF,OAAAC,UAGAC,eAgBAtB,EAAAC,QALA,SAAAC,GACA,IAAA4B,EAAA3B,KAAAC,SACA,OAAAg7B,WAAAt5B,EAAA5B,GAAAoB,EAAAI,KAAAI,EAAA5B,uCCjBA,IAAA0K,EAAA7K,EAAA,QAEA,SAAA+nD,EAAA1nC,EAAAxY,GACA,OAAAgD,EAAAm9C,MAAA3nC,EAAA,SAAAzF,GACA,OAAAA,EAAA/S,eAIA,SAAAogD,EAAA5nC,EAAA+F,GACA/F,EAAAG,QAAA,SAAA5F,EAAApU,GAEA,OADAoU,EAAAstC,WAAA1hD,EACAoU,IAEAyF,EAAAgxB,KAAA,SAAA1yB,EAAA4F,GACA,IAAAuxB,EAAA1vB,EAAA7B,EAAA5F,EACAo3B,EAAA3vB,EAAAzH,EAAA4F,EACA,OAAAuxB,EAAAr3B,SAAAs3B,EAAAt3B,OACAq3B,EAAAoS,WAAAnS,EAAAmS,WACApS,EAAAr3B,OAAAs3B,EAAAt3B,SAEA4B,EAAAG,QAAA,SAAA5F,UACAA,EAAAstC,aAwBAjoD,EAAAC,SACA4C,YAQA2sB,OAAA,SAAA7jB,EAAAxD,GACAwD,EAAA4K,QACA5K,EAAA4K,UAIApO,EAAAyjB,UAAAzjB,EAAAyjB,cACAzjB,EAAAP,SAAAO,EAAAP,UAAA,MACAO,EAAAqW,OAAArW,EAAAqW,QAAA,EAEA7S,EAAA4K,MAAArU,KAAAiG,IAQAuM,UAAA,SAAA/I,EAAAu8C,GACA,IAAAxlD,EAAAiJ,EAAA4K,MAAA5K,EAAA4K,MAAApQ,QAAA+hD,IAAA,GACA,IAAAxlD,GACAiJ,EAAA4K,MAAA8T,OAAA3nB,EAAA,IAUA6sB,UAAA,SAAA5jB,EAAAxD,EAAAsE,GAMA,IALA,IAGAwS,EAHA0Y,GAAA,iCACA5qB,EAAA4qB,EAAA31B,OACAuE,EAAA,EAGQA,EAAAwG,IAAUxG,EAClB0Y,EAAA0Y,EAAApxB,GACAkG,EAAAnL,eAAA2d,KACA9W,EAAA8W,GAAAxS,EAAAwS,KAYAjS,OAAA,SAAArB,EAAAzI,EAAAe,GACA,GAAA0H,EAAA,CAIA,IAAAw8C,EAAAx8C,EAAAc,QAAA27C,WACAt8B,EAAAlhB,EAAA6B,QAAAujB,UAAAm4B,EAAAr8B,SACAu8B,EAAAv8B,EAAA5nB,KACAokD,EAAAx8B,EAAA1nB,MACAmkD,EAAAz8B,EAAA3nB,IACAqkD,EAAA18B,EAAAznB,OAEAokD,EAAAX,EAAAn8C,EAAA4K,MAAA,QACAmyC,EAAAZ,EAAAn8C,EAAA4K,MAAA,SACAoyC,EAAAb,EAAAn8C,EAAA4K,MAAA,OACAqyC,EAAAd,EAAAn8C,EAAA4K,MAAA,UACAsyC,EAAAf,EAAAn8C,EAAA4K,MAAA,aAGAyxC,EAAAS,MACAT,EAAAU,MACAV,EAAAW,MACAX,EAAAY,MAwCA,IAAAE,EAAA5lD,EAAAmlD,EAAAC,EACAS,EAAA9kD,EAAAskD,EAAAC,EAEAQ,EAAAD,EAAA,EAGAE,GAAA/lD,EAJA4lD,EAAA,IAIAL,EAAAzmD,OAAA0mD,EAAA1mD,QAGAknD,GAAAjlD,EAAA+kD,IAAAL,EAAA3mD,OAAA4mD,EAAA5mD,QAGAmnD,EAAAL,EACAM,EAAAL,EACAM,KAqBAz+C,EAAAwD,KAAAq6C,EAAAv1C,OAAAw1C,EAAAC,EAAAC,GAnBA,SAAApyC,GACA,IAAA5I,EACAwa,EAAA5R,EAAA4R,eAEAA,GACAxa,EAAA4I,EAAAxJ,OAAAwJ,EAAAoV,UAAAk9B,EAAAK,EAAAD,GACAE,GAAAx7C,EAAA3J,SAEA2J,EAAA4I,EAAAxJ,OAAAi8C,EAAAG,GACAD,GAAAv7C,EAAA1K,OAGAmmD,EAAAnnD,MACAmD,WAAA+iB,EACAxa,UACA4I,UAOA,IAAA8yC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAEA7+C,EAAAwD,KAAAu6C,EAAAz1C,OAAA01C,GAAA,SAAAc,GACA,GAAAA,EAAA9H,WAAA,CACA,IAAA+H,EAAAD,EAAA9H,aACA0H,EAAA3lD,KAAAI,IAAAulD,EAAAK,EAAAzlD,MACAqlD,EAAA5lD,KAAAI,IAAAwlD,EAAAI,EAAAvlD,UAIAwG,EAAAwD,KAAAq6C,EAAAv1C,OAAAw1C,GAAA,SAAAkB,GACA,GAAAA,EAAAhI,WAAA,CACA,IAAA+H,EAAAC,EAAAhI,aACA4H,EAAA7lD,KAAAI,IAAAylD,EAAAG,EAAAxlD,KACAslD,EAAA9lD,KAAAI,IAAA0lD,EAAAE,EAAAtlD,WAOA,IAAAwlD,EAAAxB,EACAyB,EAAAxB,EACAyB,EAAAxB,EACAyB,EAAAxB,EA2BA59C,EAAAwD,KAAAq6C,EAAAv1C,OAAAw1C,GAAAuB,GAEAr/C,EAAAwD,KAAAq6C,EAAA,SAAAjyC,GACAqzC,GAAArzC,EAAAtT,QAGA0H,EAAAwD,KAAAs6C,EAAA,SAAAlyC,GACAszC,GAAAtzC,EAAAtT,QAIA0H,EAAAwD,KAAAu6C,EAAAz1C,OAAA01C,GAAAqB,GAGAr/C,EAAAwD,KAAAu6C,EAAA,SAAAnyC,GACAuzC,GAAAvzC,EAAAvS,SAGA2G,EAAAwD,KAAAw6C,EAAA,SAAApyC,GACAwzC,GAAAxzC,EAAAvS,SAqBA2G,EAAAwD,KAAAq6C,EAAAv1C,OAAAw1C,GAlBA,SAAAlyC,GACA,IAAA0zC,EAAAt/C,EAAAu/C,cAAAd,EAAA,SAAAz7C,GACA,OAAAA,EAAA4I,UAGA4zC,GACAlmD,KAAA,EACAE,MAAA,EACAD,IAAA4lD,EACA1lD,OAAA2lD,GAGAE,GACA1zC,EAAAxJ,OAAAk9C,EAAAt8C,QAAA1K,MAAAkmD,EAAAgB,KAQAP,EAAAxB,EACAyB,EAAAxB,EACAyB,EAAAxB,EACAyB,EAAAxB,EAEA59C,EAAAwD,KAAAq6C,EAAA,SAAAjyC,GACAqzC,GAAArzC,EAAAtT,QAGA0H,EAAAwD,KAAAs6C,EAAA,SAAAlyC,GACAszC,GAAAtzC,EAAAtT,QAGA0H,EAAAwD,KAAAu6C,EAAA,SAAAnyC,GACAuzC,GAAAvzC,EAAAvS,SAEA2G,EAAAwD,KAAAw6C,EAAA,SAAApyC,GACAwzC,GAAAxzC,EAAAvS,SAIA,IAAAomD,EAAA1mD,KAAAI,IAAAulD,EAAAO,EAAA,GACAA,GAAAQ,EACAP,GAAAnmD,KAAAI,IAAAwlD,EAAAO,EAAA,GAEA,IAAAQ,EAAA3mD,KAAAI,IAAAylD,EAAAO,EAAA,GACAA,GAAAO,EACAN,GAAArmD,KAAAI,IAAA0lD,EAAAO,EAAA,GAKA,IAAAO,EAAAtmD,EAAA8lD,EAAAC,EACAQ,EAAAtnD,EAAA2mD,EAAAC,EAEAU,IAAArB,GAAAoB,IAAAnB,IACAx+C,EAAAwD,KAAAq6C,EAAA,SAAAjyC,GACAA,EAAAvS,OAAAsmD,IAGA3/C,EAAAwD,KAAAs6C,EAAA,SAAAlyC,GACAA,EAAAvS,OAAAsmD,IAGA3/C,EAAAwD,KAAAu6C,EAAA,SAAAnyC,GACAA,EAAAoV,YACApV,EAAAtT,MAAAsnD,KAIA5/C,EAAAwD,KAAAw6C,EAAA,SAAApyC,GACAA,EAAAoV,YACApV,EAAAtT,MAAAsnD,KAIApB,EAAAmB,EACApB,EAAAqB,GAIA,IAAAtmD,EAAAmkD,EAAAgC,EACAlmD,EAAAokD,EAAA+B,EAwBA1/C,EAAAwD,KAAAq6C,EAAAv1C,OAAAy1C,GAAA8B,GAGAvmD,GAAAilD,EACAhlD,GAAAilD,EAEAx+C,EAAAwD,KAAAs6C,EAAA+B,GACA7/C,EAAAwD,KAAAw6C,EAAA6B,GAGA9+C,EAAA8B,WACAvJ,KAAA2lD,EACA1lD,IAAA4lD,EACA3lD,MAAAylD,EAAAV,EACA9kD,OAAA0lD,EAAAX,GAIAx+C,EAAAwD,KAAAy6C,EAAA,SAAAryC,GACAA,EAAAtS,KAAAyH,EAAA8B,UAAAvJ,KACAsS,EAAArS,IAAAwH,EAAA8B,UAAAtJ,IACAqS,EAAApS,MAAAuH,EAAA8B,UAAArJ,MACAoS,EAAAnS,OAAAsH,EAAA8B,UAAApJ,OAEAmS,EAAAxJ,OAAAm8C,EAAAC,KAjLA,SAAAa,EAAAzzC,GACA,IAAA0zC,EAAAt/C,EAAAu/C,cAAAd,EAAA,SAAAqB,GACA,OAAAA,EAAAl0C,UAGA,GAAA0zC,EACA,GAAA1zC,EAAA4R,eAAA,CACA,IAAAgiC,GACAlmD,KAAAP,KAAAI,IAAA8lD,EAAAP,GACAllD,MAAAT,KAAAI,IAAA+lD,EAAAP,GACAplD,IAAA,EACAE,OAAA,GAKAmS,EAAAxJ,OAAAwJ,EAAAoV,UAAAk9B,EAAAK,EAAAJ,EAAA,EAAAqB,QAEA5zC,EAAAxJ,OAAAk9C,EAAAt8C,QAAA1K,MAAAkmD,GAiHA,SAAAqB,EAAAj0C,GACAA,EAAA4R,gBACA5R,EAAAtS,KAAAsS,EAAAoV,UAAAy8B,EAAAwB,EACArzC,EAAApS,MAAAoS,EAAAoV,UAAA1oB,EAAAolD,EAAAuB,EAAAV,EACA3yC,EAAArS,MACAqS,EAAAnS,OAAAF,EAAAqS,EAAAvS,OAGAE,EAAAqS,EAAAnS,SAIAmS,EAAAtS,OACAsS,EAAApS,MAAAF,EAAAsS,EAAAtT,MACAsT,EAAArS,IAAA4lD,EACAvzC,EAAAnS,OAAA0lD,EAAAX,EAGAllD,EAAAsS,EAAApS,gCCnYA,IAAA6F,EAAAlK,EAAA,QACA4B,EAAA5B,EAAA,QACA6B,EAAA7B,EAAA,QAkBAC,EAAAC,QATA,WACAE,KAAAgC,KAAA,EACAhC,KAAAC,UACAmuC,KAAA,IAAAtkC,EACAiC,IAAA,IAAAtK,GAAAD,GACA8X,OAAA,IAAAxP,4BChBA,IAAA0gD,EAAA5qD,EAAA,QACAwK,EAAAxK,EAAA,QAkBAC,EAAAC,QALA,SAAA+I,EAAA4hD,EAAAC,GACA,IAAAnhD,EAAAkhD,EAAA5hD,GACA,OAAAuB,EAAAvB,GAAAU,EAAAihD,EAAAjhD,EAAAmhD,EAAA7hD,2BChBA,IAAArH,EAAA5B,EAAA,QACA+qD,EAAA/qD,EAAA,QACAgrD,EAAAhrD,EAAA,QACAirD,EAAAjrD,EAAA,QACAkrD,EAAAlrD,EAAA,QACAmrD,EAAAnrD,EAAA,QASA,SAAA+mD,EAAA58C,GACA,IAAApI,EAAA3B,KAAAC,SAAA,IAAAuB,EAAAuI,GACA/J,KAAAgC,KAAAL,EAAAK,KAIA2kD,EAAAzlD,UAAA8I,MAAA2gD,EACAhE,EAAAzlD,UAAAgJ,OAAA0gD,EACAjE,EAAAzlD,UAAAoI,IAAAuhD,EACAlE,EAAAzlD,UAAAuB,IAAAqoD,EACAnE,EAAAzlD,UAAAe,IAAA8oD,EAEAlrD,EAAAC,QAAA6mD,sBCRA9mD,EAAAC,QALA,SAAAe,GAEA,OADAb,KAAAC,SAAAgC,IAAApB,EAbA,6BAcAb,yCCbA,IAAAyK,EAAA7K,EAAA,QAMAC,EAAAC,SAKAghB,YAOAxe,OAAA,SAAAzB,GACA,OAAA4J,EAAAL,QAAAvJ,KAAA,GAAAA,GAWAkgB,OAAA,SAAAiqC,EAAAzoD,EAAAyI,GAEA,IAAA8yB,EAAA9yB,EAAAnJ,OAAA,EAAAmJ,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAGAxH,KAAA4B,IAAA04B,GAAA,GACAktB,IAAAxnD,KAAAsO,MAAAk5C,KAEAltB,EAAAktB,EAAAxnD,KAAAsO,MAAAk5C,IAIA,IAAAC,EAAAxgD,EAAAmwC,MAAAp3C,KAAA4B,IAAA04B,IACAotB,EAAA,GAEA,OAAAF,EAAA,CACA,IAAAG,GAAA,EAAA3nD,KAAAsO,MAAAm5C,GACAE,EAAA3nD,KAAAI,IAAAJ,KAAAC,IAAA0nD,EAAA,OACAD,EAAAF,EAAAI,QAAAD,QAEAD,EAAA,IAGA,OAAAA,GAGA/Q,YAAA,SAAA6Q,EAAAzoD,EAAAyI,GACA,IAAAqgD,EAAAL,EAAAxnD,KAAAqZ,IAAA,GAAArZ,KAAAsO,MAAArH,EAAAmwC,MAAAoQ,KAEA,WAAAA,EACA,IACI,IAAAK,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAA9oD,OAAAyI,EAAAnJ,OAAA,EACJmpD,EAAAM,gBAEA,OAAAC,KAAA,SAAAprD,EAAAC,GCrDAP,EAAAC,QAJA,SAAAC,GACA,OAAAC,KAAAC,SAAAqJ,IAAAvJ,0BCVA,IAAAyrD,EAAA5rD,EAAA,QACA6rD,EAAA7rD,EAAA,QAgCAC,EAAAC,QAJA,SAAA+I,EAAAnI,GACA,aAAAmI,GAAA4iD,EAAA5iD,EAAAnI,EAAA8qD,uCC5BA,IAAA/gD,EAAA7K,EAAA,QACA8rD,EAAA9rD,EAAA,QACA+rD,EAAA/rD,EAAA,QAGAgsD,EAAAD,EAAAE,SAAAF,EAAAD,EAOA7rD,EAAAC,QAAA2K,EAAA7F,QAIAgM,WAAA,aASAP,eAAA,aAQAoH,eAAA,aASAU,iBAAA,aAQAC,oBAAA,cAECwzC,sCCpDD/rD,EAAAC,QAAA,SAAAqI,GAEAA,EAAA+wB,MAAA,SAAA9oB,EAAAF,GAGA,OAFAA,EAAA1I,KAAA,QAEA,IAAAW,EAAAiI,EAAAF,wCCLArQ,EAAAC,WACAD,EAAAC,QAAAgsD,OAAAlsD,EAAA,QACAC,EAAAC,QAAA+L,OAAAjM,EAAA,QACAC,EAAAC,QAAAgI,MAAAlI,EAAA,SAAAmsD,OAAA,SAAA5rD,EAAAC,EAAAC,GCLA,IAAA81B,EAAAv2B,EAAA,QAiBAC,EAAAC,QANA,SAAAC,GACA,IAAAwJ,EAAA4sB,EAAAn2B,KAAAD,GAAAmK,OAAAnK,GAEA,OADAC,KAAAgC,MAAAuH,EAAA,IACAA,uBCAA1J,EAAAC,QANA,SAAA4I,EAAAsjD,GACA,gBAAAngB,GACA,OAAAnjC,EAAAsjD,EAAAngB,4BCVA,IAAAlrC,EAAAf,EAAA,QACAkwB,EAAAlwB,EAAA,QAmCAC,EAAAC,QAVA,SAAAe,GACA,IAAAivB,EAAAjvB,GACA,SAIA,IAAAqqB,EAAAvqB,EAAAE,GACA,MA5BA,qBA4BAqqB,GA3BA,8BA2BAA,GA7BA,0BA6BAA,GA1BA,kBA0BAA,IAAA+gC,mBCGApsD,EAAAC,QAJA,SAAAe,EAAAs5B,GACA,OAAAt5B,IAAAs5B,GAAAt5B,MAAAs5B,8BCjCA,IAAAwsB,EAAA/mD,EAAA,QACAw1B,EAAAx1B,EAAA,QA4DAC,EAAAC,QA5CA,SAAA+I,EAAA+V,EAAA+/B,EAAAtkB,GACA,IAAA93B,EAAAo8C,EAAA98C,OACAA,EAAAU,EACA2pD,GAAA7xB,EAEA,SAAAxxB,EACA,OAAAhH,EAGA,IADAgH,EAAA5H,OAAA4H,GACAtG,KAAA,CACA,IAAAZ,EAAAg9C,EAAAp8C,GACA,GAAA2pD,GAAAvqD,EAAA,GACAA,EAAA,KAAAkH,EAAAlH,EAAA,MACAA,EAAA,KAAAkH,GAEA,SAGA,OAAAtG,EAAAV,GAAA,CAEA,IAAA9B,GADA4B,EAAAg9C,EAAAp8C,IACA,GACAkzB,EAAA5sB,EAAA9I,GACAy1B,EAAA7zB,EAAA,GAEA,GAAAuqD,GAAAvqD,EAAA,IACA,YAAA8zB,KAAA11B,KAAA8I,GACA,aAEK,CACL,IAAA0xB,EAAA,IAAAosB,EACA,GAAAtsB,EACA,IAAA9wB,EAAA8wB,EAAA5E,EAAAD,EAAAz1B,EAAA8I,EAAA+V,EAAA2b,GAEA,cAAAhxB,EACA6rB,EAAAI,EAAAC,EAAAC,EAAA2E,EAAAE,GACAhxB,GAEA,UAIA,WAAA4iD,KAAA,SAAAhsD,EAAAC,EAAAC,IAAA,SC1DAR,GAAA,IAAA29B,EAAA59B,EAAA,QAGA6wB,EAAA,iBAAA3wB,SAAA4wB,UAAA5wB,EAGA6wB,EAAAF,GAAA,iBAAA5wB,SAAA6wB,UAAA7wB,EAMAusD,EAHAz7B,KAAA7wB,UAAA2wB,GAGA+M,EAAA6uB,QAGAnM,EAAA,WACA,IAIA,OAFAvvB,KAAA27B,SAAA37B,EAAA27B,QAAA,QAAAv8C,OAOAq8C,KAAAG,SAAAH,EAAAG,QAAA,QACG,MAAAnsD,KAXH,GAcAP,EAAAC,QAAAogD,kDC5BA,IAAAsM,EAAA5sD,EAAA,QAqBA,SAAAoa,EAAAV,GACA,GAAAA,EAAA,CAGA,IAMAG,GAAA,OACA8E,EAAA,EACAqR,EAAAtW,EAAAsW,MARA,wBASA,GAAAA,EAAA,CACAA,IAAA,GACA,QAAAxpB,EAAA,EAAqBA,EAAAqT,EAAA5X,OAAgBuE,IACrCqT,EAAArT,GAAAqmD,SAAA78B,EAAAxpB,GAAAwpB,EAAAxpB,GAAA,SAGA,GAAAwpB,EAAAtW,EAAAsW,MAdA,wBAgBA,IADAA,IAAA,GACAxpB,EAAA,EAAqBA,EAAAqT,EAAA5X,OAAgBuE,IACrCqT,EAAArT,GAAAqmD,SAAA78B,EAAA7Q,MAAA,EAAA3Y,EAAA,EAAAA,EAAA,YAGA,GAAAwpB,EAAAtW,EAAAsW,MAnBA,4FAmBA,CACA,IAAAxpB,EAAA,EAAqBA,EAAAqT,EAAA5X,OAAgBuE,IACrCqT,EAAArT,GAAAqmD,SAAA78B,EAAAxpB,EAAA,IAEAmY,EAAAmuC,WAAA98B,EAAA,SAEA,GAAAA,EAAAtW,EAAAsW,MAxBA,8GAwBA,CACA,IAAAxpB,EAAA,EAAqBA,EAAAqT,EAAA5X,OAAgBuE,IACrCqT,EAAArT,GAAA5C,KAAA+b,MAAA,KAAAmtC,WAAA98B,EAAAxpB,EAAA,KAEAmY,EAAAmuC,WAAA98B,EAAA,SAEA,GAAAA,EAAAtW,EAAAsW,MA7BA,SA6BA,CACA,kBAAAA,EAAA,GACA,gBAGA,KADAnW,EAAA+yC,EAAA58B,EAAA,KAEA,OAIA,IAAAxpB,EAAA,EAAkBA,EAAAqT,EAAA5X,OAAgBuE,IAClCqT,EAAArT,GAAAsE,EAAA+O,EAAArT,GAAA,OASA,OAHAmY,EAJAA,GAAA,GAAAA,EAIA7T,EAAA6T,EAAA,KAHA,EAKA9E,EAAA,GAAA8E,EACA9E,GAGA,SAAAS,EAAAZ,GACA,GAAAA,EAAA,CAGA,IACAsW,EAAAtW,EAAAsW,MADA,4GAEA,GAAAA,EAAA,CACA,IAAA9V,EAAA4yC,WAAA98B,EAAA,IAKA,OAJAllB,EAAA+hD,SAAA78B,EAAA,WACAllB,EAAAgiD,WAAA98B,EAAA,WACAllB,EAAAgiD,WAAA98B,EAAA,WACAllB,EAAA+B,MAAAqN,GAAA,EAAAA,EAAA,QAKA,SAAAK,EAAAb,GACA,GAAAA,EAAA,CAGA,IACAsW,EAAAtW,EAAAsW,MADA,0GAEA,GAAAA,EAAA,CACA,IAAA9V,EAAA4yC,WAAA98B,EAAA,IAKA,OAJAllB,EAAA+hD,SAAA78B,EAAA,WACAllB,EAAAgiD,WAAA98B,EAAA,WACAllB,EAAAgiD,WAAA98B,EAAA,WACAllB,EAAA+B,MAAAqN,GAAA,EAAAA,EAAA,QAyCA,SAAAqC,EAAAwwC,EAAA7yC,GAIA,gBAHAA,IACAA,WAAA6yC,EAAA,GAAAA,EAAA,MAEA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,GACA,KAAA7yC,EAAA,IAcA,SAAA8yC,EAAAD,EAAA7yC,GAIA,cAHAtW,KAAA+b,MAAAotC,EAAA,YAGA,MAFAnpD,KAAA+b,MAAAotC,EAAA,YAEA,MADAnpD,KAAA+b,MAAAotC,EAAA,YACA,OAAA7yC,GAAA6yC,EAAA,WAUA,SAAArwC,EAAAuwC,EAAA/yC,GAIA,gBAHAA,IACAA,WAAA+yC,EAAA,GAAAA,EAAA,MAEA,QAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,SACA/yC,EAAA,IAkBA,SAAApP,EAAAoiD,EAAArpD,EAAAG,GACA,OAAAJ,KAAAC,IAAAD,KAAAI,IAAAH,EAAAqpD,GAAAlpD,GAGA,SAAAmpD,EAAAD,GACA,IAAAE,EAAAF,EAAArkD,SAAA,IAAAg0B,cACA,OAAAuwB,EAAAnrD,OAAA,MAAAmrD,IAjNAntD,EAAAC,SACAka,UACAE,UACA+yC,OA4GA,SAAA3zC,GACA,IAAAqzC,EAAA3yC,EAAAV,GACA,OAAAqzC,KAAA5tC,MAAA,MA7GAmuC,OAgHA,SAAA5zC,GACA,IAAAuzC,EAAA3yC,EAAAZ,GACA,OAAAuzC,KAAA9tC,MAAA,MAjHA5E,SACAgzC,SAmHA,SAAA7zC,GACA,IAAAS,EAAAC,EAAAV,GACA,OAAAS,EACAA,EAAA,IAEAA,EAAAG,EAAAZ,IACAS,EAAA,IAEAA,EAAAI,EAAAb,IACAS,EAAA,QADA,GAzHAkC,UA+HA,SAAAxC,GACA,UAAAszC,EAAAtzC,EAAA,IAAAszC,EAAAtzC,EAAA,IACAszC,EAAAtzC,EAAA,KAhIAyC,UAmIA,SAAAywC,EAAA7yC,GACA,OAAAA,EAAA,GAAA6yC,EAAA,IAAAA,EAAA,KACAxwC,EAAAwwC,EAAA7yC,GAEA,OAAA6yC,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAtIAxwC,aACAC,cAgJA,SAAAuwC,EAAA7yC,GACA,OAAAA,EAAA,GAAA6yC,EAAA,IAAAA,EAAA,KACAC,EAAAD,EAAA7yC,GAMA,OAJAtW,KAAA+b,MAAAotC,EAAA,YAIA,MAHAnpD,KAAA+b,MAAAotC,EAAA,YAGA,MAFAnpD,KAAA+b,MAAAotC,EAAA,YAEA,MAvJAC,iBACAvwC,UAgKA,SAAAwwC,EAAA/yC,GACA,OAAAA,EAAA,GAAA+yC,EAAA,IAAAA,EAAA,KACAvwC,EAAAuwC,EAAA/yC,GAEA,OAAA+yC,EAAA,QAAAA,EAAA,SAAAA,EAAA,SAnKAvwC,aACAC,UA+KA,SAAA3C,EAAAE,GAIA,YAJAA,IACAA,IACAA,WAAAF,EAAA,GAAAA,EAAA,MAEA,OAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,iBACAE,GAAA,IAAAA,EAAA,KAAAA,EAAA,SAnLA0C,QAsLA,SAAA/C,GACA,OAAA2zC,EAAA3zC,EAAAsF,MAAA,QAeA,IAAAquC,KACA,QAAAzyB,KAAA6xB,EACAY,EAAAZ,EAAA7xB,yCCzNA,IAAAj4B,EAAA9C,EAAA,QACA+C,EAAA/C,EAAA,QACA6K,EAAA7K,EAAA,QACA+P,EAAA/P,EAAA,QAEAuN,EAAA1C,EAAA0C,KAEAzK,EAAAyB,KAAA,UACA2D,OACA8C,WACAyW,UAAA,OACAoK,aACAw1B,WAAA,IACAt1B,QAAA,GACAlkB,SAAA,MACAgE,KAAA,GACA4S,OAAA,OAOA,IAAAm5B,EAAA70C,EAAAiC,QACAgM,WAAA,SAAAV,GAEAzF,EAAA7F,OADA5E,KACAkQ,GADAlQ,KAIAssB,mBAKAE,aAAArf,EACAN,OAAA,SAAAiW,EAAAC,EAAA0J,GACA,IAAApf,EAAArN,KA0BA,OAvBAqN,EAAAmf,eAGAnf,EAAAyV,WACAzV,EAAA0V,YACA1V,EAAAof,UAGApf,EAAAqf,sBACArf,EAAAuV,gBACAvV,EAAAsf,qBAEAtf,EAAAuf,oBACAvf,EAAAwf,cACAxf,EAAAyf,mBAGAzf,EAAA0f,YACA1f,EAAAyW,MACAzW,EAAA2f,WAEA3f,EAAA4f,cAEA5f,EAAAI,SAGAwf,YAAA9f,EAIAuf,oBAAAvf,EACAyV,cAAA,WACA,IAAAvV,EAAArN,KAEAqN,EAAA4a,gBAEA5a,EAAAtK,MAAAsK,EAAAyV,SACAzV,EAAAtJ,KAAA,EACAsJ,EAAApJ,MAAAoJ,EAAAtK,QAEAsK,EAAAvJ,OAAAuJ,EAAA0V,UAGA1V,EAAArJ,IAAA,EACAqJ,EAAAnJ,OAAAmJ,EAAAvJ,QAIAuJ,EAAA6f,YAAA,EACA7f,EAAA8f,WAAA,EACA9f,EAAA+f,aAAA,EACA/f,EAAAggB,cAAA,EAGAhgB,EAAAI,SACA1K,MAAA,EACAe,OAAA,IAGA6oB,mBAAAxf,EAIAyf,kBAAAzf,EACA0f,YAAA1f,EACA2f,iBAAA3f,EAIA4f,UAAA5f,EACA2W,IAAA,WACA,IAAAzW,EAAArN,KACAoT,EAAA3I,EAAA2I,eACA5F,EAAAH,EAAAf,QACA1B,EAAA4C,EAAA5C,QACAoW,EAAA5N,EAAA5F,EAAAwT,SAAAte,EAAA6B,OAAA6c,iBACA3T,EAAAJ,EAAAI,QACAu4C,EAAAv7C,EAAAL,QAAAoD,EAAA/B,MAAA+B,EAAA/B,KAAA5J,OAAA,EACAo/C,EAAAx2C,EAAA6B,QAAAojB,aAAAliB,EAAAyzC,WAAAjgC,GACAqB,EAAAzX,EAAAo7C,EAAA/E,EAAA,EAAAzzC,EAAAme,QAAA,EAEAte,EAAA4a,gBACAxa,EAAA1K,MAAAsK,EAAAyV,SACArV,EAAA3J,OAAAue,IAEA5U,EAAA1K,MAAAsf,EACA5U,EAAA3J,OAAAuJ,EAAA0V,WAGA1V,EAAAtK,MAAA0K,EAAA1K,MACAsK,EAAAvJ,OAAA2J,EAAA3J,QAGAkpB,SAAA7f,EAGA8a,aAAA,WACA,IAAAnG,EAAA9hB,KAAAsM,QAAA7E,SACA,cAAAqa,GAAA,WAAAA,GAIAjd,KAAA,WACA,IAAAwI,EAAArN,KACAgF,EAAAqI,EAAArI,IACAoO,EAAA3I,EAAA2I,eACA5F,EAAAH,EAAAf,QACAgU,EAAA5d,EAAA6B,OAEA,GAAAiJ,EAAA5C,QAAA,CACA,IAWAkY,EAAAuqC,EAAAC,EAXAtsC,EAAA5N,EAAA5F,EAAAwT,SAAAV,EAAAc,iBACAC,EAAAjO,EAAA5F,EAAA6T,UAAAf,EAAAgB,kBACAC,EAAAnO,EAAA5F,EAAA+T,WAAAjB,EAAAkB,mBACA+rC,EAAA9iD,EAAAkX,WAAAX,EAAAK,EAAAE,GACA0/B,EAAAx2C,EAAA6B,QAAAojB,aAAAliB,EAAAyzC,WAAAjgC,GACA0H,EAAAu4B,EAAA,EAAAzzC,EAAAme,QACA8sB,EAAA,EACAz0C,EAAAqJ,EAAArJ,IACAD,EAAAsJ,EAAAtJ,KACAG,EAAAmJ,EAAAnJ,OACAD,EAAAoJ,EAAApJ,MAGAe,EAAAW,UAAAyN,EAAA5F,EAAAsZ,UAAAxG,EAAAyG,kBACA/hB,EAAA0c,KAAA6rC,EAGAlgD,EAAA4a,gBACAolC,EAAAtpD,GAAAE,EAAAF,GAAA,EACAupD,EAAAtpD,EAAA0kB,EACA5F,EAAA7e,EAAAF,IAEAspD,EAAA,SAAA7/C,EAAA/F,SAAA1D,EAAA2kB,EAAAzkB,EAAAykB,EACA4kC,EAAAtpD,GAAAE,EAAAF,GAAA,EACA8e,EAAA5e,EAAAF,EACAy0C,EAAAj1C,KAAA8H,IAAA,SAAAkC,EAAA/F,UAAA,QAGAzC,EAAAgiB,OACAhiB,EAAAiiB,UAAAomC,EAAAC,GACAtoD,EAAAiZ,OAAAw6B,GACAzzC,EAAAoiB,UAAA,SACApiB,EAAAqiB,aAAA,SAEA,IAAA5b,EAAA+B,EAAA/B,KACA,GAAAhB,EAAAL,QAAAqB,GAEA,IADA,IAAA/H,EAAA,EACA0C,EAAA,EAAmBA,EAAAqF,EAAA5J,SAAiBuE,EACpCpB,EAAAkd,SAAAzW,EAAArF,GAAA,EAAA1C,EAAAof,GACApf,GAAAu9C,OAGAj8C,EAAAkd,SAAAzW,EAAA,IAAAqX,GAGA9d,EAAAsiB,cAKA,SAAAkmC,EAAAhiD,EAAAiiD,GACA,IAAA3lD,EAAA,IAAA0vC,GACAxyC,IAAAwG,EAAAxG,IACAsH,QAAAmhD,EACAjiD,UAGAmE,EAAAyf,UAAA5jB,EAAA1D,EAAA2lD,GACA99C,EAAA0f,OAAA7jB,EAAA1D,GACA0D,EAAAkiD,WAAA5lD,EAGAjI,EAAAC,SACAyH,GAAA,QASA+nB,SAAAkoB,EAEAjoB,WAAA,SAAA/jB,GACA,IAAAiiD,EAAAjiD,EAAAc,QAAAxE,MAEA2lD,GACAD,EAAAhiD,EAAAiiD,IAIAjhC,aAAA,SAAAhhB,GACA,IAAAiiD,EAAAjiD,EAAAc,QAAAxE,MACA4lD,EAAAliD,EAAAkiD,WAEAD,GACAhjD,EAAA+kB,QAAAi+B,EAAA/qD,EAAA6B,OAAAuD,OAEA4lD,GACA/9C,EAAAyf,UAAA5jB,EAAAkiD,EAAAD,GACAC,EAAAphD,QAAAmhD,GAEAD,EAAAhiD,EAAAiiD,IAEGC,IACH/9C,EAAA4E,UAAA/I,EAAAkiD,UACAliD,EAAAkiD,iDCtPA,IAAAjjD,EAAA7K,EAAA,QAQA,SAAA+tD,EAAAvtD,EAAAoL,GACA,OAAApL,EAAA4Y,QAEAzV,EAAAnD,EAAAmD,EACAG,EAAAtD,EAAAsD,GAIA+G,EAAAkjD,oBAAAvtD,EAAAoL,GAQA,SAAAoiD,EAAApiD,EAAAqiD,GACA,IACA7hD,EAAA5F,EAAAyqC,EAAAjkC,EAAAkkC,EAEA,IAAA1qC,EAAA,EAAAwG,EAHApB,EAAA7J,KAAA+J,SAGA7J,OAAoCuE,EAAAwG,IAAUxG,EAC9C,GAAAoF,EAAAgL,iBAAApQ,GAKA,IAAAyqC,EAAA,EAAAC,GADA9kC,EAAAR,EAAAS,eAAA7F,IACAzE,KAAAE,OAAsCgvC,EAAAC,IAAUD,EAAA,CAChD,IAAArhC,EAAAxD,EAAArK,KAAAkvC,GACArhC,EAAA1M,MAAAmwB,MACA46B,EAAAr+C,IAYA,SAAAs+C,EAAAtiD,EAAA/D,GACA,IAAArD,KAQA,OANAwpD,EAAApiD,EAAA,SAAAgE,GACAA,EAAAhJ,QAAAiB,EAAAlE,EAAAkE,EAAA/D,IACAU,EAAArC,KAAAyN,KAIApL,EAWA,SAAA2pD,EAAAviD,EAAA/D,EAAAqP,EAAAk3C,GACA,IAAAC,EAAA9qC,OAAAC,kBACA8qC,KAmBA,OAjBAN,EAAApiD,EAAA,SAAAgE,GACA,IAAAsH,GAAAtH,EAAAhJ,QAAAiB,EAAAlE,EAAAkE,EAAA/D,GAAA,CAIA,IAAA05C,EAAA5tC,EAAAzI,iBACA+H,EAAAk/C,EAAAvmD,EAAA21C,GAEAtuC,EAAAm/C,GACAC,GAAA1+C,GACAy+C,EAAAn/C,GACGA,IAAAm/C,GAEHC,EAAAnsD,KAAAyN,MAIA0+C,EAQA,SAAAC,EAAA/R,GACA,IAAAgS,GAAA,IAAAhS,EAAAp2C,QAAA,KACAqoD,GAAA,IAAAjS,EAAAp2C,QAAA,KAEA,gBAAAsoD,EAAAC,GACA,IAAAC,EAAAJ,EAAA5qD,KAAA4B,IAAAkpD,EAAA/qD,EAAAgrD,EAAAhrD,GAAA,EACAkrD,EAAAJ,EAAA7qD,KAAA4B,IAAAkpD,EAAA5qD,EAAA6qD,EAAA7qD,GAAA,EACA,OAAAF,KAAAm8B,KAAAn8B,KAAAqZ,IAAA2xC,EAAA,GAAAhrD,KAAAqZ,IAAA4xC,EAAA,KAIA,SAAAC,EAAAljD,EAAApL,EAAAkM,GACA,IAAA7E,EAAAkmD,EAAAvtD,EAAAoL,GAEAc,EAAA8vC,KAAA9vC,EAAA8vC,MAAA,IACA,IAAA4R,EAAAG,EAAA7hD,EAAA8vC,MACA1pC,EAAApG,EAAAwK,UAAAg3C,EAAAtiD,EAAA/D,GAAAsmD,EAAAviD,EAAA/D,KAAAumD,GACA5pD,KAEA,OAAAsO,EAAA7Q,QAIA2J,EAAA7J,KAAA+J,SAAA0U,QAAA,SAAAjS,EAAA0F,GACA,GAAArI,EAAAgL,iBAAA3C,GAAA,CACA,IACArE,EADAhE,EAAAS,eAAA4H,GACAlS,KAAA+Q,EAAA,GAAAvD,QAGAK,MAAA1M,MAAAmwB,MACA7uB,EAAArC,KAAAyN,MAKApL,MAgBAvE,EAAAC,SAEA6W,OACAC,OAAA,SAAApL,EAAApL,GACA,IAAAqH,EAAAkmD,EAAAvtD,EAAAoL,GACApH,KASA,OAPAwpD,EAAApiD,EAAA,SAAAgE,GACA,GAAAA,EAAAhJ,QAAAiB,EAAAlE,EAAAkE,EAAA/D,GAEA,OADAU,EAAArC,KAAAyN,GACApL,IAIAA,EAAA2a,MAAA,MASAhX,MAAA2mD,EAYAnsD,MAAAmsD,EAWAvgD,QAAA,SAAA3C,EAAApL,EAAAkM,GACA,IAAA7E,EAAAkmD,EAAAvtD,EAAAoL,GACAc,EAAA8vC,KAAA9vC,EAAA8vC,MAAA,KACA,IAAA4R,EAAAG,EAAA7hD,EAAA8vC,MACA1pC,EAAApG,EAAAwK,UAAAg3C,EAAAtiD,EAAA/D,GAAAsmD,EAAAviD,EAAA/D,KAAAumD,GAMA,OAJAt7C,EAAA7Q,OAAA,IACA6Q,EAAAlH,EAAAS,eAAAyG,EAAA,GAAAxD,eAAAvN,MAGA+Q,GASAi8C,SAAA,SAAAnjD,EAAApL,GACA,OAAAsuD,EAAAljD,EAAApL,GAA+B0W,gBAW/Bmb,MAAA,SAAAzmB,EAAApL,GAEA,OAAA0tD,EAAAtiD,EADAmiD,EAAAvtD,EAAAoL,KAYAojD,QAAA,SAAApjD,EAAApL,EAAAkM,GACA,IAAA7E,EAAAkmD,EAAAvtD,EAAAoL,GACAc,EAAA8vC,KAAA9vC,EAAA8vC,MAAA,KACA,IAAA4R,EAAAG,EAAA7hD,EAAA8vC,MACA8R,EAAAH,EAAAviD,EAAA/D,EAAA6E,EAAAwK,UAAAk3C,GAmBA,OAhBAE,EAAArsD,OAAA,GACAqsD,EAAAjd,KAAA,SAAA1yB,EAAA4F,GACA,IAEA0qC,EAFAtwC,EAAAvX,UACAmd,EAAAnd,UAQA,OALA,IAAA6nD,IAEAA,EAAAtwC,EAAArP,cAAAiV,EAAAjV,eAGA2/C,IAKAX,EAAAnvC,MAAA,MAWAxb,EAAA,SAAAiI,EAAApL,EAAAkM,GACA,IAAA7E,EAAAkmD,EAAAvtD,EAAAoL,GACAkH,KACAo8C,KAiBA,OAfAlB,EAAApiD,EAAA,SAAAgE,GACAA,EAAA3I,SAAAY,EAAAlE,IACAmP,EAAA3Q,KAAAyN,GAGAA,EAAAhJ,QAAAiB,EAAAlE,EAAAkE,EAAA/D,KACAorD,QAMAxiD,EAAAwK,YAAAg4C,IACAp8C,MAEAA,GAWAhP,EAAA,SAAA8H,EAAApL,EAAAkM,GACA,IAAA7E,EAAAkmD,EAAAvtD,EAAAoL,GACAkH,KACAo8C,KAiBA,OAfAlB,EAAApiD,EAAA,SAAAgE,GACAA,EAAA1I,SAAAW,EAAA/D,IACAgP,EAAA3Q,KAAAyN,GAGAA,EAAAhJ,QAAAiB,EAAAlE,EAAAkE,EAAA/D,KACAorD,QAMAxiD,EAAAwK,YAAAg4C,IACAp8C,MAEAA,2BCtUA,IAAA9J,EAAAhJ,EAAA,QAgCAC,EAAAC,QALA,SAAA+I,EAAAnI,EAAAy0C,GACA,IAAA5rC,EAAA,MAAAV,SAAAD,EAAAC,EAAAnI,GACA,gBAAA6I,EAAA4rC,EAAA5rC,sCCzBA,IAAAkX,EAAA7gB,EAAA,QACA8C,EAAA9C,EAAA,QACA6K,EAAA7K,EAAA,QAEAC,EAAAC,QAAA,SAAAqI,GA4ZA,SAAA4mD,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAYA,MAXA,iBAAAH,GACAG,EAAA1C,SAAAuC,EAAA,KAEA,IAAAA,EAAAhpD,QAAA,OAEAmpD,IAAA,IAAAF,EAAAG,WAAAF,KAGAC,EAAAH,EAGAG,EAOA,SAAAE,EAAAxuD,GACA,gBAAAA,GAAA,OAAAA,GAAA,SAAAA,EAQA,SAAAyuD,EAAAC,EAAAC,EAAAC,GACA,IAAAp0B,EAAAq0B,SAAAC,YACAP,EAAAG,EAAAH,WACAQ,EAAAv0B,EAAAw0B,iBAAAN,GAAAC,GACAM,EAAAz0B,EAAAw0B,iBAAAT,GAAAI,GACAO,EAAAV,EAAAO,GACAI,EAAAX,EAAAS,GACAG,EAAA9sC,OAAAC,kBAEA,OAAA2sC,GAAAC,EACAxsD,KAAAC,IACAssD,EAAAhB,EAAAa,EAAAL,EAAAE,GAAAQ,EACAD,EAAAjB,EAAAe,EAAAV,EAAAK,GAAAQ,GAGA,OApcAxlD,EAAA0F,YAAA,WACA,OAAA1F,EAAA0lB,MAAA1lB,EAAAkU,MAAArd,UAAA,OAAAyd,MAAAxd,KAAAD,UAAA,IACA20C,OAAA,SAAAl2C,EAAA8e,EAAAD,EAAAtS,GACA,IAAAwpC,EAAAj3B,EAAA9e,OACA0uC,EAAA7vB,EAAA7e,GAEA,WAAAA,EAEA8e,EAAA9e,GAAA0K,EAAAylD,WAAApa,EAAArH,GACK,UAAA1uC,EAEL8e,EAAA9e,GAAA0K,EAAA0lB,MAAA2lB,GAAA3tC,EAAAmL,aAAA68C,iBAAA1hB,EAAAjnC,MAAAinC,IAEAhkC,EAAAorC,QAAA91C,EAAA8e,EAAAD,EAAAtS,OAMA7B,EAAAylD,WAAA,WACA,OAAAzlD,EAAA0lB,MAAA1lB,EAAAkU,MAAArd,UAAA,OAAAyd,MAAAxd,KAAAD,UAAA,IACA20C,OAAA,SAAAl2C,EAAA8e,EAAAD,EAAAtS,GACA,aAAAvM,GAAA,UAAAA,EAAA,CACA,IACAqG,EAAAoB,EAAAkD,EADA0lD,EAAAxxC,EAAA7e,GAAA8B,OAOA,IAJAgd,EAAA9e,KACA8e,EAAA9e,OAGAqG,EAAA,EAAgBA,EAAAgqD,IAAUhqD,EAC1BsE,EAAAkU,EAAA7e,GAAAqG,GACAoB,EAAAiD,EAAA2I,eAAA1I,EAAAlD,KAAA,UAAAzH,EAAA,qBAEAqG,GAAAyY,EAAA9e,GAAA8B,QACAgd,EAAA9e,GAAAgC,UAGA8c,EAAA9e,GAAAqG,GAAAoB,MAAAkD,EAAAlD,MAAAkD,EAAAlD,OAAAqX,EAAA9e,GAAAqG,GAAAoB,KAGAiD,EAAA0lB,MAAAtR,EAAA9e,GAAAqG,IAAA+B,EAAAmL,aAAA68C,iBAAA3oD,GAAAkD,IAGAD,EAAA0lB,MAAAtR,EAAA9e,GAAAqG,GAAAsE,QAIAD,EAAAorC,QAAA91C,EAAA8e,EAAAD,EAAAtS,OAMA7B,EAAAm9C,MAAA,SAAAyI,EAAAC,GACA,GAAA7lD,EAAAL,QAAAimD,IAAA5wC,MAAAve,UAAAqsB,OACA,OAAA8iC,EAAA9iC,OAAA+iC,GAEA,IAAAC,KAQA,OANA9lD,EAAAwD,KAAAoiD,EAAA,SAAAroD,GACAsoD,EAAAtoD,IACAuoD,EAAAxuD,KAAAiG,KAIAuoD,GAEA9lD,EAAA2d,UAAA3I,MAAAve,UAAAknB,UACA,SAAAnI,EAAA5K,EAAA6a,GACA,OAAAjQ,EAAAmI,UAAA/S,EAAA6a,IAEA,SAAAjQ,EAAA5K,EAAA6a,GACAA,aAAAjQ,EAAAiQ,EACA,QAAA9pB,EAAA,EAAAwG,EAAAqT,EAAApe,OAAuCuE,EAAAwG,IAAUxG,EACjD,GAAAiP,EAAA9T,KAAA2uB,EAAAjQ,EAAA7Z,KAAA6Z,GACA,OAAA7Z,EAGA,UAEAqE,EAAAu/C,cAAA,SAAAwG,EAAAF,EAAAG,GAEAhmD,EAAAyL,cAAAu6C,KACAA,GAAA,GAEA,QAAArqD,EAAAqqD,EAAA,EAA8BrqD,EAAAoqD,EAAA3uD,OAA0BuE,IAAA,CACxD,IAAAsqD,EAAAF,EAAApqD,GACA,GAAAkqD,EAAAI,GACA,OAAAA,IAIAjmD,EAAAkmD,kBAAA,SAAAH,EAAAF,EAAAG,GAEAhmD,EAAAyL,cAAAu6C,KACAA,EAAAD,EAAA3uD,QAEA,QAAAuE,EAAAqqD,EAAA,EAA8BrqD,GAAA,EAAQA,IAAA,CACtC,IAAAsqD,EAAAF,EAAApqD,GACA,GAAAkqD,EAAAI,GACA,OAAAA,IAMAjmD,EAAAgY,SAAA,SAAApiB,GACA,OAAAoM,MAAAigD,WAAArsD,KAAAq7B,SAAAr7B,IAEAoK,EAAAmmD,aAAA,SAAArtD,EAAAG,EAAAmtD,GACA,OAAArtD,KAAA4B,IAAA7B,EAAAG,GAAAmtD,GAEApmD,EAAAqmD,YAAA,SAAAvtD,EAAAstD,GACA,IAAAE,EAAAvtD,KAAA+b,MAAAhc,GACA,OAAAwtD,EAAAF,EAAAttD,GAAAwtD,EAAAF,EAAAttD,GAEAkH,EAAA7G,IAAA,SAAAqc,GACA,OAAAA,EAAApN,OAAA,SAAAjP,EAAA/C,GACA,OAAA4L,MAAA5L,GAGA+C,EAFAJ,KAAAI,MAAA/C,IAGGsiB,OAAAE,oBAEH5Y,EAAAhH,IAAA,SAAAwc,GACA,OAAAA,EAAApN,OAAA,SAAApP,EAAA5C,GACA,OAAA4L,MAAA5L,GAGA4C,EAFAD,KAAAC,MAAA5C,IAGGsiB,OAAAC,oBAEH3Y,EAAAgxC,KAAAj4C,KAAAi4C,KACA,SAAAl4C,GACA,OAAAC,KAAAi4C,KAAAl4C,IAEA,SAAAA,GAEA,WADAA,OACAkJ,MAAAlJ,GACAA,EAEAA,EAAA,QAEAkH,EAAAmwC,MAAAp3C,KAAAo3C,MACA,SAAAr3C,GACA,OAAAC,KAAAo3C,MAAAr3C,IAEA,SAAAA,GACA,IAAAytD,EAAAxtD,KAAAytD,IAAA1tD,GAAAC,KAAA0tD,OAGAC,EAAA3tD,KAAA+b,MAAAyxC,GAGA,OAFAztD,IAAAC,KAAAqZ,IAAA,GAAAs0C,GAEAA,EAAAH,GAEAvmD,EAAA4oC,UAAA,SAAAn1B,GACA,OAAAA,GAAA1a,KAAA8H,GAAA,MAEAb,EAAAma,UAAA,SAAAwsC,GACA,OAAAA,GAAA,IAAA5tD,KAAA8H,KAGAb,EAAAutC,kBAAA,SAAAqZ,EAAAC,GACA,IAAAC,EAAAD,EAAA/tD,EAAA8tD,EAAA9tD,EACAiuD,EAAAF,EAAA5tD,EAAA2tD,EAAA3tD,EACA+tD,EAAAjuD,KAAAm8B,KAAA4xB,IAAAC,KAEA3vC,EAAAre,KAAAk8B,MAAA8xB,EAAAD,GAMA,OAJA1vC,GAAA,GAAAre,KAAA8H,KACAuW,GAAA,EAAAre,KAAA8H,KAIAuW,QACA/S,SAAA2iD,IAGAhnD,EAAAinD,sBAAA,SAAApD,EAAAC,GACA,OAAA/qD,KAAAm8B,KAAAn8B,KAAAqZ,IAAA0xC,EAAAhrD,EAAA+qD,EAAA/qD,EAAA,GAAAC,KAAAqZ,IAAA0xC,EAAA7qD,EAAA4qD,EAAA5qD,EAAA,KAEA+G,EAAA86C,WAAA,SAAAoM,GACA,OAAAA,EAAA,WAEAlnD,EAAAqpB,YAAA,SAAA89B,EAAAC,EAAAC,EAAA3xD,GAMA,IAAA+zB,EAAA09B,EAAA3+B,KAAA4+B,EAAAD,EACAzxC,EAAA0xC,EACAx9B,EAAAy9B,EAAA7+B,KAAA4+B,EAAAC,EAEAC,EAAAvuD,KAAAm8B,KAAAn8B,KAAAqZ,IAAAsD,EAAA5c,EAAA2wB,EAAA3wB,EAAA,GAAAC,KAAAqZ,IAAAsD,EAAAzc,EAAAwwB,EAAAxwB,EAAA,IACAsuD,EAAAxuD,KAAAm8B,KAAAn8B,KAAAqZ,IAAAwX,EAAA9wB,EAAA4c,EAAA5c,EAAA,GAAAC,KAAAqZ,IAAAwX,EAAA3wB,EAAAyc,EAAAzc,EAAA,IAEAuuD,EAAAF,KAAAC,GACAE,EAAAF,GAAAD,EAAAC,GAMAG,EAAAhyD,GAHA8xD,EAAAxlD,MAAAwlD,GAAA,EAAAA,GAIAG,EAAAjyD,GAHA+xD,EAAAzlD,MAAAylD,GAAA,EAAAA,GAKA,OACAh+B,UACA3wB,EAAA4c,EAAA5c,EAAA4uD,GAAA99B,EAAA9wB,EAAA2wB,EAAA3wB,GACAG,EAAAyc,EAAAzc,EAAAyuD,GAAA99B,EAAA3wB,EAAAwwB,EAAAxwB,IAEA2wB,MACA9wB,EAAA4c,EAAA5c,EAAA6uD,GAAA/9B,EAAA9wB,EAAA2wB,EAAA3wB,GACAG,EAAAyc,EAAAzc,EAAA0uD,GAAA/9B,EAAA3wB,EAAAwwB,EAAAxwB,MAIA+G,EAAA4nD,QAAAlvC,OAAAkvC,SAAA,MACA5nD,EAAAopB,oBAAA,SAAAvC,GAMA,IAUAlrB,EAAAksD,EAAAC,EAAAC,EA4BAC,EAAAC,EAAAC,EAAAC,EA0BApE,EAhEAqE,GAAAvhC,OAAAvlB,IAAA,SAAAkmB,GACA,OACAuB,MAAAvB,EAAA5iB,OACAyjD,OAAA,EACAC,GAAA,KAKAC,EAAAH,EAAAhxD,OAEA,IAAAuE,EAAA,EAAaA,EAAA4sD,IAAe5sD,EAE5B,KADAmsD,EAAAM,EAAAzsD,IACAotB,MAAAP,KAAA,CAMA,GAFAq/B,EAAAlsD,EAAA,EAAAysD,EAAAzsD,EAAA,SACAosD,EAAApsD,EAAA4sD,EAAA,EAAAH,EAAAzsD,EAAA,WACAosD,EAAAh/B,MAAAP,KAAA,CACA,IAAAggC,EAAAT,EAAAh/B,MAAAjwB,EAAAgvD,EAAA/+B,MAAAjwB,EAGAgvD,EAAAO,OAAA,IAAAG,GAAAT,EAAAh/B,MAAA9vB,EAAA6uD,EAAA/+B,MAAA9vB,GAAAuvD,EAAA,GAGAX,KAAA9+B,MAAAP,KACAs/B,EAAAQ,GAAAR,EAAAO,QACIN,KAAAh/B,MAAAP,KACJs/B,EAAAQ,GAAAT,EAAAQ,OACI9yD,KAAAy7C,KAAA6W,EAAAQ,UAAA9yD,KAAAy7C,KAAA8W,EAAAO,QACJP,EAAAQ,GAAA,EAEAR,EAAAQ,IAAAT,EAAAQ,OAAAP,EAAAO,QAAA,EAMA,IAAA1sD,EAAA,EAAaA,EAAA4sD,EAAA,IAAmB5sD,EAChCmsD,EAAAM,EAAAzsD,GACAosD,EAAAK,EAAAzsD,EAAA,GACAmsD,EAAA/+B,MAAAP,MAAAu/B,EAAAh/B,MAAAP,OAIAxoB,EAAAmmD,aAAA2B,EAAAO,OAAA,EAAA9yD,KAAAqyD,SACAE,EAAAQ,GAAAP,EAAAO,GAAA,GAIAN,EAAAF,EAAAQ,GAAAR,EAAAO,OACAJ,EAAAF,EAAAO,GAAAR,EAAAO,QACAF,EAAApvD,KAAAqZ,IAAA41C,EAAA,GAAAjvD,KAAAqZ,IAAA61C,EAAA,KACA,IAIAC,EAAA,EAAAnvD,KAAAm8B,KAAAizB,GACAL,EAAAQ,GAAAN,EAAAE,EAAAJ,EAAAO,OACAN,EAAAO,GAAAL,EAAAC,EAAAJ,EAAAO,UAKA,IAAA1sD,EAAA,EAAaA,EAAA4sD,IAAe5sD,GAC5BmsD,EAAAM,EAAAzsD,IACAotB,MAAAP,OAIAq/B,EAAAlsD,EAAA,EAAAysD,EAAAzsD,EAAA,QACAosD,EAAApsD,EAAA4sD,EAAA,EAAAH,EAAAzsD,EAAA,QACAksD,MAAA9+B,MAAAP,OACAu7B,GAAA+D,EAAA/+B,MAAAjwB,EAAA+uD,EAAA9+B,MAAAjwB,GAAA,EACAgvD,EAAA/+B,MAAAS,sBAAAs+B,EAAA/+B,MAAAjwB,EAAAirD,EACA+D,EAAA/+B,MAAAW,sBAAAo+B,EAAA/+B,MAAA9vB,EAAA8qD,EAAA+D,EAAAQ,IAEAP,MAAAh/B,MAAAP,OACAu7B,GAAAgE,EAAAh/B,MAAAjwB,EAAAgvD,EAAA/+B,MAAAjwB,GAAA,EACAgvD,EAAA/+B,MAAAY,kBAAAm+B,EAAA/+B,MAAAjwB,EAAAirD,EACA+D,EAAA/+B,MAAAc,kBAAAi+B,EAAA/+B,MAAA9vB,EAAA8qD,EAAA+D,EAAAQ,MAIAtoD,EAAAupB,SAAA,SAAAq8B,EAAA9tD,EAAA2wD,GACA,OAAAA,EACA3wD,GAAA8tD,EAAAxuD,OAAA,EAAAwuD,EAAA,GAAAA,EAAA9tD,EAAA,GAEAA,GAAA8tD,EAAAxuD,OAAA,EAAAwuD,IAAAxuD,OAAA,GAAAwuD,EAAA9tD,EAAA,IAEAkI,EAAAspB,aAAA,SAAAs8B,EAAA9tD,EAAA2wD,GACA,OAAAA,EACA3wD,GAAA,EAAA8tD,IAAAxuD,OAAA,GAAAwuD,EAAA9tD,EAAA,GAEAA,GAAA,EAAA8tD,EAAA,GAAAA,EAAA9tD,EAAA,IAGAkI,EAAA0oD,QAAA,SAAAxkB,EAAApvB,GACA,IAAAyxC,EAAAxtD,KAAAsO,MAAArH,EAAAmwC,MAAAjM,IACAykB,EAAAzkB,EAAAnrC,KAAAqZ,IAAA,GAAAm0C,GAuBA,OApBAzxC,EACA6zC,EAAA,IACA,EACIA,EAAA,EACJ,EACIA,EAAA,EACJ,EAEA,GAEGA,GAAA,EACH,EACGA,GAAA,EACH,EACGA,GAAA,EACH,EAEA,IAGA5vD,KAAAqZ,IAAA,GAAAm0C,IAGAvmD,EAAA0f,iBACA,oBAAAxK,OACA,SAAAtK,GACAA,KAGAsK,OAAAsK,uBACAtK,OAAA0zC,6BACA1zC,OAAA2zC,0BACA3zC,OAAA4zC,wBACA5zC,OAAA6zC,yBACA,SAAAn+C,GACA,OAAAsK,OAAA8zC,WAAAp+C,EAAA,SAIA5K,EAAAkjD,oBAAA,SAAA+F,EAAAloD,GACA,IAAA/E,EAAAC,EACAtG,EAAAszD,EAAAC,eAAAD,EACApjD,EAAAojD,EAAAE,eAAAF,EAAAG,WACAC,EAAAxjD,EAAAyjD,wBAEAC,EAAA5zD,EAAA4zD,QACAA,KAAAnyD,OAAA,GACA4E,EAAAutD,EAAA,GAAAC,QACAvtD,EAAAstD,EAAA,GAAAE,UAGAztD,EAAArG,EAAA6zD,QACAvtD,EAAAtG,EAAA8zD,SAMA,IAAAhnC,EAAAw/B,WAAAjiD,EAAA0pD,SAAA7jD,EAAA,iBACA6c,EAAAu/B,WAAAjiD,EAAA0pD,SAAA7jD,EAAA,gBACA8c,EAAAs/B,WAAAjiD,EAAA0pD,SAAA7jD,EAAA,kBACA+c,EAAAq/B,WAAAjiD,EAAA0pD,SAAA7jD,EAAA,mBACAvN,EAAA+wD,EAAA7vD,MAAA6vD,EAAA/vD,KAAAmpB,EAAAE,EACAtpB,EAAAgwD,EAAA5vD,OAAA4vD,EAAA9vD,IAAAmpB,EAAAE,EAOA,OACA9pB,EAJAkD,EAAAjD,KAAA+b,OAAA9Y,EAAAqtD,EAAA/vD,KAAAmpB,GAAAqM,EAAAjpB,EAAAvN,MAAAyI,EAAA4oD,yBAKA1wD,EAJAgD,EAAAlD,KAAA+b,OAAA7Y,EAAAotD,EAAA9vD,IAAAmpB,GAAA7O,EAAAhO,EAAAxM,OAAA0H,EAAA4oD,2BAyDA3pD,EAAA4pD,mBAAA,SAAA9E,GACA,OAAAD,EAAAC,EAAA,4BAGA9kD,EAAA6pD,oBAAA,SAAA/E,GACA,OAAAD,EAAAC,EAAA,8BAEA9kD,EAAAsH,gBAAA,SAAAw9C,GACA,IAAAgF,EAAAhF,EAAAH,WACA,IAAAmF,EACA,OAAAhF,EAAAiF,YAGA,IAAAtnC,EAAAu/B,SAAAhiD,EAAA0pD,SAAAI,EAAA,oBACAnnC,EAAAq/B,SAAAhiD,EAAA0pD,SAAAI,EAAA,qBACA95C,EAAA85C,EAAAC,YAAAtnC,EAAAE,EACAqnC,EAAAhqD,EAAA4pD,mBAAA9E,GACA,OAAA9iD,MAAAgoD,GAAAh6C,EAAAjX,KAAAC,IAAAgX,EAAAg6C,IAEAhqD,EAAAwH,iBAAA,SAAAs9C,GACA,IAAAgF,EAAAhF,EAAAH,WACA,IAAAmF,EACA,OAAAhF,EAAAmF,aAGA,IAAAvnC,EAAAs/B,SAAAhiD,EAAA0pD,SAAAI,EAAA,mBACAlnC,EAAAo/B,SAAAhiD,EAAA0pD,SAAAI,EAAA,sBACAjyC,EAAAiyC,EAAAG,aAAAvnC,EAAAE,EACAsnC,EAAAlqD,EAAA6pD,oBAAA/E,GACA,OAAA9iD,MAAAkoD,GAAAryC,EAAA9e,KAAAC,IAAA6e,EAAAqyC,IAEAlqD,EAAA0pD,SAAA,SAAAS,EAAAC,GACA,OAAAD,EAAAE,aACAF,EAAAE,aAAAD,GACAnF,SAAAC,YAAAE,iBAAA+E,EAAA,MAAAG,iBAAAF,IAEApqD,EAAAuG,YAAA,SAAAxF,EAAAwpD,GACA,IAAAC,EAAAzpD,EAAA4oD,wBAAAY,GAAAr1C,OAAA1O,kBAAA,EACA,OAAAgkD,EAAA,CAIA,IAAA3kD,EAAA9E,EAAA8E,OACAxM,EAAA0H,EAAA1H,OACAf,EAAAyI,EAAAzI,MAEAuN,EAAAxM,SAAAmxD,EACA3kD,EAAAvN,QAAAkyD,EACAzpD,EAAAxG,IAAA0F,MAAAuqD,KAKA3kD,EAAA4B,MAAApO,QAAAwM,EAAA4B,MAAAnP,QACAuN,EAAA4B,MAAApO,SAAA,KACAwM,EAAA4B,MAAAnP,QAAA,QAIA0H,EAAAkX,WAAA,SAAAuzC,EAAA7zC,EAAAE,GACA,OAAAF,EAAA,IAAA6zC,EAAA,MAAA3zC,GAEA9W,EAAA+Z,YAAA,SAAAxf,EAAA0c,EAAAyzC,EAAA9rD,GAEA,IAAA1H,GADA0H,SACA1H,KAAA0H,EAAA1H,SACAyzD,EAAA/rD,EAAAgsD,eAAAhsD,EAAAgsD,mBAEAhsD,EAAAqY,WACA/f,EAAA0H,EAAA1H,QACAyzD,EAAA/rD,EAAAgsD,kBACAhsD,EAAAqY,QAGA1c,EAAA0c,OACA,IAAA4zC,EAAA,EACA7qD,EAAAwD,KAAAknD,EAAA,SAAAI,YAEAA,GAAA,OAAAA,QAAA9qD,EAAAL,QAAAmrD,GACAD,EAAA7qD,EAAAga,YAAAzf,EAAArD,EAAAyzD,EAAAE,EAAAC,GACI9qD,EAAAL,QAAAmrD,IAGJ9qD,EAAAwD,KAAAsnD,EAAA,SAAAC,YAEAA,GAAA,OAAAA,GAAA/qD,EAAAL,QAAAorD,KACAF,EAAA7qD,EAAAga,YAAAzf,EAAArD,EAAAyzD,EAAAE,EAAAE,QAMA,IAAAC,EAAAL,EAAAvzD,OAAA,EACA,GAAA4zD,EAAAN,EAAAtzD,OAAA,CACA,QAAAuE,EAAA,EAAkBA,EAAAqvD,EAAWrvD,WAC7BzE,EAAAyzD,EAAAhvD,IAEAgvD,EAAAlrC,OAAA,EAAAurC,GAEA,OAAAH,GAEA7qD,EAAAga,YAAA,SAAAzf,EAAArD,EAAAyzD,EAAAE,EAAAh8C,GACA,IAAAiV,EAAA5sB,EAAA2X,GAQA,OAPAiV,IACAA,EAAA5sB,EAAA2X,GAAAtU,EAAAyf,YAAAnL,GAAAvW,MACAqyD,EAAArzD,KAAAuX,IAEAiV,EAAA+mC,IACAA,EAAA/mC,GAEA+mC,GAEA7qD,EAAAo4C,mBAAA,SAAAsS,GACA,IAAAO,EAAA,EAQA,OAPAjrD,EAAAwD,KAAAknD,EAAA,SAAAI,GACA9qD,EAAAL,QAAAmrD,IACAA,EAAA1zD,OAAA6zD,IACAA,EAAAH,EAAA1zD,UAIA6zD,GAGAjrD,EAAAgW,QAKA,SAAA5f,GAMA,OAJAA,aAAA80D,iBACA90D,EAAA6B,EAAA6B,OAAAC,cAGAic,EAAA5f,IAVA,SAAAA,GAEA,OADAgQ,QAAAC,MAAA,uBACAjQ,GAWA4J,EAAAsqB,cAAA,SAAA6gC,GAEA,OAAAA,aAAAC,cACAD,EACAnrD,EAAAgW,MAAAm1C,GAAAl4C,SAAA,IAAAD,OAAA,IAAAvB,oCChmBA,IAGA2O,EAHAjrB,EAAA,QAGAirB,OAEAhrB,EAAAC,QAAA+qB,wBCLA,IAAAxoB,EAAAzC,EAAA,QACAk2D,EAAAl2D,EAAA,QACAm2D,EAAAn2D,EAAA,QAgFAC,EAAAC,QA7DA,SAAAmgB,EAAAka,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAM,EAjBA,EAiBAT,EACA47B,EAAA/1C,EAAApe,OACAo0D,EAAA97B,EAAAt4B,OAEA,GAAAm0D,GAAAC,KAAAp7B,GAAAo7B,EAAAD,GACA,SAGA,IAAA3iC,EAAAkH,EAAAjxB,IAAA2W,GACA,GAAAoT,GAAAkH,EAAAjxB,IAAA6wB,GACA,OAAA9G,GAAA8G,EAEA,IAAA53B,GAAA,EACAgH,KACA2sD,EA9BA,EA8BA97B,EAAA,IAAA/3B,SAMA,IAJAk4B,EAAAt4B,IAAAge,EAAAka,GACAI,EAAAt4B,IAAAk4B,EAAAla,KAGA1d,EAAAyzD,GAAA,CACA,IAAAG,EAAAl2C,EAAA1d,GACA6zD,EAAAj8B,EAAA53B,GAEA,GAAA83B,EACA,IAAAg8B,EAAAx7B,EACAR,EAAA+7B,EAAAD,EAAA5zD,EAAA43B,EAAAla,EAAAsa,GACAF,EAAA87B,EAAAC,EAAA7zD,EAAA0d,EAAAka,EAAAI,GAEA,YAAA87B,EAAA,CACA,GAAAA,EACA,SAEA9sD,KACA,MAGA,GAAA2sD,GACA,IAAAJ,EAAA37B,EAAA,SAAAi8B,EAAAE,GACA,IAAAP,EAAAG,EAAAI,KACAH,IAAAC,GAAA97B,EAAA67B,EAAAC,EAAAh8B,EAAAC,EAAAE,IACA,OAAA27B,EAAAn0D,KAAAu0D,KAEW,CACX/sD,KACA,YAEK,GACL4sD,IAAAC,IACA97B,EAAA67B,EAAAC,EAAAh8B,EAAAC,EAAAE,GACA,CACAhxB,KACA,OAKA,OAFAgxB,EAAArwB,OAAA+V,GACAsa,EAAArwB,OAAAiwB,GACA5wB,yBC/EA,IAAA4sB,EAAAv2B,EAAA,QAeAC,EAAAC,QAJA,SAAAC,GACA,OAAAo2B,EAAAn2B,KAAAD,GAAA0C,IAAA1C,uCCVA,IAAA0K,EAAA7K,EAAA,QAyDAC,EAAAC,QAAA,SAAAqI,GAEA,IAAAgF,EAAA1C,EAAA0C,KAEAhF,EAAAwa,gBAAAxa,EAAA4f,MAAAnjB,QACA2e,cAAA,SAAA1iB,GACA,uBAAAA,GACAA,EAEAsH,EAAA4f,MAAA7mB,UAAAqiB,cAAAhiB,KAAAvB,KAAAa,IAGA2iB,uBAAA,WACA,IAAAnW,EAAArN,KAEA6iB,EADAxV,EAAAf,QACAtB,MAKA,GAAA6X,EAAA5X,YAAA,CACA,IAAAsrD,EAAA9rD,EAAAgxC,KAAApuC,EAAA5J,KACA+yD,EAAA/rD,EAAAgxC,KAAApuC,EAAAzJ,KAEA2yD,EAAA,GAAAC,EAAA,EAEAnpD,EAAAzJ,IAAA,EACK2yD,EAAA,GAAAC,EAAA,IAELnpD,EAAA5J,IAAA,GAIA,IAAAgzD,WAAA5zC,EAAApf,cAAAof,EAAA6zC,aACAC,WAAA9zC,EAAAjf,cAAAif,EAAA+zC,sBAEA/zC,EAAApf,IACA4J,EAAA5J,IAAAof,EAAApf,aACIof,EAAA6zC,eACJ,OAAArpD,EAAA5J,IACA4J,EAAA5J,IAAAof,EAAA6zC,aAEArpD,EAAA5J,IAAAD,KAAAC,IAAA4J,EAAA5J,IAAAof,EAAA6zC,wBAIA7zC,EAAAjf,IACAyJ,EAAAzJ,IAAAif,EAAAjf,aACIif,EAAA+zC,eACJ,OAAAvpD,EAAAzJ,IACAyJ,EAAAzJ,IAAAif,EAAA+zC,aAEAvpD,EAAAzJ,IAAAJ,KAAAI,IAAAyJ,EAAAzJ,IAAAif,EAAA+zC,eAIAH,IAAAE,GAKAtpD,EAAA5J,KAAA4J,EAAAzJ,MACA6yD,EACAppD,EAAAzJ,IAAAyJ,EAAA5J,IAAA,EAEA4J,EAAA5J,IAAA4J,EAAAzJ,IAAA,GAKAyJ,EAAA5J,MAAA4J,EAAAzJ,MACAyJ,EAAAzJ,MAEAif,EAAA5X,aACAoC,EAAA5J,QAIAggB,aAAAtW,EACA6uC,yBAAA7uC,EAEAob,WAAA,WACA,IAAAlb,EAAArN,KAEA6iB,EADAxV,EAAAf,QACAtB,MAMA+wC,EAAA1uC,EAAAoW,eAGAozC,GACA9a,SAHAA,EAAAv4C,KAAAI,IAAA,EAAAm4C,GAIAt4C,IAAAof,EAAApf,IACAG,IAAAif,EAAAjf,IACAusC,SAAA1lC,EAAA2I,eAAAyP,EAAAi0C,cAAAj0C,EAAAstB,WAEAnlC,EAAAqC,EAAArC,MApJA,SAAA6vC,EAAAC,GACA,IAKA34B,EALAnX,KAMA,GAAA6vC,EAAA1K,UAAA0K,EAAA1K,SAAA,EACAhuB,EAAA04B,EAAA1K,aACE,CACF,IAAA4mB,EAAAtsD,EAAA0oD,QAAArY,EAAAl3C,IAAAk3C,EAAAr3C,QACA0e,EAAA1X,EAAA0oD,QAAA4D,GAAAlc,EAAAkB,SAAA,OAEA,IAAAib,EAAAxzD,KAAAsO,MAAAgpC,EAAAr3C,IAAA0e,KACA80C,EAAAzzD,KAAAmgB,KAAAm3B,EAAAl3C,IAAAue,KAGA04B,EAAAp3C,KAAAo3C,EAAAj3C,KAAAi3C,EAAA1K,UAEA1lC,EAAAqmD,aAAAjW,EAAAj3C,IAAAi3C,EAAAp3C,KAAAo3C,EAAA1K,SAAAhuB,EAAA,OACA60C,EAAAnc,EAAAp3C,IACAwzD,EAAApc,EAAAj3C,KAIA,IAAAszD,GAAAD,EAAAD,GAAA70C,EAGA+0C,EADAzsD,EAAAmmD,aAAAsG,EAAA1zD,KAAA+b,MAAA23C,GAAA/0C,EAAA,KACA3e,KAAA+b,MAAA23C,GAEA1zD,KAAAmgB,KAAAuzC,GAGA,IAAA9b,EAAA,EACAj5B,EAAA,IACAi5B,EAAA53C,KAAAqZ,IAAA,GAAAsF,EAAA1Z,WAAA5G,OAAA,GACAm1D,EAAAxzD,KAAA+b,MAAAy3C,EAAA5b,KACA6b,EAAAzzD,KAAA+b,MAAA03C,EAAA7b,MAEApwC,EAAAjJ,cAAA84C,EAAAp3C,IAAAo3C,EAAAp3C,IAAAuzD,GACA,QAAAnmB,EAAA,EAAgBA,EAAAqmB,IAAermB,EAC/B7lC,EAAAjJ,KAAAyB,KAAA+b,OAAAy3C,EAAAnmB,EAAA1uB,GAAAi5B,MAIA,OAFApwC,EAAAjJ,cAAA84C,EAAAj3C,IAAAi3C,EAAAj3C,IAAAqzD,GAEAjsD,EA7CA,CAoJA6rD,EAAAxpD,GAEAA,EAAA2uC,2BAIA3uC,EAAAzJ,IAAA6G,EAAA7G,IAAAoH,GACAqC,EAAA5J,IAAAgH,EAAAhH,IAAAuH,GAEA6X,EAAAmD,SACAhb,EAAAgb,UAEA3Y,EAAA0U,MAAA1U,EAAAzJ,IACAyJ,EAAA2U,IAAA3U,EAAA5J,MAEA4J,EAAA0U,MAAA1U,EAAA5J,IACA4J,EAAA2U,IAAA3U,EAAAzJ,MAGAggB,qBAAA,WACA,IAAAvW,EAAArN,KACAqN,EAAAqZ,eAAArZ,EAAArC,MAAA+T,QACA1R,EAAA+3C,cAAA/3C,EAAArC,MAAAhF,QAAA,GAEAmC,EAAA4f,MAAA7mB,UAAA0iB,qBAAAriB,KAAA8L,0CChLA,IAAA5C,EAAA7K,EAAA,QAEAu3D,EAAA,WACAC,EAAA,WACAC,EAAAD,EAAA,iBACAE,EAAAF,EAAA,mBACAG,GAAA,yCAOAC,GACAC,WAAA,YACAC,UAAA,YACAC,SAAA,UACAC,aAAA,aACAC,YAAA,YACAC,YAAA,YACAC,UAAA,UACAC,aAAA,WACAC,WAAA,YAYA,SAAAC,EAAA1oD,EAAAqlD,GACA,IAAAh0D,EAAA4J,EAAA0pD,SAAA3kD,EAAAqlD,GACAllC,EAAA9uB,KAAA+uB,MAAA,qBACA,OAAAD,EAAAxM,OAAAwM,EAAA,WA+DA,IAiBAwoC,IAjBA,WACA,IAAAC,KACA,IACA,IAAA9rD,EAAArL,OAAA0P,kBAAwC,WACxCrH,IAAA,WACA8uD,QAGAz4C,OAAAxH,iBAAA,SAAA7L,GACE,MAAAlM,IAGF,OAAAg4D,EAZA,KAiB2DC,YAE3D,SAAAlgD,EAAA82C,EAAAznD,EAAAwQ,GACAi3C,EAAA92C,iBAAA3Q,EAAAwQ,EAAAmgD,GAGA,SAAA//C,EAAA62C,EAAAznD,EAAAwQ,GACAi3C,EAAA72C,oBAAA5Q,EAAAwQ,EAAAmgD,GAGA,SAAAG,EAAA9wD,EAAAgE,EAAAjI,EAAAG,EAAA60D,GACA,OACA/wD,OACAgE,QACAwN,OAAAu/C,GAAA,KACAh1D,eAAA,KACAG,eAAA,MA4HA,SAAA80D,EAAAvJ,EAAAj3C,EAAAxM,GACA,IAnHA4pC,EAAAC,EACAojB,EACAtvD,EAiHAuvD,EAAAzJ,EAAAkI,KAAAlI,EAAAkI,OAGAwB,EAAAD,EAAAC,QAnGA,SAAA9K,GACA,IAAA8K,EAAAjJ,SAAA73B,cAAA,OACA+gC,EAAAxB,EAAA,eAEAllD,EACA,oHAUAymD,EAAAzmD,MAAA2mD,QAAA3mD,EACAymD,EAAAG,UAAAF,EACAD,EAAAI,UACA,eAAAH,EAAA,mBAAA1mD,EAAA,0GASA0mD,EAAA,mBAAA1mD,EAAA,qFAUA,IAAA8mD,EAAAL,EAAAM,WAAA,GACAC,EAAAP,EAAAM,WAAA,GAEAN,EAAAQ,OAAA,WACAH,EAAAI,WAtCA,IAuCAJ,EAAAK,UAvCA,IAwCAH,EAAAE,WAxCA,IAyCAF,EAAAG,UAzCA,KA2CA,IAAAC,EAAA,WACAX,EAAAQ,SACAtL,KAMA,OAHA11C,EAAA6gD,EAAA,SAAAM,EAAAC,KAAAP,EAAA,WACA7gD,EAAA+gD,EAAA,SAAAI,EAAAC,KAAAL,EAAA,WAEAP,EAtDA,EAnBAvjB,EAsHA,WACA,GAAAsjB,EAAAC,QACA,OAAA3gD,EAAAsgD,EAAA,SAAA9sD,KAvHAitD,KACAtvD,KAEA,WACAA,EAAAsW,MAAAve,UAAA6d,MAAAxd,KAAAD,WACA+zC,KAAAr1C,KAEAy4D,IACAA,KACAhuD,EAAA0f,iBAAA5oB,KAAAoe,OAAA,WACA84C,KACArjB,EAAAhsC,MAAAisC,EAAAlsC,UAiEA,SAAA8lD,EAAApB,GACA,IAAA6K,EAAAzJ,EAAAkI,KAAAlI,EAAAkI,OACAqC,EAAAd,EAAAe,YAAA,SAAAr5D,GACAA,EAAAs5D,gBAAApC,GACAzJ,KAIApjD,EAAAwD,KAAAspD,EAAA,SAAA/vD,GACA2Q,EAAA82C,EAAAznD,EAAAgyD,KAQAd,EAAAiB,SAAA1K,EAAA2K,aAEA3K,EAAA4K,UAAAr3D,IAAA60D,GAnBA,CAiDApI,EAAA,WACA,GAAAyJ,EAAAC,QAAA,CACA,IAAApE,EAAAtF,EAAAG,WACAmF,OAAAoE,EAAAvJ,YACAmF,EAAAuF,aAAAnB,EAAApE,EAAAwF,YAIApB,EAAAQ,YAKA,SAAAa,EAAA/K,GACA,IAAAyJ,EAAAzJ,EAAAkI,OACAwB,EAAAD,EAAAC,eAEAD,EAAAC,QA5CA,SAAA1J,GACA,IAAAyJ,EAAAzJ,EAAAkI,OACAqC,EAAAd,EAAAe,YAEAD,IACA/uD,EAAAwD,KAAAspD,EAAA,SAAA/vD,GACA4Q,EAAA62C,EAAAznD,EAAAgyD,YAGAd,EAAAe,aAGAxK,EAAA4K,UAAAI,OAAA5C,GAZA,CA6CApI,GAEA0J,KAAAvJ,YACAuJ,EAAAvJ,WAAA8K,YAAAvB,GAiBA94D,EAAAC,SAMA+rD,SAAA,oBAAAlsC,QAAA,oBAAA+vC,SAEA9+C,WAAA,WACA,IAtBAhB,EAAAuqD,EAEAjoD,EAoBAkoD,EAAA,kCAtBAD,EA2BA,sBAAA7C,EAAA,IAAoD8C,EAAA,eACpD9C,EAAA,IAA4C8C,EAAA,KAC5C/C,EAAA,sBACAC,EAAA,qBACAA,EAAA,YA7BAplD,GAFAtC,EAwBA5P,MAtBAq6D,QAAA3K,SAAA73B,cAAA,SACAjoB,EAAAyqD,SACAzqD,EAAAyqD,OAAAnoD,EACAioD,EAAA,mBAAAA,EACAjoD,EAAAooD,aAAA,mBACA5K,SAAA6K,qBAAA,WAAAC,YAAAtoD,IAGAA,EAAAsoD,YAAA9K,SAAA+K,eAAAN,KA0BA9pD,eAAA,SAAArI,EAAAkI,GACA,iBAAAlI,EACAA,EAAA0nD,SAAAgL,eAAA1yD,GACGA,EAAAnG,SAEHmG,IAAA,IAGAA,KAAAsI,SAEAtI,IAAAsI,QAMA,IAAAF,EAAApI,KAAA2wB,YAAA3wB,EAAA2wB,WAAA,MASA,OAAAvoB,KAAAE,SAAAtI,GAtTA,SAAAsI,EAAAJ,GACA,IAAAgC,EAAA5B,EAAA4B,MAIAyoD,EAAArqD,EAAAsqD,aAAA,UACAC,EAAAvqD,EAAAsqD,aAAA,SAoBA,GAjBAtqD,EAAA6mD,IACA2D,SACAh3D,OAAA62D,EACA53D,MAAA83D,EACA3oD,OACAtH,QAAAsH,EAAAtH,QACA9G,OAAAoO,EAAApO,OACAf,MAAAmP,EAAAnP,SAQAmP,EAAAtH,QAAAsH,EAAAtH,SAAA,QAEA,OAAAiwD,GAAA,KAAAA,EAAA,CACA,IAAAE,EAAA7C,EAAA5nD,EAAA,kBACAyqD,IACAzqD,EAAAvN,MAAAg4D,GAIA,UAAAJ,GAAA,KAAAA,EACA,QAAArqD,EAAA4B,MAAApO,OAIAwM,EAAAxM,OAAAwM,EAAAvN,OAAAmN,EAAA5D,QAAAkE,aAAA,OACG,CACH,IAAAwqD,EAAA9C,EAAA5nD,EAAA,mBACAyqD,IACAzqD,EAAAxM,OAAAk3D,IA1CA,CAuTAhzD,EAAAkI,GACAE,GAGA,MAGAqH,eAAA,SAAArH,GACA,IAAAE,EAAAF,EAAAE,OACA,GAAAA,EAAA6mD,GAAA,CAIA,IAAA2D,EAAAxqD,EAAA6mD,GAAA2D,SACA,kBAAA16C,QAAA,SAAAtB,GACA,IAAAje,EAAAi6D,EAAAh8C,GACArU,EAAAyL,cAAArV,GACAyP,EAAA2qD,gBAAAn8C,GAEAxO,EAAAgqD,aAAAx7C,EAAAje,KAIA4J,EAAAwD,KAAA6sD,EAAA5oD,UAAkC,SAAArR,EAAAd,GAClCuQ,EAAA4B,MAAAnS,GAAAc,IAOAyP,EAAAvN,MAAAuN,EAAAvN,aAEAuN,EAAA6mD,KAGAh/C,iBAAA,SAAA3M,EAAAhE,EAAAwQ,GACA,IAAA1H,EAAA9E,EAAA8E,OACA,cAAA9I,EAAA,CAMA,IAAAkxD,EAAA1gD,EAAAm/C,KAAAn/C,EAAAm/C,OAMAh/C,EAAA7H,EAAA9I,GALAkxD,EAAAwC,UAAAxC,EAAAwC,aACA1vD,EAAAjE,GAAA,IAAAC,GAAA,SAAA2zD,GACAnjD,EA1QA,SAAAmjD,EAAA3vD,GACA,IAAAhE,EAAAgwD,EAAA2D,EAAA3zD,OAAA2zD,EAAA3zD,KACAsa,EAAArX,EAAAkjD,oBAAAwN,EAAA3vD,GACA,OAAA8sD,EAAA9wD,EAAAgE,EAAAsW,EAAAve,EAAAue,EAAApe,EAAAy3D,GAHA,CA0QAA,EAAA3vD,WAPAgtD,EAAAloD,EAAA0H,EAAAxM,IAaA4M,oBAAA,SAAA5M,EAAAhE,EAAAwQ,GACA,IAAA1H,EAAA9E,EAAA8E,OACA,cAAA9I,EAAA,CAMA,IAEAgyD,IAFAxhD,EAAAm/C,QACA+D,aACA1vD,EAAAjE,GAAA,IAAAC,GACAgyD,GAIAphD,EAAA9H,EAAA9I,EAAAgyD,QAXAQ,EAAA1pD,KA0BA7F,EAAA2wD,SAAAjjD,EAWA1N,EAAA4wD,YAAAjjD,wBCxcA,IAAAkjD,EAAA17D,EAAA,QACAmrC,EAAAnrC,EAAA,QACAgT,EAAAhT,EAAA,QAaAC,EAAAC,QAJA,SAAA+I,GACA,OAAAyyD,EAAAzyD,EAAA+J,EAAAm4B,uCCVAlrC,EAAAC,QAAA,SAAAqI,GAEAA,EAAA8wB,UAAA,SAAA7oB,EAAAF,GAGA,OAFAA,EAAA1I,KAAA,YAEA,IAAAW,EAAAiI,EAAAF,yBCUArQ,EAAAC,QAVA,SAAAmC,GACA,IAAAM,GAAA,EACAgH,EAAAkW,MAAAxd,EAAAD,MAKA,OAHAC,EAAAme,QAAA,SAAAvf,GACA0I,IAAAhH,GAAA1B,IAEA0I,uBCDA1J,EAAAC,QANA,SAAA4I,GACA,gBAAA7H,GACA,OAAA6H,EAAA7H,2BCTA,IAAA06D,EAAA37D,EAAA,QASAuB,EAHAF,OAAAC,UAGAC,eA+EAtB,EAAAC,QAhEA,SAAA+I,EAAAsxB,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAM,EAtBA,EAsBAT,EACAohC,EAAAD,EAAA1yD,GACA4yD,EAAAD,EAAA35D,OAIA,GAAA45D,GAHAF,EAAAphC,GACAt4B,SAEAg5B,EACA,SAGA,IADA,IAAAt4B,EAAAk5D,EACAl5D,KAAA,CACA,IAAAxC,EAAAy7D,EAAAj5D,GACA,KAAAs4B,EAAA96B,KAAAo6B,EAAAh5B,EAAAI,KAAA44B,EAAAp6B,IACA,SAIA,IAAAszB,EAAAkH,EAAAjxB,IAAAT,GACA,GAAAwqB,GAAAkH,EAAAjxB,IAAA6wB,GACA,OAAA9G,GAAA8G,EAEA,IAAA5wB,KACAgxB,EAAAt4B,IAAA4G,EAAAsxB,GACAI,EAAAt4B,IAAAk4B,EAAAtxB,GAGA,IADA,IAAA6yD,EAAA7gC,IACAt4B,EAAAk5D,GAAA,CAEA,IAAAhmC,EAAA5sB,EADA9I,EAAAy7D,EAAAj5D,IAEA6zD,EAAAj8B,EAAAp6B,GAEA,GAAAs6B,EACA,IAAAg8B,EAAAx7B,EACAR,EAAA+7B,EAAA3gC,EAAA11B,EAAAo6B,EAAAtxB,EAAA0xB,GACAF,EAAA5E,EAAA2gC,EAAAr2D,EAAA8I,EAAAsxB,EAAAI,GAGA,cAAA87B,EACA5gC,IAAA2gC,GAAA97B,EAAA7E,EAAA2gC,EAAAh8B,EAAAC,EAAAE,GACA87B,GACA,CACA9sD,KACA,MAEAmyD,MAAA,eAAA37D,GAEA,GAAAwJ,IAAAmyD,EAAA,CACA,IAAAC,EAAA9yD,EAAAuQ,YACAwiD,EAAAzhC,EAAA/gB,YAGAuiD,GAAAC,GACA,gBAAA/yD,GAAA,gBAAAsxB,KACA,mBAAAwhC,mBACA,mBAAAC,qBACAryD,MAKA,OAFAgxB,EAAArwB,OAAArB,GACA0xB,EAAArwB,OAAAiwB,GACA5wB,uBCnDA1J,EAAAC,QALA,SAAAe,GACA,uBAAAA,GACAA,GAAA,GAAAA,EAAA,MAAAA,GA9BA,mBA8BAusC,qBC/BA,IAAAztC,EAAAC,EAAA,QAkBAC,EAAAC,QAPA,SAAAC,GACA,IAAA4B,EAAA3B,KAAAC,SACAsC,EAAA5C,EAAAgC,EAAA5B,GAEA,OAAAwC,EAAA,SAAAZ,EAAAY,GAAA,KAAAs5D,KAAA,SAAA17D,EAAAC,EAAAC,GCfA,IAIAisC,EAJA1sC,EAAA,OAAAA,CACAA,EAAA,QAGA,YAEAC,EAAAC,QAAAwsC,qCCJA,IAAA5pC,EAAA9C,EAAA,QACA6K,EAAA7K,EAAA,QACA+P,EAAA/P,EAAA,QAEAC,EAAAC,QAAA,SAAAqI,GAEAA,EAAAmL,cAGAwoD,gBAKAp5D,YACAmlB,kBAAA,SAAArgB,EAAAu0D,EAAAC,GACAh8D,KAAA87D,aAAAt0D,GAAAu0D,EACA/7D,KAAA0C,SAAA8E,GAAAiD,EAAAkU,MAAAq9C,IAEAzoD,oBAAA,SAAA/L,GACA,OAAAxH,KAAA87D,aAAA36D,eAAAqG,GAAAxH,KAAA87D,aAAAt0D,WAEA2oD,iBAAA,SAAA3oD,GAEA,OAAAxH,KAAA0C,SAAAvB,eAAAqG,GAAAiD,EAAA0lB,UAA+DztB,EAAAgI,MAAA1K,KAAA0C,SAAA8E,SAE/Dy0D,oBAAA,SAAAz0D,EAAA00D,GACAl8D,KACA0C,SAAAvB,eAAAqG,KADAxH,KAEA0C,SAAA8E,GAAAiD,EAAA7F,OAFA5E,KAEA0C,SAAA8E,GAAA00D,KAGAxoD,kBAAA,SAAAlI,GAEAf,EAAAwD,KAAAzC,EAAAnE,OAAA,SAAAqD,GAEAA,EAAA+gB,UAAA/gB,EAAA4B,QAAAmf,UACA/gB,EAAAjD,SAAAiD,EAAA4B,QAAA7E,SACAiD,EAAA2T,OAAA3T,EAAA4B,QAAA+R,OACA1O,EAAA0f,OAAA7jB,EAAAd,2CCvCA,IAAAD,EAAA7K,EAAA,QAOA8V,GACAqL,OAAA,SAAA5gB,GACA,OAAAA,GAGAg8D,WAAA,SAAAh8D,GACA,OAAAA,KAGAi8D,YAAA,SAAAj8D,GACA,OAAAA,KAAA,IAGAk8D,cAAA,SAAAl8D,GACA,OAAAA,GAAA,MACA,GAAAA,KAEA,MAAAA,KAAA,OAGAm8D,YAAA,SAAAn8D,GACA,OAAAA,OAGAo8D,aAAA,SAAAp8D,GACA,OAAAA,GAAA,GAAAA,IAAA,GAGAq8D,eAAA,SAAAr8D,GACA,OAAAA,GAAA,MACA,GAAAA,MAEA,KAAAA,GAAA,GAAAA,IAAA,IAGAs8D,YAAA,SAAAt8D,GACA,OAAAA,SAGAu8D,aAAA,SAAAv8D,GACA,SAAAA,GAAA,GAAAA,MAAA,IAGAw8D,eAAA,SAAAx8D,GACA,OAAAA,GAAA,MACA,GAAAA,SAEA,KAAAA,GAAA,GAAAA,MAAA,IAGAy8D,YAAA,SAAAz8D,GACA,OAAAA,WAGA08D,aAAA,SAAA18D,GACA,OAAAA,GAAA,GAAAA,QAAA,GAGA28D,eAAA,SAAA38D,GACA,OAAAA,GAAA,MACA,GAAAA,UAEA,KAAAA,GAAA,GAAAA,QAAA,IAGA48D,WAAA,SAAA58D,GACA,SAAAqD,KAAA6hB,IAAAllB,GAAAqD,KAAA8H,GAAA,KAGA0xD,YAAA,SAAA78D,GACA,OAAAqD,KAAA0hB,IAAA/kB,GAAAqD,KAAA8H,GAAA,KAGA2xD,cAAA,SAAA98D,GACA,WAAAqD,KAAA6hB,IAAA7hB,KAAA8H,GAAAnL,GAAA,IAGA+8D,WAAA,SAAA/8D,GACA,WAAAA,EAAA,EAAAqD,KAAAqZ,IAAA,MAAA1c,EAAA,KAGAg9D,YAAA,SAAAh9D,GACA,WAAAA,EAAA,IAAAqD,KAAAqZ,IAAA,MAAA1c,IAGAi9D,cAAA,SAAAj9D,GACA,WAAAA,EACA,EAEA,IAAAA,EACA,GAEAA,GAAA,MACA,GAAAqD,KAAAqZ,IAAA,MAAA1c,EAAA,IAEA,MAAAqD,KAAAqZ,IAAA,QAAA1c,KAGAk9D,WAAA,SAAAl9D,GACA,OAAAA,GAAA,EACAA,IAEAqD,KAAAm8B,KAAA,EAAAx/B,KAAA,IAGAm9D,YAAA,SAAAn9D,GACA,OAAAqD,KAAAm8B,KAAA,GAAAx/B,GAAA,GAAAA,IAGAo9D,cAAA,SAAAp9D,GACA,OAAAA,GAAA,OACA,IAAAqD,KAAAm8B,KAAA,EAAAx/B,KAAA,GAEA,IAAAqD,KAAAm8B,KAAA,GAAAx/B,GAAA,GAAAA,GAAA,IAGAq9D,cAAA,SAAAr9D,GACA,IAAAs5B,EAAA,QACAnb,EAAA,EACAC,EAAA,EACA,WAAApe,EACA,EAEA,IAAAA,EACA,GAEAme,IACAA,EAAA,IAEAC,EAAA,GACAA,EAAA,EACAkb,EAAAnb,EAAA,GAEAmb,EAAAnb,GAAA,EAAA9a,KAAA8H,IAAA9H,KAAAi6D,KAAA,EAAAl/C,IAEAA,EAAA/a,KAAAqZ,IAAA,MAAA1c,GAAA,IAAAqD,KAAA0hB,KAAA/kB,EAAAs5B,IAAA,EAAAj2B,KAAA8H,IAAAgT,KAGAo/C,eAAA,SAAAv9D,GACA,IAAAs5B,EAAA,QACAnb,EAAA,EACAC,EAAA,EACA,WAAApe,EACA,EAEA,IAAAA,EACA,GAEAme,IACAA,EAAA,IAEAC,EAAA,GACAA,EAAA,EACAkb,EAAAnb,EAAA,GAEAmb,EAAAnb,GAAA,EAAA9a,KAAA8H,IAAA9H,KAAAi6D,KAAA,EAAAl/C,GAEAA,EAAA/a,KAAAqZ,IAAA,MAAA1c,GAAAqD,KAAA0hB,KAAA/kB,EAAAs5B,IAAA,EAAAj2B,KAAA8H,IAAAgT,GAAA,IAGAq/C,iBAAA,SAAAx9D,GACA,IAAAs5B,EAAA,QACAnb,EAAA,EACAC,EAAA,EACA,WAAApe,EACA,EAEA,IAAAA,GAAA,IACA,GAEAme,IACAA,EAAA,KAEAC,EAAA,GACAA,EAAA,EACAkb,EAAAnb,EAAA,GAEAmb,EAAAnb,GAAA,EAAA9a,KAAA8H,IAAA9H,KAAAi6D,KAAA,EAAAl/C,GAEApe,EAAA,EACAoe,EAAA/a,KAAAqZ,IAAA,MAAA1c,GAAA,IAAAqD,KAAA0hB,KAAA/kB,EAAAs5B,IAAA,EAAAj2B,KAAA8H,IAAAgT,IAAA,GAEAC,EAAA/a,KAAAqZ,IAAA,OAAA1c,GAAA,IAAAqD,KAAA0hB,KAAA/kB,EAAAs5B,IAAA,EAAAj2B,KAAA8H,IAAAgT,GAAA,OAEAs/C,WAAA,SAAAz9D,GACA,IAAAs5B,EAAA,QACA,OAAAt5B,MAAAs5B,EAAA,GAAAt5B,EAAAs5B,IAGAokC,YAAA,SAAA19D,GACA,IAAAs5B,EAAA,QACA,OAAAt5B,GAAA,GAAAA,IAAAs5B,EAAA,GAAAt5B,EAAAs5B,GAAA,GAGAqkC,cAAA,SAAA39D,GACA,IAAAs5B,EAAA,QACA,OAAAt5B,GAAA,MACAA,MAAA,GAAAs5B,GAAA,QAAAt5B,EAAAs5B,GAAA,GAEA,KAAAt5B,GAAA,GAAAA,IAAA,GAAAs5B,GAAA,QAAAt5B,EAAAs5B,GAAA,IAGAskC,aAAA,SAAA59D,GACA,SAAAuV,EAAAsoD,cAAA,EAAA79D,IAGA69D,cAAA,SAAA79D,GACA,OAAAA,EAAA,OACA,OAAAA,IAEAA,EAAA,OACA,QAAAA,GAAA,UAAAA,EAAA,IAEAA,EAAA,SACA,QAAAA,GAAA,WAAAA,EAAA,MAEA,QAAAA,GAAA,YAAAA,EAAA,SAGA89D,gBAAA,SAAA99D,GACA,OAAAA,EAAA,GACA,GAAAuV,EAAAqoD,aAAA,EAAA59D,GAEA,GAAAuV,EAAAsoD,cAAA,EAAA79D,EAAA,QAIAN,EAAAC,SACA4V,WAYAjL,EAAAyzD,cAAAxoD,wBCzPA,IAAAulB,EAAAr7B,EAAA,QASAuB,EAHAF,OAAAC,UAGAC,eAoBAtB,EAAAC,QATA,SAAAC,GACA,IAAA4B,EAAA3B,KAAAC,SACA,GAAAg7B,EAAA,CACA,IAAA1xB,EAAA5H,EAAA5B,GACA,MArBA,8BAqBAwJ,OAAA40D,EAAA50D,EAEA,OAAApI,EAAAI,KAAAI,EAAA5B,GAAA4B,EAAA5B,YAAAuwB,uBC1BA,IAAA8tC,EAAAx+D,EAAA,QACAy+D,EAAAz+D,EAAA,QACA0+D,EAAA1+D,EAAA,QACAwK,EAAAxK,EAAA,QACAi1D,EAAAj1D,EAAA,QA0BAC,EAAAC,QAjBA,SAAAe,GAGA,yBAAAA,EACAA,EAEA,MAAAA,EACAy9D,EAEA,iBAAAz9D,EACAuJ,EAAAvJ,GACAw9D,EAAAx9D,EAAA,GAAAA,EAAA,IACAu9D,EAAAv9D,GAEAg0D,EAAAh0D,uCCnBA,IAAA6B,EAAA9C,EAAA,QACAwE,EAAAxE,EAAA,QACA6K,EAAA7K,EAAA,QAEA8C,EAAAyB,KAAA,UACA0L,SACAi8C,QACAyS,iBAKA,IAAAC,GACArwD,QAAA,SAAAyQ,GACA,IAAArc,EAAAqc,EAAAtY,KACAkF,EAAAoT,EAAApT,MACAQ,EAAAR,EAAAS,eAAA1J,GAEA+uB,EADAtlB,GAAAR,EAAAgL,iBAAAjU,IACAyJ,EAAAmC,QAAAwjB,cACA9vB,EAAAyvB,EAAAzvB,QAAA,EAEA,OAAAA,EAAA,SAAAowB,EAAA7rB,GACA,OAAAA,EAAAvE,GAAAyvB,EAAAlrB,GAAAtD,OAAA,MADA,MAKA27D,SAAA,SAAA7/C,GACA,IAAA6/C,EAAA7/C,EAAA6/C,SACAl7D,EAAAk7D,IAAAl7D,EAAA,KACAG,EAAA+6D,IAAA/6D,EAAA,KAEA,gBAAAuuB,GACA,OACA1uB,EAAA,OAAAA,EAAA0uB,EAAA1uB,IACAG,EAAA,OAAAA,EAAAuuB,EAAAvuB,QAOA,SAAAg7D,EAAA9J,EAAAryD,EAAAwL,GACA,IAEA8Q,EAFA2U,EAAAohC,EAAAvlD,WACA/I,EAAAktB,EAAAltB,KAOA,YAJAA,IACAA,IAAAktB,EAAAlvB,sBAGAgC,GAAA,OAAAA,EACA,SAGA,QAAAA,EACA,eAIA,GADAuY,EAAA6tC,WAAApmD,EAAA,IACAo1B,SAAA7c,IAAArb,KAAAsO,MAAA+M,OAKA,MAJA,MAAAvY,EAAA,UAAAA,EAAA,KACAuY,EAAAtc,EAAAsc,KAGAA,IAAAtc,GAAAsc,EAAA,GAAAA,GAAA9Q,IAIA8Q,EAGA,OAAAvY,GAEA,aACA,cACA,UACA,YACA,WACA,eAEA,aACA,YACA,UACA,OAAAA,EAEA,QACA,UAIA,SAAAq4D,EAAA//C,GACA,IAIA1Z,EAJAsuB,EAAA5U,EAAAg2C,GAAAvlD,WACA3E,EAAAkU,EAAAg2C,GAAAxlD,WACA9I,EAAAsY,EAAAtY,KACAuY,EAAA,KAGA,GAAA6c,SAAAp1B,GACA,YAmBA,GAZA,UAAAA,EACAuY,WAAA2U,EAAAorC,YAAAl0D,EAAAxG,OAAAsvB,EAAAorC,YACE,QAAAt4D,EACFuY,WAAA2U,EAAAqrC,SAAAn0D,EAAA1G,IAAAwvB,EAAAqrC,kBACErrC,EAAAsrC,UACFjgD,EAAA2U,EAAAsrC,UACEp0D,EAAA0b,gBACFvH,EAAAnU,EAAA0b,kBACE1b,EAAA6e,eACF1K,EAAAnU,EAAA6e,yBAGA1K,GAAA,OAAAA,EAAA,CACA,YAAAA,EAAAtb,YAAAsb,EAAAnb,EACA,OAAAmb,EAGA,oBAAAA,GAAA6c,SAAA7c,GAEA,OACAtb,GAFA2B,EAAAwF,EAAAud,gBAEApJ,EAAA,KACAnb,EAAAwB,EAAA,KAAA2Z,GAKA,YAGA,SAAAkgD,EAAA/oB,EAAAzzC,EAAAg8D,GACA,IAGA1/C,EAFAvY,EADA0vC,EAAAzzC,GACA+D,KACA04D,GAAAz8D,GAGA,IAAAg8D,EACA,OAAAj4D,EAGA,UAAAA,IAAA,IAAA04D,EAAAh5D,QAAAM,IAAA,CACA,IAAAo1B,SAAAp1B,GACA,OAAAA,EAIA,KADAuY,EAAAm3B,EAAA1vC,IAEA,SAGA,GAAAuY,EAAAogD,QACA,OAAA34D,EAGA04D,EAAAj9D,KAAAuE,GACAA,EAAAuY,EAAAvY,KAGA,SAGA,SAAA44D,EAAAtgD,GACA,IAAAtY,EAAAsY,EAAAtY,KACAkB,EAAA,UAEA,WAAAlB,EACA,MAGAo1B,SAAAp1B,KACAkB,EAAA,YAGAg3D,EAAAh3D,GAAAoX,IAGA,SAAAugD,EAAAltC,GACA,OAAAA,MAAAgB,KAGA,SAAAmsC,EAAAp6D,EAAAq6D,EAAAC,EAAAC,EAAAC,GACA,IAAAp5D,EAEA,GAAAm5D,GAAAC,EAAA,CAMA,IADAx6D,EAAAmB,OAAAk5D,EAAA,GAAA97D,EAAA87D,EAAA,GAAA37D,GACA0C,EAAA,EAAYA,EAAAm5D,IAAUn5D,EACtBqE,EAAA6F,OAAAjK,OAAArB,EAAAq6D,EAAAj5D,EAAA,GAAAi5D,EAAAj5D,IAOA,IAHApB,EAAAqB,OAAAi5D,EAAAE,EAAA,GAAAj8D,EAAA+7D,EAAAE,EAAA,GAAA97D,GAGA0C,EAAAo5D,EAAA,EAAmBp5D,EAAA,IAAOA,EAC1BqE,EAAA6F,OAAAjK,OAAArB,EAAAs6D,EAAAl5D,GAAAk5D,EAAAl5D,EAAA,QAiDAvG,EAAAC,SACAyH,GAAA,SAEAk4D,oBAAA,SAAAj0D,EAAAc,GACA,IAGAN,EAAA5F,EAAAwuD,EAAAh2C,EAHA7Q,GAAAvC,EAAA7J,KAAA+J,cAAA7J,OACA08D,EAAAjyD,EAAAiyD,UACAvoB,KAGA,IAAA5vC,EAAA,EAAaA,EAAA2H,IAAW3H,EAGxBwY,EAAA,MADAg2C,GADA5oD,EAAAR,EAAAS,eAAA7F,IACA+H,UAGAymD,EAAAvlD,QAAAulD,aAAAxwD,EAAA4b,OACApB,GACAqgD,QAAAzzD,EAAAgL,iBAAApQ,GACAE,KAAAo4D,EAAA9J,EAAAxuD,EAAA2H,GACAvC,QACAopD,OAIA5oD,EAAA0zD,QAAA9gD,EACAo3B,EAAAj0C,KAAA6c,GAGA,IAAAxY,EAAA,EAAaA,EAAA2H,IAAW3H,GACxBwY,EAAAo3B,EAAA5vC,MAKAwY,EAAAtY,KAAAy4D,EAAA/oB,EAAA5vC,EAAAm4D,GACA3/C,EAAA6/C,SAAAE,EAAA//C,GACAA,EAAA+gD,OAAAT,EAAAtgD,KAIAghD,kBAAA,SAAAp0D,EAAArC,GACA,IAAA6C,EAAA7C,EAAA6C,KAAA0zD,QACA,GAAA1zD,EAAA,CAIA,IAAAhH,EAAAwG,EAAAxG,IACA4vD,EAAA5oD,EAAA4oD,GACAv5B,EAAAu5B,EAAA9xD,MACAwuB,EAAAsjC,EAAAjjC,cACAguC,EAAA3zD,EAAA2zD,OACAl/C,EAAA4a,EAAA/2B,iBAAA5B,EAAA6B,OAAAC,aAEAm7D,GAAAl/C,GAAA6Q,EAAAzvB,SACA4I,EAAA6F,OAAAkkB,SAAAxvB,EAAAwG,EAAA8B,WAlGA,SAAAtI,EAAAssB,EAAAquC,EAAAtkC,EAAA5a,EAAAyyC,GACA,IAMA9sD,EAAAwG,EAAArK,EAAAs9D,EAAAC,EAAAC,EAAAC,EANAjyD,EAAAujB,EAAAzvB,OACAotC,EAAA5T,EAAApK,SACAouC,KACAC,KACAC,EAAA,EACAC,EAAA,EAKA,IAFAx6D,EAAAU,YAEAU,EAAA,EAAAwG,EAAAmB,IAAAmlD,EAAqC9sD,EAAAwG,IAAUxG,EAG/C05D,EAAAH,EADAE,EAAAvuC,EADA/uB,EAAA6D,EAAA2H,GACAjL,MACAP,EAAA84B,GACA0kC,EAAAZ,EAAAU,GACAG,EAAAb,EAAAW,GAEAC,GAAAC,GACAT,EAAAF,EAAAt9D,KAAA89D,GACAL,EAAAF,EAAAv9D,KAAA+9D,IACGP,GAAAC,IACHvwB,GAMA8wB,GACAV,EAAAt9D,KAAA89D,GAEAG,GACAV,EAAAv9D,KAAA+9D,KATAV,EAAAp6D,EAAAq6D,EAAAC,EAAAC,EAAAC,GACAD,EAAAC,EAAA,EACAH,KACAC,OAYAF,EAAAp6D,EAAAq6D,EAAAC,EAAAC,EAAAC,GAEAx6D,EAAA4hB,YACA5hB,EAAAW,UAAA8a,EACAzb,EAAAsB,OA1CA,CAmGAtB,EAAAssB,EAAAquC,EAAAtkC,EAAA5a,EAAAm0C,EAAA9d,OACArsC,EAAA6F,OAAAmkB,WAAAzvB,4CCxTAnF,EAAAC,WACAD,EAAAC,QAAAmN,IAAArN,EAAA,QACAC,EAAAC,QAAAkgB,KAAApgB,EAAA,QACAC,EAAAC,QAAAuxB,MAAAzxB,EAAA,QACAC,EAAAC,QAAAu8C,UAAAz8C,EAAA,SAAAqgE,OAAA,SAAA9/D,EAAAC,EAAAC,GCNA,IAAA6/D,EAAAtgE,EAAA,QACAgB,EAAAhB,EAAA,QA0BAC,EAAAC,QAVA,SAAAs1B,EAAAv0B,EAAAs5B,EAAAC,EAAAC,EAAAE,GACA,OAAA15B,IAAAs5B,IAGA,MAAAt5B,GAAA,MAAAs5B,IAAAv5B,EAAAC,KAAAD,EAAAu5B,GACAt5B,MAAAs5B,KAEA+lC,EAAAr/D,EAAAs5B,EAAAC,EAAAC,EAAAjF,EAAAmF,yBCvBA,IAGA4lC,EAAA,mBAoBAtgE,EAAAC,QAVA,SAAAe,EAAAgB,GACA,IAAA2F,SAAA3G,EAGA,SAFAgB,EAAA,MAAAA,EAfA,iBAeAA,KAGA,UAAA2F,GACA,UAAAA,GAAA24D,EAAAv2C,KAAA/oB,KACAA,GAAA,GAAAA,EAAA,MAAAA,EAAAgB,sCCnBA,IAAAa,EAAA9C,EAAA,QACA+C,EAAA/C,EAAA,QACA6K,EAAA7K,EAAA,QAEA8C,EAAAyB,KAAA,UACAyD,UACA0Q,WACAnM,OAAA,KACA/E,KAAA,UACAK,SAAA,UACAqP,aACAxS,gBAAA,kBACA87D,eAAA,OACAC,aAAA,EACAC,kBAAA,EACAC,eAAA,OACAC,WAAA,OACAC,YAAA,EACAC,cAAA,OACAC,UAAA,OACAC,gBAAA,OACAC,cAAA,EACAC,gBAAA,EACAC,gBAAA,OACAC,YAAA,OACAC,SAAA,EACAC,SAAA,EACAC,aAAA,EACAC,UAAA,EACAC,aAAA,EACAC,mBAAA,OACAC,iBACA98D,YAAA,gBACAE,YAAA,EACAkD,WAEA25D,YAAA/2D,EAAA0C,KACArF,MAAA,SAAA25D,EAAA9/D,GAEA,IAAAmG,EAAA,GACA6D,EAAAhK,EAAAgK,OACA+1D,EAAA/1D,IAAA9J,OAAA,EAEA,GAAA4/D,EAAA5/D,OAAA,GACA,IAAAmG,EAAAy5D,EAAA,GAEAz5D,EAAAC,OACAH,EAAAE,EAAAC,OACMy5D,EAAA,GAAA15D,EAAAzF,MAAAm/D,IACN55D,EAAA6D,EAAA3D,EAAAzF,QAIA,OAAAuF,GAEA65D,WAAAl3D,EAAA0C,KAGAy0D,WAAAn3D,EAAA0C,KAGA00D,YAAAp3D,EAAA0C,KACApF,MAAA,SAAA2wC,EAAA/2C,GACA,IAAAoG,EAAApG,EAAA+J,SAAAgtC,EAAA7kC,cAAA9L,OAAA,GAMA,OAJAA,IACAA,GAAA,MAEAA,EAAA2wC,EAAAxwC,QAGA45D,WAAA,SAAAppB,EAAAltC,GACA,IAEA6vB,EAFA7vB,EAAAS,eAAAysC,EAAA7kC,cACAlS,KAAA+2C,EAAAn2C,OACAO,MACA,OACA2B,YAAA42B,EAAA52B,YACAH,gBAAA+2B,EAAA/2B,kBAGAy9D,eAAA,WACA,OAAA/hE,KAAAwU,SAAAksD,eAEAsB,WAAAv3D,EAAA0C,KAGA80D,UAAAx3D,EAAA0C,KAGA+0D,aAAAz3D,EAAA0C,KACAg1D,OAAA13D,EAAA0C,KACAi1D,YAAA33D,EAAA0C,SAKAtN,EAAAC,QAAA,SAAAqI,GAKA,SAAAk6D,EAAAC,EAAAC,GACA,IAAA9hD,EAAAhW,EAAAgW,MAAA6hD,GACA,OAAA7hD,EAAA3G,MAAAyoD,EAAA9hD,EAAA3G,SAAAqC,aAIA,SAAAqmD,EAAA7+D,EAAA8+D,GAUA,OATAA,IACAh4D,EAAAL,QAAAq4D,GAEAhjD,MAAAve,UAAAa,KAAAqH,MAAAzF,EAAA8+D,GAEA9+D,EAAA5B,KAAA0gE,IAIA9+D,EA0BA,SAAA++D,EAAAC,GACA,IAAAriD,EAAA5d,EAAA6B,OACA6O,EAAA3I,EAAA2I,eAEA,OAEA8tD,SAAAyB,EAAAzB,SACAD,SAAA0B,EAAA1B,SACA2B,OAAAD,EAAAC,OACAC,OAAAF,EAAAE,OAGAnC,cAAAiC,EAAAjC,cACAoC,gBAAA1vD,EAAAuvD,EAAAI,eAAAziD,EAAAkB,mBACAwhD,eAAA5vD,EAAAuvD,EAAAM,cAAA3iD,EAAAgB,kBACA4hD,WAAAP,EAAAhC,UACAwC,aAAA/vD,EAAAuvD,EAAAQ,aAAA7iD,EAAAc,iBACAq/C,YAAAkC,EAAAlC,YAGAF,eAAAoC,EAAApC,eACA6C,iBAAAhwD,EAAAuvD,EAAAU,gBAAA/iD,EAAAkB,mBACA8hD,gBAAAlwD,EAAAuvD,EAAAvC,eAAA9/C,EAAAgB,kBACAiiD,cAAAnwD,EAAAuvD,EAAAY,cAAAjjD,EAAAc,iBACAoiD,YAAAb,EAAAnC,WACAH,aAAAsC,EAAAtC,aACAC,kBAAAqC,EAAArC,kBAGAS,gBAAA4B,EAAA5B,gBACA0C,kBAAArwD,EAAAuvD,EAAAe,iBAAApjD,EAAAkB,mBACAmiD,iBAAAvwD,EAAAuvD,EAAA/B,gBAAAtgD,EAAAgB,kBACAsiD,eAAAxwD,EAAAuvD,EAAAiB,eAAAtjD,EAAAc,iBACAyiD,aAAAlB,EAAA3B,YACAH,cAAA8B,EAAA9B,cACAC,gBAAA6B,EAAA7B,gBAGAM,UAAAuB,EAAAvB,UACAC,aAAAsB,EAAAtB,aACA/8D,gBAAAq+D,EAAAr+D,gBACAi+D,QAAA,EACAuB,sBAAAnB,EAAArB,mBACAC,cAAAoB,EAAApB,cACA98D,YAAAk+D,EAAAl+D,YACAE,YAAAg+D,EAAAh+D,aAuMAwD,EAAAyP,QAAAjV,EAAAiC,QACAgM,WAAA,WACA5Q,KAAAqP,OAAAqzD,EAAA1iE,KAAAwU,UACAxU,KAAA+jE,gBAKAC,SAAA,WACA,IAEAn8D,EAFA7H,KACAwU,SACA3M,UAEA25D,EAAA35D,EAAA25D,YAAAp4D,MAJApJ,KAIAsB,WACAwG,EAAAD,EAAAC,MAAAsB,MALApJ,KAKAsB,WACAqgE,EAAA95D,EAAA85D,WAAAv4D,MANApJ,KAMAsB,WAEA2iE,KAKA,OAFAzB,EADAyB,EAAAzB,EADAyB,EAAAzB,EAAAyB,EAAAzC,GACA15D,GACA65D,IAMAuC,cAAA,WACA,IAAAD,EAAAjkE,KAAAwU,SAAA3M,UAAA+5D,WAAAx4D,MAAApJ,KAAAsB,WACA,OAAAmJ,EAAAL,QAAA65D,wBAIAE,QAAA,SAAA1C,EAAA9/D,GACA,IAAA0L,EAAArN,KACA6H,EAAAwF,EAAAmH,SAAA3M,UACAu8D,KAeA,OAbA35D,EAAAwD,KAAAwzD,EAAA,SAAA/oB,GACA,IAAA2rB,GACAC,UACAL,SACAM,UAEA/B,EAAA6B,EAAAC,OAAAz8D,EAAAg6D,YAAAtgE,KAAA8L,EAAAqrC,EAAA/2C,IACA6gE,EAAA6B,EAAAJ,MAAAp8D,EAAAE,MAAAxG,KAAA8L,EAAAqrC,EAAA/2C,IACA6gE,EAAA6B,EAAAE,MAAA18D,EAAAm6D,WAAAzgE,KAAA8L,EAAAqrC,EAAA/2C,IAEAyiE,EAAAriE,KAAAsiE,KAGAD,GAIAI,aAAA,WACA,IAAAP,EAAAjkE,KAAAwU,SAAA3M,UAAAo6D,UAAA74D,MAAApJ,KAAAsB,WACA,OAAAmJ,EAAAL,QAAA65D,wBAKAQ,UAAA,WACA,IACA58D,EADA7H,KACAwU,SAAA3M,UAEAq6D,EAAAr6D,EAAAq6D,aAAA94D,MAHApJ,KAGAsB,WACA6gE,EAAAt6D,EAAAs6D,OAAA/4D,MAJApJ,KAIAsB,WACA8gE,EAAAv6D,EAAAu6D,YAAAh5D,MALApJ,KAKAsB,WAEA2iE,KAKA,OAFAzB,EADAyB,EAAAzB,EADAyB,EAAAzB,EAAAyB,EAAA/B,GACAC,GACAC,IAKAv1D,OAAA,SAAA0L,GACA,IA8BAnS,EAAAmvC,EApXA/lC,EACAgjB,EACAD,EACAhwB,EACAsR,EAkVAxG,EAAArN,KACAwN,EAAAH,EAAAmH,SAKAkwD,EAAAr3D,EAAAgC,OACAmkB,EAAAnmB,EAAAgC,OAAAqzD,EAAAl1D,GACAsL,EAAAzL,EAAAs3D,QAEAhjE,EAAA0L,EAAAqH,MAGAkwD,GACAhC,OAAA8B,EAAA9B,OACAC,OAAA6B,EAAA7B,QAEAgC,GACAthE,EAAAmhE,EAAAnhE,EACAG,EAAAghE,EAAAhhE,GAEAohE,GACA/hE,MAAA2hE,EAAA3hE,MACAe,OAAA4gE,EAAA5gE,QAEAmD,GACA1D,EAAAmhE,EAAAK,OACArhE,EAAAghE,EAAAM,QAKA,GAAAlsD,EAAAjX,OAAA,CACA2xB,EAAA+uC,QAAA,EAEA,IAAA0C,KACAC,KACAj+D,EAAAkB,EAAAyP,QAAAutD,YAAA33D,EAAA/F,UAAAlG,KAAA8L,EAAAyL,EAAAzL,EAAA+3D,gBAEA,IAAA3D,KACA,IAAAr7D,EAAA,EAAAmvC,EAAAz8B,EAAAjX,OAAoCuE,EAAAmvC,IAASnvC,EAC7Cq7D,EAAA1/D,MA9XAywB,SACAD,SADAC,GADAhjB,EA+XAsJ,EAAA1S,IA9XA2sB,QACAR,EAAA/iB,EAAAwjB,SAAAxjB,EAAAJ,OACA7M,EAAAiN,EAAAL,OACA0E,EAAArE,EAAAN,eAGAjH,OAAAuqB,IAAA3O,iBAAAthB,EAAAsR,GAAA,GACA3L,OAAAqqB,IAAA1O,iBAAAthB,EAAAsR,GAAA,GACAtR,QACAsR,eACAtQ,EAAAiM,EAAAH,OAAA9L,EACAG,EAAA8L,EAAAH,OAAA3L,KAuXA8J,EAAA+f,SACAk0C,IAAAl0C,OAAA,SAAAhP,GACA,OAAA/Q,EAAA+f,OAAAhP,EAAA5c,MAKA6L,EAAA63D,WACA5D,IAAAxwB,KAAA,SAAA1yB,EAAA4F,GACA,OAAA3W,EAAA63D,SAAA9mD,EAAA4F,EAAAxiB,MAKA8I,EAAAwD,KAAAwzD,EAAA,SAAA/oB,GACAusB,EAAAljE,KAAAyL,EAAA3F,UAAAi6D,WAAAvgE,KAAA8L,EAAAqrC,EAAArrC,EAAApI,SACAigE,EAAAnjE,KAAAyL,EAAA3F,UAAAk6D,eAAAxgE,KAAA8L,EAAAqrC,EAAArrC,EAAApI,WAKAuuB,EAAA1rB,MAAAuF,EAAA22D,SAAAvC,EAAA9/D,GACA6xB,EAAAouC,WAAAv0D,EAAA62D,cAAAzC,EAAA9/D,GACA6xB,EAAA8xC,KAAAj4D,EAAA82D,QAAA1C,EAAA9/D,GACA6xB,EAAAyuC,UAAA50D,EAAAm3D,aAAA/C,EAAA9/D,GACA6xB,EAAA2uC,OAAA90D,EAAAo3D,UAAAhD,EAAA9/D,GAGA6xB,EAAAjwB,EAAAC,KAAA+b,MAAAtY,EAAA1D,GACAiwB,EAAA9vB,EAAAF,KAAA+b,MAAAtY,EAAAvD,GACA8vB,EAAA2tC,aAAA3zD,EAAA2zD,aACA3tC,EAAAyxC,cACAzxC,EAAA0xC,kBAGA1xC,EAAA+xC,WAAA9D,EAMAoD,EAvNA,SAAAxhE,EAAArB,EAAA4iE,EAAAp5D,GAEA,IAAAjI,EAAAF,EAAAE,EACAG,EAAAL,EAAAK,EAEA09D,EAAA/9D,EAAA+9D,UACAD,EAAA99D,EAAA89D,aACAE,EAAAh+D,EAAAg+D,aACAuB,EAAAgC,EAAAhC,OACAC,EAAA+B,EAAA/B,OACA2C,EAAApE,EAAAD,EACAsE,EAAApE,EAAAF,EAkCA,MAhCA,UAAAyB,EACAr/D,GAAAvB,EAAAe,MACG,WAAA6/D,KACHr/D,GAAAvB,EAAAe,MAAA,GACAf,EAAAe,MAAAyI,EAAAzI,QACAQ,EAAAiI,EAAAzI,MAAAf,EAAAe,OAEAQ,EAAA,IACAA,EAAA,IAIA,QAAAs/D,EACAn/D,GAAA8hE,EAEA9hE,GADG,WAAAm/D,EACH7gE,EAAA8B,OAAA0hE,EAEAxjE,EAAA8B,OAAA,EAGA,WAAA++D,EACA,SAAAD,EACAr/D,GAAAiiE,EACI,UAAA5C,IACJr/D,GAAAiiE,GAEG,SAAA5C,EACHr/D,GAAAkiE,EACG,UAAA7C,IACHr/D,GAAAkiE,IAIAliE,IACAG,KA/CA,CAuNA8vB,EAHAsxC,EAjWA,SAAA3wD,EAAAqf,GACA,IAAAxuB,EAAAmP,EAAAlP,OAAAD,IAEAlB,EAAA,EAAA0vB,EAAAytC,SACAl+D,EAAA,EAGAuiE,EAAA9xC,EAAA8xC,KACAI,EAAAJ,EAAAzyD,OAAA,SAAA9E,EAAAs2D,GACA,OAAAt2D,EAAAs2D,EAAAC,OAAAziE,OAAAwiE,EAAAJ,MAAApiE,OAAAwiE,EAAAE,MAAA1iE,QACG,GACH6jE,GAAAlyC,EAAAouC,WAAA//D,OAAA2xB,EAAAyuC,UAAApgE,OAEA,IAAA8jE,EAAAnyC,EAAA1rB,MAAAjG,OACA+jE,EAAApyC,EAAA2uC,OAAAtgE,OACA0hE,EAAA/vC,EAAA+vC,cACAJ,EAAA3vC,EAAA2vC,aACAS,EAAApwC,EAAAowC,eAEA9/D,GAAA6hE,EAAApC,EACAz/D,GAAA6hE,KAAA,GAAAnyC,EAAA6sC,aAAA,EACAv8D,GAAA6hE,EAAAnyC,EAAA8sC,kBAAA,EACAx8D,GAAA4hE,EAAAvC,EACAr/D,GAAA4hE,KAAA,GAAAlyC,EAAAitC,YAAA,EACA38D,GAAA8hE,EAAApyC,EAAAstC,gBAAA,EACAh9D,GAAA8hE,EAAAtjD,EACAxe,GAAA8hE,KAAA,GAAApyC,EAAAqtC,cAAA,EAGA,IAAAgF,EAAA,EACAC,EAAA,SAAAx9D,GACAvF,EAAAS,KAAAI,IAAAb,EAAAiC,EAAAyf,YAAAnc,GAAAvF,MAAA8iE,IA4BA,OAzBA7gE,EAAA0c,KAAAjX,EAAAkX,WAAA4hD,EAAA/vC,EAAA8vC,gBAAA9vC,EAAA4vC,kBACA34D,EAAAwD,KAAAulB,EAAA1rB,MAAAg+D,GAGA9gE,EAAA0c,KAAAjX,EAAAkX,WAAAwhD,EAAA3vC,EAAAwvC,eAAAxvC,EAAAsvC,iBACAr4D,EAAAwD,KAAAulB,EAAAouC,WAAA7uD,OAAAygB,EAAAyuC,WAAA6D,GAGAD,EAAAryC,EAAA+tC,cAAA4B,EAAA,IACA14D,EAAAwD,KAAAq3D,EAAA,SAAAjB,GACA55D,EAAAwD,KAAAo2D,EAAAC,OAAAwB,GACAr7D,EAAAwD,KAAAo2D,EAAAJ,MAAA6B,GACAr7D,EAAAwD,KAAAo2D,EAAAE,MAAAuB,KAIAD,EAAA,EAGA7gE,EAAA0c,KAAAjX,EAAAkX,WAAAiiD,EAAApwC,EAAAmwC,iBAAAnwC,EAAAiwC,mBACAh5D,EAAAwD,KAAAulB,EAAA2uC,OAAA2D,IAMA/iE,MAHAA,GAAA,EAAAywB,EAAA0tC,SAIAp9D,UA7DA,CAiWA9D,KAAAwzB,GACAoxC,EA9RA,SAAAzwD,EAAAnS,GACA,IAYA+jE,EAAAC,EACAC,EAAAC,EACAC,EAdA3yC,EAAArf,EAAA9E,OACA7D,EAAA2I,EAAAlP,OACAqI,EAAA6G,EAAAlP,OAAAqI,UACAs1D,EAAA,SACAC,EAAA,SAEArvC,EAAA9vB,EAAA1B,EAAA8B,OACA++D,EAAA,MACGrvC,EAAA9vB,EAAA8H,EAAA1H,OAAA9B,EAAA8B,SACH++D,EAAA,UAMA,IAAAuD,GAAA94D,EAAAvJ,KAAAuJ,EAAArJ,OAAA,EACAoiE,GAAA/4D,EAAAtJ,IAAAsJ,EAAApJ,QAAA,EAEA,WAAA2+D,GACAkD,EAAA,SAAAxiE,GACA,OAAAA,GAAA6iE,GAEAJ,EAAA,SAAAziE,GACA,OAAAA,EAAA6iE,KAGAL,EAAA,SAAAxiE,GACA,OAAAA,GAAAvB,EAAAe,MAAA,GAEAijE,EAAA,SAAAziE,GACA,OAAAA,GAAAiI,EAAAzI,MAAAf,EAAAe,MAAA,IAIAkjE,EAAA,SAAA1iE,GACA,OAAAA,EAAAvB,EAAAe,MAAAywB,EAAA4tC,UAAA5tC,EAAA2tC,aAAA31D,EAAAzI,OAEAmjE,EAAA,SAAA3iE,GACA,OAAAA,EAAAvB,EAAAe,MAAAywB,EAAA4tC,UAAA5tC,EAAA2tC,aAAA,GAEAgF,EAAA,SAAAziE,GACA,OAAAA,GAAA2iE,EAAA,gBAGAN,EAAAvyC,EAAAjwB,IACAq/D,EAAA,OAGAqD,EAAAzyC,EAAAjwB,KACAq/D,EAAA,SACAC,EAAAsD,EAAA3yC,EAAA9vB,KAEGsiE,EAAAxyC,EAAAjwB,KACHq/D,EAAA,QAGAsD,EAAA1yC,EAAAjwB,KACAq/D,EAAA,SACAC,EAAAsD,EAAA3yC,EAAA9vB,KAIA,IAAA8J,EAAA2G,EAAAK,SACA,OACAouD,OAAAp1D,EAAAo1D,OAAAp1D,EAAAo1D,SACAC,OAAAr1D,EAAAq1D,OAAAr1D,EAAAq1D,UAlEA,CA8RA7iE,KAAA8kE,GAEAz3D,EAAApI,aAEAuuB,EAAA+uC,QAAA,EAoBA,OAjBA/uC,EAAAovC,OAAAgC,EAAAhC,OACApvC,EAAAqvC,OAAA+B,EAAA/B,OACArvC,EAAAjwB,EAAAshE,EAAAthE,EACAiwB,EAAA9vB,EAAAmhE,EAAAnhE,EACA8vB,EAAAzwB,MAAA+hE,EAAA/hE,MACAywB,EAAA1vB,OAAAghE,EAAAhhE,OAGA0vB,EAAAuxC,OAAA99D,EAAA1D,EACAiwB,EAAAwxC,OAAA/9D,EAAAvD,EAEA2J,EAAAgC,OAAAmkB,EAEAjb,GAAA/K,EAAArB,QACAqB,EAAArB,OAAA5K,KAAA8L,EAAAmmB,GAGAnmB,GAEAi5D,UAAA,SAAAC,EAAAvkE,GACA,IAAAgD,EAAAhF,KAAAiF,OAAAD,IACA3B,EAAArD,KAAA8C,MACA0jE,EAAAxmE,KAAAymE,iBAAAF,EAAAvkE,EAAAqB,GAEA2B,EAAAqB,OAAAmgE,EAAAvjE,GAAAujE,EAAArjE,IACA6B,EAAAqB,OAAAmgE,EAAAtjE,GAAAsjE,EAAApjE,IACA4B,EAAAqB,OAAAmgE,EAAAE,GAAAF,EAAAG,KAEAF,iBAAA,SAAAF,EAAAvkE,EAAAqB,GACA,IAAAJ,EAAAC,EAAAwjE,EAAAvjE,EAAAC,EAAAujE,EACAvF,EAAA/9D,EAAA+9D,UACAC,EAAAh+D,EAAAg+D,aACAuB,EAAAv/D,EAAAu/D,OACAC,EAAAx/D,EAAAw/D,OACA+D,EAAAL,EAAAhjE,EACAsjE,EAAAN,EAAA7iE,EACAX,EAAAf,EAAAe,MACAe,EAAA9B,EAAA8B,OAEA,cAAA++D,EACAz/D,EAAAyjE,EAAA/iE,EAAA,EAEA,SAAA8+D,GAEA1/D,GADAD,EAAA2jE,GACAxF,EACAsF,EAAAzjE,EAEAE,EAAAC,EAAAg+D,EACAuF,EAAAvjE,EAAAg+D,IAGAl+D,GADAD,EAAA2jE,EAAA7jE,GACAq+D,EACAsF,EAAAzjE,EAEAE,EAAAC,EAAAg+D,EACAuF,EAAAvjE,EAAAg+D,QAgBA,GAbA,SAAAwB,GAEA3/D,GADAC,EAAA0jE,EAAAvF,EAAA/nC,GACA8nC,EACAsF,EAAAxjE,EAAAk+D,GACK,UAAAwB,GAEL3/D,GADAC,EAAA0jE,EAAA7jE,EAAAs+D,EAAAD,GACAA,EACAsF,EAAAxjE,EAAAk+D,IAGAn+D,GADAC,EAAAG,EAAA0hE,QACA3D,EACAsF,EAAAxjE,EAAAk+D,GAEA,QAAAyB,EAEAz/D,GADAD,EAAA0jE,GACAzF,EACAuF,EAAAxjE,MACK,CAELC,GADAD,EAAA0jE,EAAA/iE,GACAs9D,EACAuF,EAAAxjE,EAEA,IAAA2jE,EAAAJ,EACAA,EAAAzjE,EACAA,EAAA6jE,EAGA,OAAW7jE,KAAAC,KAAAwjE,KAAAvjE,KAAAC,KAAAujE,OAEXI,UAAA,SAAAnzC,EAAAvwB,EAAA2B,EAAAu9D,GACA,IAAAz6D,EAAAzE,EAAAyE,MAEA,GAAAA,EAAAjG,OAAA,CACAmD,EAAAoiB,UAAA/jB,EAAAmgE,YACAx+D,EAAAqiB,aAAA,MAEA,IAMAjhB,EAAAmvC,EANAguB,EAAAlgE,EAAAkgE,cACAlD,EAAAh9D,EAAAg9D,aAMA,IAJAr7D,EAAAW,UAAA08D,EAAAh/D,EAAAk9D,eAAAgC,GACAv9D,EAAA0c,KAAAjX,EAAAkX,WAAA4hD,EAAAlgE,EAAAigE,gBAAAjgE,EAAA+/D,kBAGAh9D,EAAA,EAAAmvC,EAAAztC,EAAAjG,OAAmCuE,EAAAmvC,IAASnvC,EAC5CpB,EAAAkd,SAAApa,EAAA1B,GAAAwtB,EAAArwB,EAAAqwB,EAAAlwB,GACAkwB,EAAAlwB,GAAA6/D,EAAAlD,EAEAj6D,EAAA,IAAA0B,EAAAjG,SACA+xB,EAAAlwB,GAAAL,EAAAi9D,kBAAAD,KAKA2G,SAAA,SAAApzC,EAAAvwB,EAAA2B,EAAAu9D,GACA,IAAAY,EAAA9/D,EAAA8/D,aACA1C,EAAAp9D,EAAAo9D,YACA6E,EAAAjiE,EAAAiiE,KAEAtgE,EAAAoiB,UAAA/jB,EAAA6/D,WACAl+D,EAAAqiB,aAAA,MACAriB,EAAA0c,KAAAjX,EAAAkX,WAAAwhD,EAAA9/D,EAAA2/D,eAAA3/D,EAAAy/D,iBAGA,IAAAmE,EAAA,EACAC,EAAA,SAAA5+D,GACAtD,EAAAkd,SAAA5Z,EAAAsrB,EAAArwB,EAAA0jE,EAAArzC,EAAAlwB,GACAkwB,EAAAlwB,GAAAy/D,EAAA1C,GAIAz7D,EAAAW,UAAA08D,EAAAh/D,EAAAq9D,cAAA6B,GACA93D,EAAAwD,KAAA5K,EAAAu+D,WAAAsF,GAEA,IAAAC,EAAA9jE,EAAAk+D,cACA0F,EAAAE,EAAAhE,EAAA,IAGA14D,EAAAwD,KAAAq3D,EAAA,SAAAjB,EAAAj+D,GACA,IAAAghE,EAAA/E,EAAAh/D,EAAA6hE,gBAAA9+D,GAAAm8D,GACAv9D,EAAAW,UAAAyhE,EACA38D,EAAAwD,KAAAo2D,EAAAC,OAAA4C,GAEAz8D,EAAAwD,KAAAo2D,EAAAJ,MAAA,SAAA37D,GAEA6+D,IAEAniE,EAAAW,UAAA08D,EAAAh/D,EAAAygE,sBAAAvB,GACAv9D,EAAAmiB,SAAAyM,EAAArwB,EAAAqwB,EAAAlwB,EAAAy/D,KAGAn+D,EAAAa,UAAA,EACAb,EAAAY,YAAAy8D,EAAAh/D,EAAA4hE,YAAA7+D,GAAA3B,YAAA89D,GACAv9D,EAAA4pB,WAAAgF,EAAArwB,EAAAqwB,EAAAlwB,EAAAy/D,KAGAn+D,EAAAW,UAAA08D,EAAAh/D,EAAA4hE,YAAA7+D,GAAA9B,gBAAAi+D,GACAv9D,EAAAmiB,SAAAyM,EAAArwB,EAAA,EAAAqwB,EAAAlwB,EAAA,EAAAy/D,EAAA,EAAAA,EAAA,GACAn+D,EAAAW,UAAAyhE,GAGAF,EAAA5+D,KAGAmC,EAAAwD,KAAAo2D,EAAAE,MAAA2C,KAIAD,EAAA,EAGAx8D,EAAAwD,KAAA5K,EAAA4+D,UAAAiF,GACAtzC,EAAAlwB,GAAA+8D,GAEA4G,WAAA,SAAAzzC,EAAAvwB,EAAA2B,EAAAu9D,GACA,IAAAJ,EAAA9+D,EAAA8+D,OAEAA,EAAAtgE,SACA+xB,EAAAlwB,GAAAL,EAAAy9D,gBAEA97D,EAAAoiB,UAAA/jB,EAAAwgE,aACA7+D,EAAAqiB,aAAA,MAEAriB,EAAAW,UAAA08D,EAAAh/D,EAAA09D,gBAAAwB,GACAv9D,EAAA0c,KAAAjX,EAAAkX,WAAAte,EAAAugE,eAAAvgE,EAAAsgE,iBAAAtgE,EAAAogE,mBAEAh5D,EAAAwD,KAAAk0D,EAAA,SAAA75D,GACAtD,EAAAkd,SAAA5Z,EAAAsrB,EAAArwB,EAAAqwB,EAAAlwB,GACAkwB,EAAAlwB,GAAAL,EAAAugE,eAAAvgE,EAAAw9D,kBAIAyG,eAAA,SAAA1zC,EAAAvwB,EAAA2B,EAAA8/D,EAAAvC,GACAv9D,EAAAW,UAAA08D,EAAAh/D,EAAAiB,gBAAAi+D,GACAv9D,EAAAY,YAAAy8D,EAAAh/D,EAAAoB,YAAA89D,GACAv9D,EAAAa,UAAAxC,EAAAsB,YACA,IAAAi+D,EAAAv/D,EAAAu/D,OACAC,EAAAx/D,EAAAw/D,OACAt/D,EAAAqwB,EAAArwB,EACAG,EAAAkwB,EAAAlwB,EACAX,EAAA+hE,EAAA/hE,MACAe,EAAAghE,EAAAhhE,OACA6iB,EAAAtjB,EAAAg+D,aAEAr8D,EAAAU,YACAV,EAAAmB,OAAA5C,EAAAojB,EAAAjjB,GACA,QAAAm/D,GACA7iE,KAAAsmE,UAAA1yC,EAAAkxC,GAEA9/D,EAAAqB,OAAA9C,EAAAR,EAAA4jB,EAAAjjB,GACAsB,EAAAqvC,iBAAA9wC,EAAAR,EAAAW,EAAAH,EAAAR,EAAAW,EAAAijB,GACA,WAAAk8C,GAAA,UAAAD,GACA5iE,KAAAsmE,UAAA1yC,EAAAkxC,GAEA9/D,EAAAqB,OAAA9C,EAAAR,EAAAW,EAAAI,EAAA6iB,GACA3hB,EAAAqvC,iBAAA9wC,EAAAR,EAAAW,EAAAI,EAAAP,EAAAR,EAAA4jB,EAAAjjB,EAAAI,GACA,WAAA++D,GACA7iE,KAAAsmE,UAAA1yC,EAAAkxC,GAEA9/D,EAAAqB,OAAA9C,EAAAojB,EAAAjjB,EAAAI,GACAkB,EAAAqvC,iBAAA9wC,EAAAG,EAAAI,EAAAP,EAAAG,EAAAI,EAAA6iB,GACA,WAAAk8C,GAAA,SAAAD,GACA5iE,KAAAsmE,UAAA1yC,EAAAkxC,GAEA9/D,EAAAqB,OAAA9C,EAAAG,EAAAijB,GACA3hB,EAAAqvC,iBAAA9wC,EAAAG,EAAAH,EAAAojB,EAAAjjB,GACAsB,EAAA4hB,YAEA5hB,EAAAsB,OAEAjD,EAAAsB,YAAA,GACAK,EAAAuB,UAGA1B,KAAA,WACA,IAAAG,EAAAhF,KAAAiF,OAAAD,IACA3B,EAAArD,KAAA8C,MAEA,OAAAO,EAAAk/D,QAAA,CAIA,IAAAuC,GACA/hE,MAAAM,EAAAN,MACAe,OAAAT,EAAAS,QAEA8vB,GACArwB,EAAAF,EAAAE,EACAG,EAAAL,EAAAK,GAIA6+D,EAAA/+D,KAAA4B,IAAA/B,EAAAk/D,QAAA,QAAAl/D,EAAAk/D,QAGAgF,EAAAlkE,EAAAyE,MAAAjG,QAAAwB,EAAAu+D,WAAA//D,QAAAwB,EAAAiiE,KAAAzjE,QAAAwB,EAAA4+D,UAAApgE,QAAAwB,EAAA8+D,OAAAtgE,OAEA7B,KAAAwU,SAAA8D,SAAAivD,IAEAvnE,KAAAsnE,eAAA1zC,EAAAvwB,EAAA2B,EAAA8/D,EAAAvC,GAGA3uC,EAAArwB,GAAAF,EAAA69D,SACAttC,EAAAlwB,GAAAL,EAAA49D,SAGAjhE,KAAA+mE,UAAAnzC,EAAAvwB,EAAA2B,EAAAu9D,GAGAviE,KAAAgnE,SAAApzC,EAAAvwB,EAAA2B,EAAAu9D,GAGAviE,KAAAqnE,WAAAzzC,EAAAvwB,EAAA2B,EAAAu9D,MAUA/pD,YAAA,SAAApY,GACA,IAEAmY,EAFAlL,EAAArN,KACAsM,EAAAe,EAAAmH,SA8BA,OA3BAnH,EAAA02D,YAAA12D,EAAA02D,gBAGA,aAAA3jE,EAAAoH,KACA6F,EAAAs3D,WAEAt3D,EAAAs3D,QAAAt3D,EAAApI,OAAA+R,0BAAA5W,EAAAkM,EAAAlF,KAAAkF,IAIAiM,GAAA9N,EAAAwO,YAAA5L,EAAAs3D,QAAAt3D,EAAA02D,gBAIA12D,EAAA02D,YAAA12D,EAAAs3D,SAEAr4D,EAAAgM,SAAAhM,EAAAH,UACAkB,EAAA+3D,gBACA7hE,EAAAnD,EAAAmD,EACAG,EAAAtD,EAAAsD,GAGA2J,EAAAR,WACAQ,EAAAkC,UAIAgJ,KAOApQ,EAAAyP,QAAAutD,aAOAqC,QAAA,SAAApjE,GACA,IAAAA,EAAAvC,OACA,SAGA,IAAAuE,EAAAmvC,EACAhyC,EAAA,EACAG,EAAA,EACAqK,EAAA,EAEA,IAAA3H,EAAA,EAAAmvC,EAAAnxC,EAAAvC,OAAqCuE,EAAAmvC,IAASnvC,EAAA,CAC9C,IAAAwuD,EAAAxwD,EAAAgC,GACA,GAAAwuD,KAAAj5B,WAAA,CACA,IAAA7Z,EAAA8yC,EAAA3tD,kBACA1D,GAAAue,EAAAve,EACAG,GAAAoe,EAAApe,IACAqK,GAIA,OACAxK,EAAAC,KAAA+b,MAAAhc,EAAAwK,GACArK,EAAAF,KAAA+b,MAAA7b,EAAAqK,KAWA6gD,QAAA,SAAAxqD,EAAAqjE,GACA,IAGArhE,EAAAmvC,EAAAmyB,EAHAnkE,EAAAkkE,EAAAlkE,EACAG,EAAA+jE,EAAA/jE,EACAuqD,EAAA9qC,OAAAC,kBAGA,IAAAhd,EAAA,EAAAmvC,EAAAnxC,EAAAvC,OAAqCuE,EAAAmvC,IAASnvC,EAAA,CAC9C,IAAAwuD,EAAAxwD,EAAAgC,GACA,GAAAwuD,KAAAj5B,WAAA,CACA,IAAAyhB,EAAAwX,EAAA7tD,iBACAsyB,EAAA5uB,EAAAinD,sBAAA+V,EAAArqB,GAEA/jB,EAAA40B,IACAA,EAAA50B,EACAquC,EAAA9S,IAKA,GAAA8S,EAAA,CACA,IAAAC,EAAAD,EAAAzgE,kBACA1D,EAAAokE,EAAApkE,EACAG,EAAAikE,EAAAjkE,EAGA,OACAH,IACAG,4BCn6BA7D,EAAAC,QAJA,SAAAuJ,EAAAtJ,GACA,OAAAsJ,EAAA5G,IAAA1C,0BCTA,IAAA65B,EAAAh6B,EAAA,QAoBAC,EAAAC,QAVA,SAAAmgB,EAAAlgB,GAEA,IADA,IAAA8B,EAAAoe,EAAApe,OACAA,KACA,GAAA+3B,EAAA3Z,EAAApe,GAAA,GAAA9B,GACA,OAAA8B,EAGA,WAAA+lE,KAAA,SAAAznE,EAAAC,EAAAC,GCjBA,IAIAksC,EAJA3sC,EAAA,OAAAA,CACAA,EAAA,QAGA,OAEAC,EAAAC,QAAAysC,qCCJA3sC,EAAA,QAEAuE,KAAA,UACAgN,cACAkB,4BAAA,EACAT,uBACAsG,QAAA,yDACA/Q,OACA4R,QAAA,KACA3R,KAAA,UACA0P,aACA8B,kBAAA,KAEAlM,QAAA,KACAlI,aAAA,kBACAuiB,iBAAA,OACAvF,kBAAA,qDACAJ,gBAAA,GACAE,iBAAA,SACA3Z,aAGAvD,YAGA6jD,QACAt8B,SACA3nB,IAAA,EACAC,MAAA,EACAC,OAAA,EACAH,KAAA,MAKAlE,EAAAC,QAAA,WAGA,IAAAqI,EAAA,SAAAH,EAAAkI,GAEA,OADAlQ,KAAAiQ,UAAAjI,EAAAkI,GACAlQ,MAKA,OAFAmI,UAEAA,uBC3BAtI,EAAAC,QAJA,SAAAe,GACA,OAAAA,yBCjBA,IAAAgqB,EAAAjrB,EAAA,QACAioE,EAAAjoE,EAAA,QACAwK,EAAAxK,EAAA,QACA6pB,EAAA7pB,EAAA,QAMAo6B,EAAAnP,IAAA3pB,iBACA4mE,EAAA9tC,IAAAvxB,gBA0BA5I,EAAAC,QAhBA,SAAAumD,EAAAxlD,GAEA,oBAAAA,EACA,OAAAA,EAEA,GAAAuJ,EAAAvJ,GAEA,OAAAgnE,EAAAhnE,EAAAwlD,GAAA,GAEA,GAAA58B,EAAA5oB,GACA,OAAAinE,IAAAvmE,KAAAV,GAAA,GAEA,IAAA0I,EAAA1I,EAAA,GACA,WAAA0I,GAAA,EAAA1I,IA3BA,IA2BA,KAAA0I","file":"static/js/0.4922213cef2b7718947b.js","sourcesContent":["var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar circumference = me.calculateCircumference(dataset.data[index]);\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// If there is NaN data before us, we need to calculate the starting angle correctly.\n\t\t\t// We could be way more efficient here, but its unlikely that the polar area chart will have a lot of data\n\t\t\tvar visibleCount = 0;\n\t\t\tvar meta = me.getMeta();\n\t\t\tfor (var i = 0; i < index; ++i) {\n\t\t\t\tif (!isNaN(dataset.data[i]) && !meta.data[i].hidden) {\n\t\t\t\t\t++visibleCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = datasetStartAngle + (circumference * visibleCount);\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : circumference);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tme.removeHoverStyle(arc);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar count = this.getMeta().count;\n\t\t\tif (count > 0 && !isNaN(value)) {\n\t\t\t\treturn (2 * Math.PI) / count;\n\t\t\t}\n\t\t\treturn 0;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tChart.animationService.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collased\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update(me.options.responsiveAnimationDuration);\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = Chart.scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tChart.scaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Chart.Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tChart.animationService.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Chart.Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Chart.Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render(me.options.hover.animationDuration, true);\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Chart.Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('category', DatasetScale, defaultConfig);\n\n};\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.Animation = Element.extend({\n\t\tchart: null, // the animation associated chart instance\n\t\tcurrentStep: 0, // the current animation step\n\t\tnumSteps: 60, // default number of steps\n\t\teasing: '', // the easing to use for this animation\n\t\trender: null, // render function used by the animation service\n\n\t\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\t\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n\t});\n\n\tChart.animationService = {\n\t\tframeDuration: 17,\n\t\tanimations: [],\n\t\tdropFrames: 0,\n\t\trequest: null,\n\n\t\t/**\n\t\t * @param {Chart} chart - The chart to animate.\n\t\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t\t * @param {Number} duration - The animation duration in ms.\n\t\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t\t */\n\t\taddAnimation: function(chart, animation, duration, lazy) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar i, ilen;\n\n\t\t\tanimation.chart = chart;\n\n\t\t\tif (!lazy) {\n\t\t\t\tchart.animating = true;\n\t\t\t}\n\n\t\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\t\tif (animations[i].chart === chart) {\n\t\t\t\t\tanimations[i] = animation;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tanimations.push(animation);\n\n\t\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\t\tif (animations.length === 1) {\n\t\t\t\tthis.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\tcancelAnimation: function(chart) {\n\t\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\t\treturn animation.chart === chart;\n\t\t\t});\n\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.animations.splice(index, 1);\n\t\t\t\tchart.animating = false;\n\t\t\t}\n\t\t},\n\n\t\trequestAnimationFrame: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.request === null) {\n\t\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\t\tme.request = null;\n\t\t\t\t\tme.startDigest();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tstartDigest: function() {\n\t\t\tvar me = this;\n\t\t\tvar startTime = Date.now();\n\t\t\tvar framesToDrop = 0;\n\n\t\t\tif (me.dropFrames > 1) {\n\t\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t\t}\n\n\t\t\tme.advance(1 + framesToDrop);\n\n\t\t\tvar endTime = Date.now();\n\n\t\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t\t// Do we have more stuff to animate?\n\t\t\tif (me.animations.length > 0) {\n\t\t\t\tme.requestAnimationFrame();\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tadvance: function(count) {\n\t\t\tvar animations = this.animations;\n\t\t\tvar animation, chart;\n\t\t\tvar i = 0;\n\n\t\t\twhile (i < animations.length) {\n\t\t\t\tanimation = animations[i];\n\t\t\t\tchart = animation.chart;\n\n\t\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\t\tchart.animating = false;\n\t\t\t\t\tanimations.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\t++i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation instead\n\t * @prop Chart.Animation#animationObject\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'animationObject', {\n\t\tget: function() {\n\t\t\treturn this;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart.Animation#chart instead\n\t * @prop Chart.Animation#chartInstance\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t */\n\tObject.defineProperty(Chart.Animation.prototype, 'chartInstance', {\n\t\tget: function() {\n\t\t\treturn this.chart;\n\t\t},\n\t\tset: function(value) {\n\t\t\tthis.chart = value;\n\t\t}\n\t});\n\n};\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, area);\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.chart.data.datasets[point._datasetIndex];\n\t\t\tvar index = point._index;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar model = point._model;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\n\t\t\tmodel.radius = custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, me.chart.options.elements.point.radius);\n\t\t\tmodel.backgroundColor = me.getPointBackgroundColor(point, index);\n\t\t\tmodel.borderColor = me.getPointBorderColor(point, index);\n\t\t\tmodel.borderWidth = me.getPointBorderWidth(point, index);\n\t\t}\n\t});\n};\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","function dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n      }\n\n      chart.update();\n    } else {\n      if (chart) {\n        chart.destroy();\n      }\n\n      this.renderChart(this.chartData, this.options);\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n    }\n\n    this.renderChart(this.chartData, this.options);\n  }\n}\n\nexport var reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport var reactiveProp = {\n  props: {\n    chartData: {\n      required: true\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport default {\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n};","import Chart from 'chart.js';\nexport function generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new Chart(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nexport var Bar = generateChart('bar-chart', 'bar');\nexport var HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nexport var Doughnut = generateChart('doughnut-chart', 'doughnut');\nexport var Line = generateChart('line-chart', 'line');\nexport var Pie = generateChart('pie-chart', 'pie');\nexport var PolarArea = generateChart('polar-chart', 'polarArea');\nexport var Radar = generateChart('radar-chart', 'radar');\nexport var Bubble = generateChart('bubble-chart', 'bubble');\nexport var Scatter = generateChart('scatter-chart', 'scatter');\nexport default {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n};","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element, elementOpts) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar color = helpers.color;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\t\tvar ratio = 0;\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\n\t\t// Cliping for Points.\n\t\t// going out from inner charArea?\n\t\tif ((chartArea !== undefined) && ((model.x < chartArea.left) || (chartArea.right * errMargin < model.x) || (model.y < chartArea.top) || (chartArea.bottom * errMargin < model.y))) {\n\t\t\t// Point fade out\n\t\t\tif (model.x < chartArea.left) {\n\t\t\t\tratio = (x - model.x) / (chartArea.left - model.x);\n\t\t\t} else if (chartArea.right * errMargin < model.x) {\n\t\t\t\tratio = (model.x - x) / (model.x - chartArea.right);\n\t\t\t} else if (model.y < chartArea.top) {\n\t\t\t\tratio = (y - model.y) / (chartArea.top - model.y);\n\t\t\t} else if (chartArea.bottom * errMargin < model.y) {\n\t\t\t\tratio = (model.y - y) / (model.y - chartArea.bottom);\n\t\t\t}\n\t\t\tratio = Math.round(ratio * 100) / 100;\n\t\t\tctx.strokeStyle = color(ctx.strokeStyle).alpha(ratio).rgbString();\n\t\t\tctx.fillStyle = color(ctx.fillStyle).alpha(ratio).rgbString();\n\t\t}\n\n\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y);\n\t}\n});\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Chart.Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tChart.Scale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Chart.Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tChart.scaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar rx = Math.min(radius, width / 2);\n\t\t\tvar ry = Math.min(radius, height / 2);\n\n\t\t\tctx.moveTo(x + rx, y);\n\t\t\tctx.lineTo(x + width - rx, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + ry);\n\t\t\tctx.lineTo(x + width, y + height - ry);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - rx, y + height);\n\t\t\tctx.lineTo(x + rx, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - ry);\n\t\t\tctx.lineTo(x, y + ry);\n\t\t\tctx.quadraticCurveTo(x, y, x + rx, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(x, y, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.beginPath();\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(x - edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x + edgeLength / 2, y + height / 3);\n\t\t\tctx.lineTo(x, y - 2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.fillRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tctx.strokeRect(x - size, y - size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = x - offset;\n\t\t\tvar topY = y - offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius / 2);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - size, y);\n\t\t\tctx.lineTo(x, y + size);\n\t\t\tctx.lineTo(x + size, y);\n\t\t\tctx.lineTo(x, y - size);\n\t\t\tctx.closePath();\n\t\t\tctx.fill();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\tctx.beginPath();\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y + radius);\n\t\t\tctx.lineTo(x, y - radius);\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x - xOffset, y + yOffset);\n\t\t\tctx.lineTo(x + xOffset, y - yOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x - radius, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + radius, y);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.stroke();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n\tctx.closePath();\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Ticks = require('./core/core.ticks');\n\nrequire('./core/core.animation')(Chart);\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\nrequire('./core/core.scaleService')(Chart);\nrequire('./core/core.scale')(Chart);\nrequire('./core/core.tooltip')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-it plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\t\t\t// Resets the visual styles\n\t\t\tthis.removeHoverStyle(arc);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tremoveHoverStyle: function(arc) {\n\t\t\tChart.DatasetController.prototype.removeHoverStyle.call(this, arc, this.chart.options.elements.arc);\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Chart.Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n\n};\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\tChart.scaleService.registerScaleType('linear', LinearScale, defaultConfig);\n\n};\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\n\t\tsetHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.hoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.hoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(rectangle) {\n\t\t\tvar dataset = this.chart.data.datasets[rectangle._datasetIndex];\n\t\t\tvar index = rectangle._index;\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar model = rectangle._model;\n\t\t\tvar rectangleElementOptions = this.chart.options.elements.rectangle;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleElementOptions.borderWidth);\n\t\t}\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var baseIteratee = require('./_baseIteratee'),\n    baseSum = require('./_baseSum');\n\n/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */\nfunction sumBy(array, iteratee) {\n  return (array && array.length)\n    ? baseSum(array, baseIteratee(iteratee, 2))\n    : 0;\n}\n\nmodule.exports = sumBy;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\t\t\tvar pointElementOptions = this.chart.options.elements.point;\n\n\t\t\tmodel.radius = custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius);\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth);\n\t\t}\n\t});\n};\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tremoveHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\n\t\t\tmodel.backgroundColor = options.backgroundColor;\n\t\t\tmodel.borderColor = options.borderColor;\n\t\t\tmodel.borderWidth = options.borderWidth;\n\t\t\tmodel.radius = options.radius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\n\t\t\treturn values;\n\t\t}\n\t});\n};\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nmodule.exports = function(Chart) {\n\n\tfunction computeTextSize(context, tick, font) {\n\t\treturn helpers.isArray(tick) ?\n\t\t\thelpers.longestText(context, font, tick) :\n\t\t\tcontext.measureText(tick).width;\n\t}\n\n\tfunction parseFontOptions(options) {\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tstyle: style,\n\t\t\tfamily: family,\n\t\t\tfont: helpers.fontString(size, style, family)\n\t\t};\n\t}\n\n\tfunction parseLineHeight(options) {\n\t\treturn helpers.options.toLineHeight(\n\t\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n\t}\n\n\tChart.Scale = Element.extend({\n\t\t/**\n\t\t * Get the padding needed for the scale\n\t\t * @method getPadding\n\t\t * @private\n\t\t * @returns {Padding} the necessary padding\n\t\t */\n\t\tgetPadding: function() {\n\t\t\tvar me = this;\n\t\t\treturn {\n\t\t\t\tleft: me.paddingLeft || 0,\n\t\t\t\ttop: me.paddingTop || 0,\n\t\t\t\tright: me.paddingRight || 0,\n\t\t\t\tbottom: me.paddingBottom || 0\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Returns the scale tick objects ({label, major})\n\t\t * @since 2.7\n\t\t */\n\t\tgetTicks: function() {\n\t\t\treturn this._ticks;\n\t\t},\n\n\t\t// These methods are ordered by lifecyle. Utilities then follow.\n\t\t// Any function defined here is inherited by all scale types.\n\t\t// Any function can be extended by the scale type\n\n\t\tmergeTicksOptions: function() {\n\t\t\tvar ticks = this.options.ticks;\n\t\t\tif (ticks.minor === false) {\n\t\t\t\tticks.minor = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (ticks.major === false) {\n\t\t\t\tticks.major = {\n\t\t\t\t\tdisplay: false\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var key in ticks) {\n\t\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbeforeUpdate: function() {\n\t\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t\t},\n\t\tupdate: function(maxWidth, maxHeight, margins) {\n\t\t\tvar me = this;\n\t\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\t\tme.beforeUpdate();\n\n\t\t\t// Absorb the master measurements\n\t\t\tme.maxWidth = maxWidth;\n\t\t\tme.maxHeight = maxHeight;\n\t\t\tme.margins = helpers.extend({\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: 0,\n\t\t\t\tbottom: 0\n\t\t\t}, margins);\n\t\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t\t// Dimensions\n\t\t\tme.beforeSetDimensions();\n\t\t\tme.setDimensions();\n\t\t\tme.afterSetDimensions();\n\n\t\t\t// Data min/max\n\t\t\tme.beforeDataLimits();\n\t\t\tme.determineDataLimits();\n\t\t\tme.afterDataLimits();\n\n\t\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t\t// around for long time and not marked as private, we can't change its structure\n\t\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t\t// use scale.getTicks() instead.\n\n\t\t\tme.beforeBuildTicks();\n\n\t\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\t\tticks = me.buildTicks() || [];\n\n\t\t\tme.afterBuildTicks();\n\n\t\t\tme.beforeTickToLabelConversion();\n\n\t\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t\t// this method and supposed to contain only string values).\n\t\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\t\tme.afterTickToLabelConversion();\n\n\t\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\t\tlabel = labels[i];\n\t\t\t\ttick = ticks[i];\n\t\t\t\tif (!tick) {\n\t\t\t\t\tticks.push(tick = {\n\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\tmajor: false\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\ttick.label = label;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme._ticks = ticks;\n\n\t\t\t// Tick Rotation\n\t\t\tme.beforeCalculateTickRotation();\n\t\t\tme.calculateTickRotation();\n\t\t\tme.afterCalculateTickRotation();\n\t\t\t// Fit\n\t\t\tme.beforeFit();\n\t\t\tme.fit();\n\t\t\tme.afterFit();\n\t\t\t//\n\t\t\tme.afterUpdate();\n\n\t\t\treturn me.minSize;\n\n\t\t},\n\t\tafterUpdate: function() {\n\t\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeSetDimensions: function() {\n\t\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t\t},\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.width = me.maxWidth;\n\t\t\t\tme.left = 0;\n\t\t\t\tme.right = me.width;\n\t\t\t} else {\n\t\t\t\tme.height = me.maxHeight;\n\n\t\t\t\t// Reset position before calculating rotation\n\t\t\t\tme.top = 0;\n\t\t\t\tme.bottom = me.height;\n\t\t\t}\n\n\t\t\t// Reset padding\n\t\t\tme.paddingLeft = 0;\n\t\t\tme.paddingTop = 0;\n\t\t\tme.paddingRight = 0;\n\t\t\tme.paddingBottom = 0;\n\t\t},\n\t\tafterSetDimensions: function() {\n\t\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t\t},\n\n\t\t// Data limits\n\t\tbeforeDataLimits: function() {\n\t\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t\t},\n\t\tdetermineDataLimits: helpers.noop,\n\t\tafterDataLimits: function() {\n\t\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t\t},\n\n\t\t//\n\t\tbeforeBuildTicks: function() {\n\t\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t\t},\n\t\tbuildTicks: helpers.noop,\n\t\tafterBuildTicks: function() {\n\t\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t\t},\n\n\t\tbeforeTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\t// Convert ticks to strings\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t\t},\n\t\tafterTickToLabelConversion: function() {\n\t\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t\t},\n\t\tcalculateTickRotation: function() {\n\t\t\tvar me = this;\n\t\t\tvar context = me.ctx;\n\t\t\tvar tickOpts = me.options.ticks;\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\t// Get the width of each grid by calculating the difference\n\t\t\t// between x offsets between 0 and 1.\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tcontext.font = tickFont.font;\n\n\t\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t\t// go back one step\n\t\t\t\t\t\tlabelRotation--;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelRotation++;\n\t\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.labelRotation = labelRotation;\n\t\t},\n\t\tafterCalculateTickRotation: function() {\n\t\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t\t},\n\n\t\t//\n\n\t\tbeforeFit: function() {\n\t\t\thelpers.callback(this.options.beforeFit, [this]);\n\t\t},\n\t\tfit: function() {\n\t\t\tvar me = this;\n\t\t\t// Reset\n\t\t\tvar minSize = me.minSize = {\n\t\t\t\twidth: 0,\n\t\t\t\theight: 0\n\t\t\t};\n\n\t\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar display = opts.display;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t\t// Width\n\t\t\tif (isHorizontal) {\n\t\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t\t} else {\n\t\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t}\n\n\t\t\t// height\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t\t} else {\n\t\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t\t}\n\n\t\t\t// Are we showing a title for the scale?\n\t\t\tif (scaleLabelOpts.display && display) {\n\t\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tminSize.height += deltaHeight;\n\t\t\t\t} else {\n\t\t\t\t\tminSize.width += deltaHeight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Don't bother fitting the ticks if we are not showing them\n\t\t\tif (tickOpts.display && display) {\n\t\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t\t// TODO - improve this calculation\n\t\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t\t}\n\n\t\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.handleMargins();\n\n\t\t\tme.width = minSize.width;\n\t\t\tme.height = minSize.height;\n\t\t},\n\n\t\t/**\n\t\t * Handle margins and padding interactions\n\t\t * @private\n\t\t */\n\t\thandleMargins: function() {\n\t\t\tvar me = this;\n\t\t\tif (me.margins) {\n\t\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t\t}\n\t\t},\n\n\t\tafterFit: function() {\n\t\t\thelpers.callback(this.options.afterFit, [this]);\n\t\t},\n\n\t\t// Shared Methods\n\t\tisHorizontal: function() {\n\t\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t\t},\n\t\tisFullWidth: function() {\n\t\t\treturn (this.options.fullWidth);\n\t\t},\n\n\t\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\t\tgetRightValue: function(rawValue) {\n\t\t\t// Null and undefined values first\n\t\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// If it is in fact an object, dive in one more level\n\t\t\tif (rawValue) {\n\t\t\t\tif (this.isHorizontal()) {\n\t\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t\t}\n\t\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Value is good, return it\n\t\t\treturn rawValue;\n\t\t},\n\n\t\t/**\n\t\t * Used to get the value to display in the tooltip for the data at the given index\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetLabelForIndex: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param value\n\t\t * @param index\n\t\t * @param datasetIndex\n\t\t */\n\t\tgetPixelForValue: helpers.noop,\n\n\t\t/**\n\t\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t * @param pixel\n\t\t */\n\t\tgetValueForPixel: helpers.noop,\n\n\t\t/**\n\t\t * Returns the location of the tick at the given index\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\t\tif (offset) {\n\t\t\t\t\tpixel += tickWidth / 2;\n\t\t\t\t}\n\n\t\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t\t},\n\n\t\t/**\n\t\t * Utility for getting the pixel location of a percentage of scale\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetPixelForDecimal: function(decimal) {\n\t\t\tvar me = this;\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\t\treturn finalVal;\n\t\t\t}\n\t\t\treturn me.top + (decimal * me.height);\n\t\t},\n\n\t\t/**\n\t\t * Returns the pixel for the minimum chart value\n\t\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t\t */\n\t\tgetBasePixel: function() {\n\t\t\treturn this.getPixelForValue(this.getBaseValue());\n\t\t},\n\n\t\tgetBaseValue: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0;\n\t\t},\n\n\t\t/**\n\t\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t\t * @private\n\t\t */\n\t\t_autoSkip: function(ticks) {\n\t\t\tvar skipRatio;\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar optionTicks = me.options.ticks.minor;\n\t\t\tvar tickCount = ticks.length;\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\t\tvar result = [];\n\t\t\tvar i, tick, shouldSkip;\n\n\t\t\t// figure out the maximum number of gridlines to show\n\t\t\tvar maxTicks;\n\t\t\tif (optionTicks.maxTicksLimit) {\n\t\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t\t}\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tskipRatio = false;\n\n\t\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t\t}\n\n\t\t\t\t// if they defined a max number of optionTicks,\n\t\t\t\t// increase skipRatio until that number is met\n\t\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\t\ttick = ticks[i];\n\n\t\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\t\tdelete tick.label;\n\t\t\t\t}\n\t\t\t\tresult.push(tick);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\n\t\t// Actually draw the scale on the canvas\n\t\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\t\tdraw: function(chartArea) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tif (!options.display) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar context = me.ctx;\n\t\t\tvar globalDefaults = defaults.global;\n\t\t\tvar optionTicks = options.ticks.minor;\n\t\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\t\tvar gridLines = options.gridLines;\n\t\t\tvar scaleLabel = options.scaleLabel;\n\n\t\t\tvar isRotated = me.labelRotation !== 0;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\t\tvar itemsToDraw = [];\n\n\t\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\t\tvar xTickStart = options.position === 'right' ? me.right : me.right - axisWidth - tl;\n\t\t\tvar xTickEnd = options.position === 'right' ? me.right + tl : me.right;\n\t\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar label = tick.label;\n\t\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t\t// Draw the first index specially\n\t\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t\t} else {\n\t\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t\t}\n\n\t\t\t\t// Common properties\n\t\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\t\tvar textAlign = 'middle';\n\t\t\t\tvar textBaseline = 'middle';\n\t\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t\t// bottom\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// top\n\t\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\t\tty1 = yTickStart;\n\t\t\t\t\tty2 = yTickEnd;\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tvar labelXOffset;\n\n\t\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t\t}\n\n\t\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t\t}\n\t\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\t\ttx1 = xTickStart;\n\t\t\t\t\ttx2 = xTickEnd;\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t\t}\n\n\t\t\t\titemsToDraw.push({\n\t\t\t\t\ttx1: tx1,\n\t\t\t\t\tty1: ty1,\n\t\t\t\t\ttx2: tx2,\n\t\t\t\t\tty2: ty2,\n\t\t\t\t\tx1: x1,\n\t\t\t\t\ty1: y1,\n\t\t\t\t\tx2: x2,\n\t\t\t\t\ty2: y2,\n\t\t\t\t\tlabelX: labelX,\n\t\t\t\t\tlabelY: labelY,\n\t\t\t\t\tglWidth: lineWidth,\n\t\t\t\t\tglColor: lineColor,\n\t\t\t\t\tglBorderDash: borderDash,\n\t\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: tick.major,\n\t\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\t\ttextAlign: textAlign\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\t\tif (gridLines.display) {\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.beginPath();\n\n\t\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t\t}\n\n\t\t\t\t\tcontext.stroke();\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\n\t\t\t\tif (optionTicks.display) {\n\t\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\t\tcontext.save();\n\t\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t\tcontext.restore();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (scaleLabel.display) {\n\t\t\t\t// Draw the scale label\n\t\t\t\tvar scaleLabelX;\n\t\t\t\tvar scaleLabelY;\n\t\t\t\tvar rotation = 0;\n\t\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t\t} else {\n\t\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t\t}\n\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\t\tcontext.rotate(rotation);\n\t\t\t\tcontext.textAlign = 'center';\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (gridLines.drawBorder) {\n\t\t\t\t// Draw the line at the edge of the axis\n\t\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\t\tvar x1 = me.left;\n\t\t\t\tvar x2 = me.right + axisWidth;\n\t\t\t\tvar y1 = me.top;\n\t\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\t\ty1 += aliasPixel;\n\t\t\t\t\ty2 += aliasPixel;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\t\tx1 += aliasPixel;\n\t\t\t\t\tx2 += aliasPixel;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\t\t\t\tcontext.moveTo(x1, y1);\n\t\t\t\tcontext.lineTo(x2, y2);\n\t\t\t\tcontext.stroke();\n\t\t\t}\n\t\t}\n\t});\n};\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [Chart.scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [Chart.scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.currentTarget || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = domNode.parentNode;\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar paddingLeft = parseInt(helpers.getStyle(container, 'padding-left'), 10);\n\t\tvar paddingRight = parseInt(helpers.getStyle(container, 'padding-right'), 10);\n\t\tvar w = container.clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = domNode.parentNode;\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar paddingTop = parseInt(helpers.getStyle(container, 'padding-top'), 10);\n\t\tvar paddingBottom = parseInt(helpers.getStyle(container, 'padding-bottom'), 10);\n\t\tvar h = container.clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || window.devicePixelRatio || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar spacing;\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (generationOptions.min && generationOptions.max && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tvar precision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, spacing.toString().length - 2);\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Chart.Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Chart.Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tChart.Scale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = function(Chart) {\n\n\tChart.scaleService = {\n\t\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t\t// use the new chart options to grab the correct scale\n\t\tconstructors: {},\n\t\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t\t// old browsers\n\n\t\t// Scale config defaults\n\t\tdefaults: {},\n\t\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\t\tthis.constructors[type] = scaleConstructor;\n\t\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t\t},\n\t\tgetScaleConstructor: function(type) {\n\t\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t\t},\n\t\tgetScaleDefaults: function(type) {\n\t\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t\t},\n\t\tupdateScaleDefaults: function(type, additions) {\n\t\t\tvar me = this;\n\t\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t\t}\n\t\t},\n\t\taddScalesToLayout: function(chart) {\n\t\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\t\tscale.position = scale.options.position;\n\t\t\t\tscale.weight = scale.options.weight;\n\t\t\t\tlayouts.addBox(chart, scale);\n\t\t\t});\n\t\t}\n\t};\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t/**\n \t * Helper method to merge the opacity into a color\n \t */\n\tfunction mergeOpacity(colorString, opacity) {\n\t\tvar color = helpers.color(colorString);\n\t\treturn color.alpha(opacity * color.alpha()).rgbaString();\n\t}\n\n\t// Helper to push or concat based on if the 2nd parameter is an array or not\n\tfunction pushOrConcat(base, toPush) {\n\t\tif (toPush) {\n\t\t\tif (helpers.isArray(toPush)) {\n\t\t\t\t// base = base.concat(toPush);\n\t\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t\t} else {\n\t\t\t\tbase.push(toPush);\n\t\t\t}\n\t\t}\n\n\t\treturn base;\n\t}\n\n\t// Private helper to create a tooltip item model\n\t// @param element : the chart element (point, arc, bar) to create the tooltip item for\n\t// @return : new tooltip item\n\tfunction createTooltipItem(element) {\n\t\tvar xScale = element._xScale;\n\t\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\t\tvar index = element._index;\n\t\tvar datasetIndex = element._datasetIndex;\n\n\t\treturn {\n\t\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\t\tindex: index,\n\t\t\tdatasetIndex: datasetIndex,\n\t\t\tx: element._model.x,\n\t\t\ty: element._model.y\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the reset model for the tooltip\n\t * @param tooltipOpts {Object} the tooltip options\n\t */\n\tfunction getBaseModel(tooltipOpts) {\n\t\tvar globalDefaults = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\treturn {\n\t\t\t// Positioning\n\t\t\txPadding: tooltipOpts.xPadding,\n\t\t\tyPadding: tooltipOpts.yPadding,\n\t\t\txAlign: tooltipOpts.xAlign,\n\t\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t\t// Body\n\t\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t\t// Title\n\t\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t\t// Footer\n\t\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t\t// Appearance\n\t\t\tcaretSize: tooltipOpts.caretSize,\n\t\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\t\topacity: 0,\n\t\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\t\tdisplayColors: tooltipOpts.displayColors,\n\t\t\tborderColor: tooltipOpts.borderColor,\n\t\t\tborderWidth: tooltipOpts.borderWidth\n\t\t};\n\t}\n\n\t/**\n\t * Get the size of the tooltip\n\t */\n\tfunction getTooltipSize(tooltip, model) {\n\t\tvar ctx = tooltip._chart.ctx;\n\n\t\tvar height = model.yPadding * 2; // Tooltip Padding\n\t\tvar width = 0;\n\n\t\t// Count of all lines in the body\n\t\tvar body = model.body;\n\t\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t\t}, 0);\n\t\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\t\tvar titleLineCount = model.title.length;\n\t\tvar footerLineCount = model.footer.length;\n\t\tvar titleFontSize = model.titleFontSize;\n\t\tvar bodyFontSize = model.bodyFontSize;\n\t\tvar footerFontSize = model.footerFontSize;\n\n\t\theight += titleLineCount * titleFontSize; // Title Lines\n\t\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\t\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\t\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\t\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\t\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\t\theight += footerLineCount * (footerFontSize); // Footer Lines\n\t\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t\t// Title width\n\t\tvar widthPadding = 0;\n\t\tvar maxLineWidth = function(line) {\n\t\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t\t};\n\n\t\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\t\thelpers.each(model.title, maxLineWidth);\n\n\t\t// Body width\n\t\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\t\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t\t// Body lines may include some extra width due to the color box\n\t\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\t\thelpers.each(body, function(bodyItem) {\n\t\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t\t});\n\n\t\t// Reset back to 0\n\t\twidthPadding = 0;\n\n\t\t// Footer width\n\t\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\t\thelpers.each(model.footer, maxLineWidth);\n\n\t\t// Add padding\n\t\twidth += 2 * model.xPadding;\n\n\t\treturn {\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\t/**\n\t * Helper to get the alignment of a tooltip given the size\n\t */\n\tfunction determineAlignment(tooltip, size) {\n\t\tvar model = tooltip._model;\n\t\tvar chart = tooltip._chart;\n\t\tvar chartArea = tooltip._chart.chartArea;\n\t\tvar xAlign = 'center';\n\t\tvar yAlign = 'center';\n\n\t\tif (model.y < size.height) {\n\t\t\tyAlign = 'top';\n\t\t} else if (model.y > (chart.height - size.height)) {\n\t\t\tyAlign = 'bottom';\n\t\t}\n\n\t\tvar lf, rf; // functions to determine left, right alignment\n\t\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\t\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\t\tvar midX = (chartArea.left + chartArea.right) / 2;\n\t\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\t\tif (yAlign === 'center') {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= midX;\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x > midX;\n\t\t\t};\n\t\t} else {\n\t\t\tlf = function(x) {\n\t\t\t\treturn x <= (size.width / 2);\n\t\t\t};\n\t\t\trf = function(x) {\n\t\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t\t};\n\t\t}\n\n\t\tolf = function(x) {\n\t\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t\t};\n\t\torf = function(x) {\n\t\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t\t};\n\t\tyf = function(y) {\n\t\t\treturn y <= midY ? 'top' : 'bottom';\n\t\t};\n\n\t\tif (lf(model.x)) {\n\t\t\txAlign = 'left';\n\n\t\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\t\tif (olf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t} else if (rf(model.x)) {\n\t\t\txAlign = 'right';\n\n\t\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\t\tif (orf(model.x)) {\n\t\t\t\txAlign = 'center';\n\t\t\t\tyAlign = yf(model.y);\n\t\t\t}\n\t\t}\n\n\t\tvar opts = tooltip._options;\n\t\treturn {\n\t\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t\t};\n\t}\n\n\t/**\n\t * @Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n\t */\n\tfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t\t// Background Position\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\n\t\tvar caretSize = vm.caretSize;\n\t\tvar caretPadding = vm.caretPadding;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = alignment.xAlign;\n\t\tvar yAlign = alignment.yAlign;\n\t\tvar paddingAndSize = caretSize + caretPadding;\n\t\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\t\tif (xAlign === 'right') {\n\t\t\tx -= size.width;\n\t\t} else if (xAlign === 'center') {\n\t\t\tx -= (size.width / 2);\n\t\t\tif (x + size.width > chart.width) {\n\t\t\t\tx = chart.width - size.width;\n\t\t\t}\n\t\t\tif (x < 0) {\n\t\t\t\tx = 0;\n\t\t\t}\n\t\t}\n\n\t\tif (yAlign === 'top') {\n\t\t\ty += paddingAndSize;\n\t\t} else if (yAlign === 'bottom') {\n\t\t\ty -= size.height + paddingAndSize;\n\t\t} else {\n\t\t\ty -= (size.height / 2);\n\t\t}\n\n\t\tif (yAlign === 'center') {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx += paddingAndSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx -= paddingAndSize;\n\t\t\t}\n\t\t} else if (xAlign === 'left') {\n\t\t\tx -= radiusAndPadding;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx += radiusAndPadding;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n\n\tChart.Tooltip = Element.extend({\n\t\tinitialize: function() {\n\t\t\tthis._model = getBaseModel(this._options);\n\t\t\tthis._lastActive = [];\n\t\t},\n\n\t\t// Get the title\n\t\t// Args are: (tooltipItem, data)\n\t\tgetTitle: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\t\t\tvar callbacks = opts.callbacks;\n\n\t\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\t\tvar title = callbacks.title.apply(me, arguments);\n\t\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeTitle);\n\t\t\tlines = pushOrConcat(lines, title);\n\t\t\tlines = pushOrConcat(lines, afterTitle);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBeforeBody: function() {\n\t\t\tvar lines = this._options.callbacks.beforeBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetBody: function(tooltipItems, data) {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\t\t\tvar bodyItems = [];\n\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tvar bodyItem = {\n\t\t\t\t\tbefore: [],\n\t\t\t\t\tlines: [],\n\t\t\t\t\tafter: []\n\t\t\t\t};\n\t\t\t\tpushOrConcat(bodyItem.before, callbacks.beforeLabel.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\t\tpushOrConcat(bodyItem.after, callbacks.afterLabel.call(me, tooltipItem, data));\n\n\t\t\t\tbodyItems.push(bodyItem);\n\t\t\t});\n\n\t\t\treturn bodyItems;\n\t\t},\n\n\t\t// Args are: (tooltipItem, data)\n\t\tgetAfterBody: function() {\n\t\t\tvar lines = this._options.callbacks.afterBody.apply(this, arguments);\n\t\t\treturn helpers.isArray(lines) ? lines : lines !== undefined ? [lines] : [];\n\t\t},\n\n\t\t// Get the footer and beforeFooter and afterFooter lines\n\t\t// Args are: (tooltipItem, data)\n\t\tgetFooter: function() {\n\t\t\tvar me = this;\n\t\t\tvar callbacks = me._options.callbacks;\n\n\t\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\t\tvar lines = [];\n\t\t\tlines = pushOrConcat(lines, beforeFooter);\n\t\t\tlines = pushOrConcat(lines, footer);\n\t\t\tlines = pushOrConcat(lines, afterFooter);\n\n\t\t\treturn lines;\n\t\t},\n\n\t\tupdate: function(changed) {\n\t\t\tvar me = this;\n\t\t\tvar opts = me._options;\n\n\t\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t\t// which breaks any animations.\n\t\t\tvar existingModel = me._model;\n\t\t\tvar model = me._model = getBaseModel(opts);\n\t\t\tvar active = me._active;\n\n\t\t\tvar data = me._data;\n\n\t\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\t\tvar alignment = {\n\t\t\t\txAlign: existingModel.xAlign,\n\t\t\t\tyAlign: existingModel.yAlign\n\t\t\t};\n\t\t\tvar backgroundPoint = {\n\t\t\t\tx: existingModel.x,\n\t\t\t\ty: existingModel.y\n\t\t\t};\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: existingModel.width,\n\t\t\t\theight: existingModel.height\n\t\t\t};\n\t\t\tvar tooltipPosition = {\n\t\t\t\tx: existingModel.caretX,\n\t\t\t\ty: existingModel.caretY\n\t\t\t};\n\n\t\t\tvar i, len;\n\n\t\t\tif (active.length) {\n\t\t\t\tmodel.opacity = 1;\n\n\t\t\t\tvar labelColors = [];\n\t\t\t\tvar labelTextColors = [];\n\t\t\t\ttooltipPosition = Chart.Tooltip.positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\t\tvar tooltipItems = [];\n\t\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\t\tif (opts.filter) {\n\t\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\t\tif (opts.itemSort) {\n\t\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Determine colors for boxes\n\t\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t\t});\n\n\n\t\t\t\t// Build the Text Lines\n\t\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t\t// Initial positioning and colors\n\t\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\t\tmodel.labelColors = labelColors;\n\t\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t\t// data points\n\t\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t\t// We need to determine alignment of the tooltip\n\t\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t\t// Final Size and Position\n\t\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t\t} else {\n\t\t\t\tmodel.opacity = 0;\n\t\t\t}\n\n\t\t\tmodel.xAlign = alignment.xAlign;\n\t\t\tmodel.yAlign = alignment.yAlign;\n\t\t\tmodel.x = backgroundPoint.x;\n\t\t\tmodel.y = backgroundPoint.y;\n\t\t\tmodel.width = tooltipSize.width;\n\t\t\tmodel.height = tooltipSize.height;\n\n\t\t\t// Point where the caret on the tooltip points to\n\t\t\tmodel.caretX = tooltipPosition.x;\n\t\t\tmodel.caretY = tooltipPosition.y;\n\n\t\t\tme._model = model;\n\n\t\t\tif (changed && opts.custom) {\n\t\t\t\topts.custom.call(me, model);\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\t\tdrawCaret: function(tooltipPoint, size) {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\t\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t\t},\n\t\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\t\tvar x1, x2, x3, y1, y2, y3;\n\t\t\tvar caretSize = vm.caretSize;\n\t\t\tvar cornerRadius = vm.cornerRadius;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar ptX = tooltipPoint.x;\n\t\t\tvar ptY = tooltipPoint.y;\n\t\t\tvar width = size.width;\n\t\t\tvar height = size.height;\n\n\t\t\tif (yAlign === 'center') {\n\t\t\t\ty2 = ptY + (height / 2);\n\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx1 = ptX;\n\t\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\t\ty3 = y2 - caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = ptX + width;\n\t\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\t\tx3 = x1;\n\n\t\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\t\ty3 = y2 + caretSize;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (xAlign === 'left') {\n\t\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else if (xAlign === 'right') {\n\t\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t} else {\n\t\t\t\t\tx2 = vm.caretX;\n\t\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\t\tx3 = x2 + caretSize;\n\t\t\t\t}\n\t\t\t\tif (yAlign === 'top') {\n\t\t\t\t\ty1 = ptY;\n\t\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = ptY + height;\n\t\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\t\ty3 = y1;\n\t\t\t\t\t// invert drawing order\n\t\t\t\t\tvar tmp = x3;\n\t\t\t\t\tx3 = x1;\n\t\t\t\t\tx1 = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t\t},\n\t\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\t\tvar title = vm.title;\n\n\t\t\tif (title.length) {\n\t\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\t\tvar i, len;\n\t\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\t\tvar bodySpacing = vm.bodySpacing;\n\t\t\tvar body = vm.body;\n\n\t\t\tctx.textAlign = vm._bodyAlign;\n\t\t\tctx.textBaseline = 'top';\n\t\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t\t// Before Body\n\t\t\tvar xLinePadding = 0;\n\t\t\tvar fillLineOfText = function(line) {\n\t\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t\t};\n\n\t\t\t// Before body lines\n\t\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\t\tvar drawColorBoxes = vm.displayColors;\n\t\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t\t// Draw body lines now\n\t\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Border\n\t\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t\t// Inner square\n\t\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tfillLineOfText(line);\n\t\t\t\t});\n\n\t\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t\t});\n\n\t\t\t// Reset back to 0 for after body\n\t\t\txLinePadding = 0;\n\n\t\t\t// After body lines\n\t\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t\t},\n\t\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\t\tvar footer = vm.footer;\n\n\t\t\tif (footer.length) {\n\t\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\t\thelpers.each(footer, function(line) {\n\t\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\tvar xAlign = vm.xAlign;\n\t\t\tvar yAlign = vm.yAlign;\n\t\t\tvar x = pt.x;\n\t\t\tvar y = pt.y;\n\t\t\tvar width = tooltipSize.width;\n\t\t\tvar height = tooltipSize.height;\n\t\t\tvar radius = vm.cornerRadius;\n\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tif (yAlign === 'top') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tif (yAlign === 'bottom') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t\t}\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\n\t\t\tctx.fill();\n\n\t\t\tif (vm.borderWidth > 0) {\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\tdraw: function() {\n\t\t\tvar ctx = this._chart.ctx;\n\t\t\tvar vm = this._view;\n\n\t\t\tif (vm.opacity === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar tooltipSize = {\n\t\t\t\twidth: vm.width,\n\t\t\t\theight: vm.height\n\t\t\t};\n\t\t\tvar pt = {\n\t\t\t\tx: vm.x,\n\t\t\t\ty: vm.y\n\t\t\t};\n\n\t\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t\t// Truthy/falsey value for empty tooltip\n\t\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t\t// Draw Background\n\t\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t\t// Draw Title, Body, and Footer\n\t\t\t\tpt.x += vm.xPadding;\n\t\t\t\tpt.y += vm.yPadding;\n\n\t\t\t\t// Titles\n\t\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t\t// Body\n\t\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t\t// Footer\n\t\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event - The event to handle\n\t\t * @returns {Boolean} true if the tooltip changed\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me._options;\n\t\t\tvar changed = false;\n\n\t\t\tme._lastActive = me._lastActive || [];\n\n\t\t\t// Find Active Elements for tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme._active = [];\n\t\t\t} else {\n\t\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t\t}\n\n\t\t\t// Remember Last Actives\n\t\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t\t// Only handle target event on tooltip change\n\t\t\tif (changed) {\n\t\t\t\tme._lastActive = me._active;\n\n\t\t\t\tif (options.enabled || options.custom) {\n\t\t\t\t\tme._eventPosition = {\n\t\t\t\t\t\tx: e.x,\n\t\t\t\t\t\ty: e.y\n\t\t\t\t\t};\n\n\t\t\t\t\tme.update(true);\n\t\t\t\t\tme.pivot();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * @namespace Chart.Tooltip.positioners\n\t */\n\tChart.Tooltip.positioners = {\n\t\t/**\n\t\t * Average mode places the tooltip at the average position of the elements shown\n\t\t * @function Chart.Tooltip.positioners.average\n\t\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t\t * @returns {Point} tooltip position\n\t\t */\n\t\taverage: function(elements) {\n\t\t\tif (!elements.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tvar i, len;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tvar count = 0;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\t\tx += pos.x;\n\t\t\t\t\ty += pos.y;\n\t\t\t\t\t++count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: Math.round(x / count),\n\t\t\t\ty: Math.round(y / count)\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Gets the tooltip position nearest of the item nearest to the event position\n\t\t * @function Chart.Tooltip.positioners.nearest\n\t\t * @param elements {Chart.Element[]} the tooltip elements\n\t\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t\t * @returns {Point} the tooltip position\n\t\t */\n\t\tnearest: function(elements, eventPosition) {\n\t\t\tvar x = eventPosition.x;\n\t\t\tvar y = eventPosition.y;\n\t\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\t\tvar i, len, nearestElement;\n\n\t\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\t\tvar el = elements[i];\n\t\t\t\tif (el && el.hasValue()) {\n\t\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\t\tif (d < minDistance) {\n\t\t\t\t\t\tminDistance = d;\n\t\t\t\t\t\tnearestElement = el;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (nearestElement) {\n\t\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\t\tx = tp.x;\n\t\t\t\ty = tp.y;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t}\n\t};\n};\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n"],"sourceRoot":""}